{"/home/travis/build/npmtest/node-npmtest-bytebuffer/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_bytebuffer */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/lib.npmtest_bytebuffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/lib.npmtest_bytebuffer.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":55}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":61}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_bytebuffer */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_bytebuffer = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_bytebuffer = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":54}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":68},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-bytebuffer && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_bytebuffer */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_bytebuffer","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_bytebuffer.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_bytebuffer.rollup.js'] =","            local.assetsDict['/assets.npmtest_bytebuffer.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_bytebuffer.__dirname + '/lib.npmtest_bytebuffer.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/dist/bytebuffer-node.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/dist/bytebuffer-node.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":1,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":1,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":1,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":1,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":1,"195":1,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":1,"218":1,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":1,"235":1,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":1,"258":1,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":1,"273":1,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":1,"300":1,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":1,"322":1,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":1,"349":1,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":1,"369":1,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":1,"400":1,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":1,"425":1,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":1,"456":1,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":1,"480":1,"481":1,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":1,"530":1,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":1,"565":1,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":1,"614":1,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":1,"649":1,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":1,"671":1,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":1,"686":1,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":1,"708":1,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":1,"723":1,"724":1,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":1,"736":0,"737":1,"738":0,"739":1,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":1,"769":0,"770":1,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":1,"796":0,"797":0,"798":0,"799":0,"800":0,"801":1,"802":1,"803":1,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":1,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":1,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":1,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":1,"878":0,"879":1,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":1,"927":0,"928":0,"929":0,"930":0,"931":0,"932":1,"933":0,"934":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":1,"961":0,"962":0,"963":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":0,"979":0,"980":1,"981":0,"982":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":1,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":1,"1033":1,"1034":1,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":1,"1057":1,"1058":0,"1059":1,"1060":0,"1061":0,"1062":0,"1063":1,"1064":1,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":0,"1100":0,"1101":0,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":1,"1109":1,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":0,"1134":0,"1135":1,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":1,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1162":0,"1163":0,"1164":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":1,"1182":0,"1183":0,"1184":1,"1185":0,"1186":0,"1187":1,"1188":0,"1189":1,"1190":0,"1191":0,"1192":0,"1193":0,"1194":1,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1204":0,"1205":1,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1223":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":1,"1238":0,"1239":0,"1240":0,"1241":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1253":0,"1254":0,"1255":0,"1256":0,"1257":0,"1258":0,"1259":0,"1260":1,"1261":0,"1262":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":1,"1283":0,"1284":0,"1285":0,"1286":0,"1287":1,"1288":0,"1289":0,"1290":0,"1291":0,"1292":0,"1293":0,"1294":0,"1295":0,"1296":0,"1297":0,"1298":0,"1299":0,"1300":0,"1301":0,"1302":0,"1303":0,"1304":0,"1305":0,"1306":0,"1307":0,"1308":0,"1309":0,"1310":0,"1311":0,"1312":0,"1313":0,"1314":0,"1315":0,"1316":1,"1317":0,"1318":0,"1319":0,"1320":1,"1321":0,"1322":0,"1323":0,"1324":0,"1325":0,"1326":0,"1327":0,"1328":0,"1329":0,"1330":1,"1331":0,"1332":0,"1333":0,"1334":0,"1335":0,"1336":1,"1337":0,"1338":0,"1339":1,"1340":0,"1341":0,"1342":1,"1343":0,"1344":0,"1345":0,"1346":0,"1347":0,"1348":0,"1349":0,"1350":0,"1351":0,"1352":0,"1353":0,"1354":0,"1355":0,"1356":0,"1357":0,"1358":0,"1359":0,"1360":0,"1361":0,"1362":0,"1363":0,"1364":0,"1365":0,"1366":0,"1367":0,"1368":0,"1369":0,"1370":0,"1371":0,"1372":0,"1373":0,"1374":0,"1375":1,"1376":0,"1377":0,"1378":1,"1379":0,"1380":0,"1381":0,"1382":1,"1383":0,"1384":1,"1385":0,"1386":0,"1387":0,"1388":0,"1389":0,"1390":1,"1391":0,"1392":0,"1393":0,"1394":0,"1395":0,"1396":0,"1397":0,"1398":0,"1399":0,"1400":0,"1401":0,"1402":1,"1403":0,"1404":0,"1405":0,"1406":0,"1407":0,"1408":0,"1409":0,"1410":0,"1411":0,"1412":0,"1413":0,"1414":0,"1415":0,"1416":0,"1417":0,"1418":0,"1419":0,"1420":1,"1421":0,"1422":0,"1423":0,"1424":0,"1425":0,"1426":0,"1427":0,"1428":0,"1429":0,"1430":0,"1431":1,"1432":0,"1433":0,"1434":0,"1435":0,"1436":0,"1437":0,"1438":0,"1439":0,"1440":0,"1441":0,"1442":0,"1443":0,"1444":0,"1445":0,"1446":0,"1447":0,"1448":0,"1449":1,"1450":0,"1451":0,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1457":0,"1458":0,"1459":0,"1460":0,"1461":0,"1462":0,"1463":0,"1464":0,"1465":0,"1466":0,"1467":1,"1468":0,"1469":0,"1470":0,"1471":0,"1472":0,"1473":0,"1474":0,"1475":0,"1476":0,"1477":0,"1478":0,"1479":0,"1480":0,"1481":0,"1482":0,"1483":0,"1484":0,"1485":1,"1486":0,"1487":0,"1488":0,"1489":0,"1490":0,"1491":0,"1492":0,"1493":0,"1494":0,"1495":0,"1496":0,"1497":0,"1498":1,"1499":0,"1500":0,"1501":0,"1502":0,"1503":0,"1504":0,"1505":0,"1506":0,"1507":0,"1508":1,"1509":0,"1510":0,"1511":1,"1512":0,"1513":1,"1514":0,"1515":1,"1516":0,"1517":0,"1518":0,"1519":0,"1520":0,"1521":0,"1522":0,"1523":0,"1524":0,"1525":1,"1526":0,"1527":0,"1528":1,"1529":0,"1530":0,"1531":0,"1532":0,"1533":0,"1534":0,"1535":0,"1536":0,"1537":0,"1538":0,"1539":0,"1540":0,"1541":0,"1542":0,"1543":0,"1544":0,"1545":0,"1546":0,"1547":0,"1548":0,"1549":0,"1550":0,"1551":0,"1552":0,"1553":0,"1554":0,"1555":0,"1556":0,"1557":1,"1558":0,"1559":0,"1560":0,"1561":0,"1562":0,"1563":0,"1564":0,"1565":0,"1566":0,"1567":0,"1568":0,"1569":0,"1570":0,"1571":0,"1572":0,"1573":0,"1574":0,"1575":0,"1576":0,"1577":0,"1578":0,"1579":0,"1580":0,"1581":0,"1582":0,"1583":0,"1584":0,"1585":0,"1586":0,"1587":0,"1588":0,"1589":0,"1590":0,"1591":0,"1592":0,"1593":0,"1594":0,"1595":0,"1596":0,"1597":0,"1598":0,"1599":0,"1600":0,"1601":0,"1602":0,"1603":0,"1604":0,"1605":0,"1606":0,"1607":0,"1608":0,"1609":0,"1610":0,"1611":0,"1612":0,"1613":0,"1614":0,"1615":0,"1616":0,"1617":0,"1618":0,"1619":0,"1620":0,"1621":0,"1622":0,"1623":0,"1624":0,"1625":0,"1626":0,"1627":0,"1628":0,"1629":0,"1630":0,"1631":0,"1632":0,"1633":0,"1634":0,"1635":0,"1636":0,"1637":0,"1638":1,"1639":0,"1640":0,"1641":0,"1642":0,"1643":0,"1644":0,"1645":0,"1646":0,"1647":0,"1648":0,"1649":0,"1650":0,"1651":1,"1652":0,"1653":0,"1654":0,"1655":0,"1656":0,"1657":0,"1658":0,"1659":0,"1660":0,"1661":1,"1662":1,"1663":1,"1664":1,"1665":0,"1666":0,"1667":0,"1668":0,"1669":0,"1670":0,"1671":0,"1672":0,"1673":0,"1674":0,"1675":0,"1676":0,"1677":0,"1678":1,"1679":0,"1680":0,"1681":0,"1682":0,"1683":0,"1684":0,"1685":0,"1686":0,"1687":0,"1688":0,"1689":0,"1690":0,"1691":0,"1692":0,"1693":0,"1694":0,"1695":1,"1696":0,"1697":0,"1698":0,"1699":0,"1700":0,"1701":0,"1702":0,"1703":0,"1704":0,"1705":0,"1706":0,"1707":0,"1708":0,"1709":1,"1710":0,"1711":0,"1712":0,"1713":0,"1714":0,"1715":0,"1716":0,"1717":0,"1718":0,"1719":1,"1720":0,"1721":0,"1722":1,"1723":0,"1724":0,"1725":1,"1726":0,"1727":1,"1728":0,"1729":0,"1730":0,"1731":0,"1732":1,"1733":0,"1734":0,"1735":0,"1736":0,"1737":0,"1738":1,"1739":1,"1740":0,"1741":0,"1742":0,"1743":0,"1744":0,"1745":0,"1746":0,"1747":0,"1748":0,"1749":0,"1750":0,"1751":0,"1752":0,"1753":0,"1754":1,"1755":0,"1756":0,"1757":0,"1758":0,"1759":0,"1760":0,"1761":0,"1762":1,"1763":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[1,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[1,0],"282":[0,0],"283":[0,0],"284":[0,0],"285":[0,0],"286":[0,0],"287":[0,0],"288":[0,0],"289":[0,0],"290":[0,0],"291":[0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0],"296":[0,0],"297":[0,0],"298":[0,0],"299":[0,0],"300":[0,0],"301":[0,0],"302":[0,0],"303":[0,0],"304":[0,0],"305":[0,0],"306":[0,0],"307":[0,0],"308":[0,0],"309":[0,0],"310":[0,0],"311":[0,0],"312":[0,0],"313":[0,0],"314":[0,0,0,0,0,0,0,0,0,0],"315":[0,0],"316":[0,0],"317":[0,0],"318":[0,0],"319":[0,0],"320":[0,0],"321":[0,0],"322":[0,0],"323":[0,0],"324":[0,0],"325":[0,0],"326":[0,0],"327":[0,0],"328":[0,0],"329":[0,0],"330":[0,0],"331":[0,0],"332":[0,0],"333":[0,0,0],"334":[0,0],"335":[0,0,0],"336":[0,0],"337":[0,0,0],"338":[0,0],"339":[0,0,0],"340":[0,0],"341":[0,0,0],"342":[0,0],"343":[0,0,0],"344":[0,0],"345":[0,0,0],"346":[0,0],"347":[0,0,0],"348":[0,0],"349":[0,0,0],"350":[0,0],"351":[0,0],"352":[0,0],"353":[0,0],"354":[0,0],"355":[0,0],"356":[0,0],"357":[0,0],"358":[0,0],"359":[0,0],"360":[0,0],"361":[0,0],"362":[0,0],"363":[0,0],"364":[0,0],"365":[0,0],"366":[0,0],"367":[0,0],"368":[0,0],"369":[0,0],"370":[0,0],"371":[0,0],"372":[0,0],"373":[0,0],"374":[0,0],"375":[0,0],"376":[0,0],"377":[0,0],"378":[0,0],"379":[0,0],"380":[0,0],"381":[0,0],"382":[0,0],"383":[0,0],"384":[0,0],"385":[0,0],"386":[0,0],"387":[0,0],"388":[0,0],"389":[0,0],"390":[0,0],"391":[0,0],"392":[0,0],"393":[0,0],"394":[0,0],"395":[0,0],"396":[0,0],"397":[0,0],"398":[0,0],"399":[0,0],"400":[0,0],"401":[0,0],"402":[0,0],"403":[0,0],"404":[0,0],"405":[0,0],"406":[0,0],"407":[0,0],"408":[0,0],"409":[0,0],"410":[0,0],"411":[0,0],"412":[0,0],"413":[0,0],"414":[0,0],"415":[0,0],"416":[0,0],"417":[0,0],"418":[0,0],"419":[0,0],"420":[0,0],"421":[0,0],"422":[0,0],"423":[0,0],"424":[0,0],"425":[0,0],"426":[0,0],"427":[0,0],"428":[0,0],"429":[0,0],"430":[0,0],"431":[0,0],"432":[0,0],"433":[0,0],"434":[0,0],"435":[0,0],"436":[0,0],"437":[0,0],"438":[0,0],"439":[0,0],"440":[0,0],"441":[0,0],"442":[0,0],"443":[0,0],"444":[0,0],"445":[0,0],"446":[0,0],"447":[0,0],"448":[0,0],"449":[0,0],"450":[0,0],"451":[0,0],"452":[0,0],"453":[0,0],"454":[0,0],"455":[0,0],"456":[0,0],"457":[0,0],"458":[0,0],"459":[0,0],"460":[0,0],"461":[0,0,0],"462":[0,0],"463":[0,0],"464":[0,0],"465":[0,0],"466":[0,0],"467":[0,0],"468":[0,0],"469":[0,0],"470":[0,0],"471":[0,0],"472":[0,0],"473":[0,0],"474":[0,0],"475":[0,0,0],"476":[0,0],"477":[0,0],"478":[0,0],"479":[0,0],"480":[0,0],"481":[0,0],"482":[0,0],"483":[0,0],"484":[0,0],"485":[0,0],"486":[0,0],"487":[0,0],"488":[0,0],"489":[0,0],"490":[0,0],"491":[0,0],"492":[0,0],"493":[0,0],"494":[0,0],"495":[0,0],"496":[0,0],"497":[0,0],"498":[0,0],"499":[0,0],"500":[0,0],"501":[0,0],"502":[0,0],"503":[0,0],"504":[0,0],"505":[0,0,0],"506":[0,0],"507":[0,0],"508":[0,0],"509":[0,0],"510":[0,0],"511":[0,0],"512":[0,0],"513":[0,0],"514":[0,0],"515":[0,0],"516":[0,0],"517":[0,0],"518":[0,0],"519":[0,0],"520":[0,0],"521":[0,0],"522":[0,0],"523":[0,0],"524":[0,0],"525":[0,0],"526":[0,0],"527":[0,0],"528":[0,0],"529":[0,0],"530":[0,0],"531":[0,0],"532":[0,0],"533":[0,0],"534":[0,0],"535":[0,0],"536":[0,0],"537":[0,0],"538":[0,0],"539":[0,0],"540":[0,0],"541":[0,0],"542":[0,0],"543":[0,0],"544":[0,0],"545":[0,0],"546":[0,0,0],"547":[0,0],"548":[0,0],"549":[0,0],"550":[0,0],"551":[0,0],"552":[0,0],"553":[0,0],"554":[0,0],"555":[0,0],"556":[0,0],"557":[0,0],"558":[0,0],"559":[0,0],"560":[0,0],"561":[0,0],"562":[0,0,0],"563":[0,0],"564":[0,0],"565":[0,0],"566":[0,0],"567":[0,0],"568":[0,0],"569":[0,0,0],"570":[0,0],"571":[0,0],"572":[0,0],"573":[0,0],"574":[0,0],"575":[0,0],"576":[0,0],"577":[0,0],"578":[0,0],"579":[0,0,0],"580":[0,0],"581":[0,0],"582":[0,0],"583":[0,0,0,0,0,0,0],"584":[0,0],"585":[0,0],"586":[0,0],"587":[0,0,0],"588":[0,0],"589":[0,0],"590":[0,0],"591":[0,0,0],"592":[0,0],"593":[0,0],"594":[0,0],"595":[0,0],"596":[0,0],"597":[0,0],"598":[0,0],"599":[0,0,0],"600":[0,0],"601":[0,0],"602":[0,0],"603":[0,0],"604":[0,0],"605":[0,0],"606":[0,0],"607":[0,0],"608":[0,0],"609":[0,0,0],"610":[0,0],"611":[0,0],"612":[0,0],"613":[0,0,0,0,0,0,0,0,0],"614":[0,0],"615":[0,0],"616":[0,0,0],"617":[0,0],"618":[0,0],"619":[0,0],"620":[0,0],"621":[0,0],"622":[0,0],"623":[0,0],"624":[0,0],"625":[0,0],"626":[0,0],"627":[0,0],"628":[0,0],"629":[0,0],"630":[0,0],"631":[0,0],"632":[0,0],"633":[0,0],"634":[0,0],"635":[0,0],"636":[0,0,0],"637":[0,0],"638":[0,0],"639":[0,0],"640":[0,0],"641":[0,0],"642":[0,0],"643":[0,0],"644":[0,0],"645":[0,0],"646":[0,0],"647":[0,0],"648":[0,0],"649":[0,0],"650":[0,0,0],"651":[0,0],"652":[0,0],"653":[0,0],"654":[0,0],"655":[0,0],"656":[0,0],"657":[0,0],"658":[0,0],"659":[0,0],"660":[0,0],"661":[0,0],"662":[0,0],"663":[0,0,0],"664":[0,0],"665":[0,0,0,0],"666":[0,0],"667":[0,0],"668":[0,0],"669":[0,0],"670":[0,0],"671":[0,0],"672":[0,0],"673":[0,0],"674":[0,0],"675":[0,0],"676":[0,0],"677":[0,0],"678":[0,0],"679":[0,0],"680":[0,0],"681":[0,0],"682":[0,0],"683":[0,0],"684":[0,0],"685":[0,0],"686":[0,0],"687":[0,0],"688":[0,0],"689":[0,0],"690":[0,0],"691":[0,0],"692":[0,0],"693":[0,0],"694":[0,0,0],"695":[0,0],"696":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0},"fnMap":{"1":{"name":"(anonymous_1)","line":23,"loc":{"start":{"line":23,"column":18},"end":{"line":23,"column":29}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":21},"end":{"line":43,"column":64}}},"3":{"name":"stringSource","line":205,"loc":{"start":{"line":205,"column":4},"end":{"line":205,"column":29}}},"4":{"name":"(anonymous_4)","line":206,"loc":{"start":{"line":206,"column":24},"end":{"line":206,"column":35}}},"5":{"name":"stringDestination","line":217,"loc":{"start":{"line":217,"column":4},"end":{"line":217,"column":33}}},"6":{"name":"(anonymous_6)","line":218,"loc":{"start":{"line":218,"column":37},"end":{"line":218,"column":48}}},"7":{"name":"(anonymous_7)","line":233,"loc":{"start":{"line":233,"column":26},"end":{"line":233,"column":37}}},"8":{"name":"(anonymous_8)","line":246,"loc":{"start":{"line":246,"column":26},"end":{"line":246,"column":69}}},"9":{"name":"(anonymous_9)","line":262,"loc":{"start":{"line":262,"column":24},"end":{"line":262,"column":76}}},"10":{"name":"(anonymous_10)","line":297,"loc":{"start":{"line":297,"column":30},"end":{"line":297,"column":43}}},"11":{"name":"(anonymous_11)","line":305,"loc":{"start":{"line":305,"column":22},"end":{"line":305,"column":33}}},"12":{"name":"(anonymous_12)","line":321,"loc":{"start":{"line":321,"column":22},"end":{"line":321,"column":73}}},"13":{"name":"(anonymous_13)","line":396,"loc":{"start":{"line":396,"column":38},"end":{"line":396,"column":62}}},"14":{"name":"(anonymous_14)","line":448,"loc":{"start":{"line":448,"column":37},"end":{"line":448,"column":54}}},"15":{"name":"(anonymous_15)","line":491,"loc":{"start":{"line":491,"column":36},"end":{"line":491,"column":61}}},"16":{"name":"(anonymous_16)","line":528,"loc":{"start":{"line":528,"column":36},"end":{"line":528,"column":60}}},"17":{"name":"(anonymous_17)","line":567,"loc":{"start":{"line":567,"column":35},"end":{"line":567,"column":52}}},"18":{"name":"(anonymous_18)","line":599,"loc":{"start":{"line":599,"column":37},"end":{"line":599,"column":61}}},"19":{"name":"(anonymous_19)","line":638,"loc":{"start":{"line":638,"column":36},"end":{"line":638,"column":53}}},"20":{"name":"(anonymous_20)","line":672,"loc":{"start":{"line":672,"column":37},"end":{"line":672,"column":61}}},"21":{"name":"(anonymous_21)","line":720,"loc":{"start":{"line":720,"column":36},"end":{"line":720,"column":53}}},"22":{"name":"(anonymous_22)","line":762,"loc":{"start":{"line":762,"column":38},"end":{"line":762,"column":62}}},"23":{"name":"(anonymous_23)","line":810,"loc":{"start":{"line":810,"column":37},"end":{"line":810,"column":54}}},"24":{"name":"(anonymous_24)","line":851,"loc":{"start":{"line":851,"column":37},"end":{"line":851,"column":61}}},"25":{"name":"(anonymous_25)","line":898,"loc":{"start":{"line":898,"column":36},"end":{"line":898,"column":53}}},"26":{"name":"(anonymous_26)","line":939,"loc":{"start":{"line":939,"column":38},"end":{"line":939,"column":62}}},"27":{"name":"(anonymous_27)","line":987,"loc":{"start":{"line":987,"column":37},"end":{"line":987,"column":54}}},"28":{"name":"(anonymous_28)","line":1033,"loc":{"start":{"line":1033,"column":41},"end":{"line":1033,"column":65}}},"29":{"name":"(anonymous_29)","line":1100,"loc":{"start":{"line":1100,"column":40},"end":{"line":1100,"column":57}}},"30":{"name":"(anonymous_30)","line":1153,"loc":{"start":{"line":1153,"column":42},"end":{"line":1153,"column":66}}},"31":{"name":"(anonymous_31)","line":1221,"loc":{"start":{"line":1221,"column":41},"end":{"line":1221,"column":58}}},"32":{"name":"(anonymous_32)","line":1280,"loc":{"start":{"line":1280,"column":39},"end":{"line":1280,"column":63}}},"33":{"name":"(anonymous_33)","line":1320,"loc":{"start":{"line":1320,"column":38},"end":{"line":1320,"column":55}}},"34":{"name":"(anonymous_34)","line":1355,"loc":{"start":{"line":1355,"column":39},"end":{"line":1355,"column":63}}},"35":{"name":"(anonymous_35)","line":1395,"loc":{"start":{"line":1395,"column":38},"end":{"line":1395,"column":55}}},"36":{"name":"(anonymous_36)","line":1438,"loc":{"start":{"line":1438,"column":35},"end":{"line":1438,"column":51}}},"37":{"name":"(anonymous_37)","line":1454,"loc":{"start":{"line":1454,"column":32},"end":{"line":1454,"column":44}}},"38":{"name":"(anonymous_38)","line":1464,"loc":{"start":{"line":1464,"column":32},"end":{"line":1464,"column":44}}},"39":{"name":"(anonymous_39)","line":1476,"loc":{"start":{"line":1476,"column":40},"end":{"line":1476,"column":64}}},"40":{"name":"(anonymous_40)","line":1518,"loc":{"start":{"line":1518,"column":46},"end":{"line":1518,"column":70}}},"41":{"name":"(anonymous_41)","line":1532,"loc":{"start":{"line":1532,"column":39},"end":{"line":1532,"column":56}}},"42":{"name":"(anonymous_42)","line":1576,"loc":{"start":{"line":1576,"column":45},"end":{"line":1576,"column":62}}},"43":{"name":"(anonymous_43)","line":1603,"loc":{"start":{"line":1603,"column":39},"end":{"line":1603,"column":55}}},"44":{"name":"(anonymous_44)","line":1634,"loc":{"start":{"line":1634,"column":36},"end":{"line":1634,"column":52}}},"45":{"name":"(anonymous_45)","line":1650,"loc":{"start":{"line":1650,"column":36},"end":{"line":1650,"column":52}}},"46":{"name":"(anonymous_46)","line":1668,"loc":{"start":{"line":1668,"column":44},"end":{"line":1668,"column":68}}},"47":{"name":"(anonymous_47)","line":1726,"loc":{"start":{"line":1726,"column":50},"end":{"line":1726,"column":74}}},"48":{"name":"(anonymous_48)","line":1739,"loc":{"start":{"line":1739,"column":43},"end":{"line":1739,"column":60}}},"49":{"name":"(anonymous_49)","line":1787,"loc":{"start":{"line":1787,"column":49},"end":{"line":1787,"column":66}}},"50":{"name":"(anonymous_50)","line":1810,"loc":{"start":{"line":1810,"column":39},"end":{"line":1810,"column":61}}},"51":{"name":"(anonymous_51)","line":1853,"loc":{"start":{"line":1853,"column":38},"end":{"line":1853,"column":55}}},"52":{"name":"(anonymous_52)","line":1894,"loc":{"start":{"line":1894,"column":39},"end":{"line":1894,"column":61}}},"53":{"name":"(anonymous_53)","line":1943,"loc":{"start":{"line":1943,"column":38},"end":{"line":1943,"column":55}}},"54":{"name":"(anonymous_54)","line":1993,"loc":{"start":{"line":1993,"column":42},"end":{"line":1993,"column":64}}},"55":{"name":"(anonymous_55)","line":2035,"loc":{"start":{"line":2035,"column":36},"end":{"line":2035,"column":50}}},"56":{"name":"(anonymous_56)","line":2045,"loc":{"start":{"line":2045,"column":36},"end":{"line":2045,"column":50}}},"57":{"name":"(anonymous_57)","line":2071,"loc":{"start":{"line":2071,"column":41},"end":{"line":2071,"column":75}}},"58":{"name":"(anonymous_58)","line":2095,"loc":{"start":{"line":2095,"column":28},"end":{"line":2095,"column":39}}},"59":{"name":"(anonymous_59)","line":2097,"loc":{"start":{"line":2097,"column":26},"end":{"line":2097,"column":39}}},"60":{"name":"(anonymous_60)","line":2158,"loc":{"start":{"line":2158,"column":39},"end":{"line":2158,"column":61}}},"61":{"name":"(anonymous_61)","line":2197,"loc":{"start":{"line":2197,"column":38},"end":{"line":2197,"column":55}}},"62":{"name":"(anonymous_62)","line":2236,"loc":{"start":{"line":2236,"column":33},"end":{"line":2236,"column":68}}},"63":{"name":"(anonymous_63)","line":2275,"loc":{"start":{"line":2275,"column":35},"end":{"line":2275,"column":60}}},"64":{"name":"(anonymous_64)","line":2287,"loc":{"start":{"line":2287,"column":33},"end":{"line":2287,"column":50}}},"65":{"name":"(anonymous_65)","line":2297,"loc":{"start":{"line":2297,"column":35},"end":{"line":2297,"column":46}}},"66":{"name":"(anonymous_66)","line":2306,"loc":{"start":{"line":2306,"column":32},"end":{"line":2306,"column":43}}},"67":{"name":"(anonymous_67)","line":2320,"loc":{"start":{"line":2320,"column":32},"end":{"line":2320,"column":47}}},"68":{"name":"(anonymous_68)","line":2344,"loc":{"start":{"line":2344,"column":34},"end":{"line":2344,"column":55}}},"69":{"name":"(anonymous_69)","line":2384,"loc":{"start":{"line":2384,"column":31},"end":{"line":2384,"column":52}}},"70":{"name":"(anonymous_70)","line":2420,"loc":{"start":{"line":2420,"column":33},"end":{"line":2420,"column":91}}},"71":{"name":"(anonymous_71)","line":2458,"loc":{"start":{"line":2458,"column":41},"end":{"line":2458,"column":60}}},"72":{"name":"(anonymous_72)","line":2476,"loc":{"start":{"line":2476,"column":31},"end":{"line":2476,"column":59}}},"73":{"name":"(anonymous_73)","line":2510,"loc":{"start":{"line":2510,"column":31},"end":{"line":2510,"column":42}}},"74":{"name":"(anonymous_74)","line":2524,"loc":{"start":{"line":2524,"column":31},"end":{"line":2524,"column":48}}},"75":{"name":"(anonymous_75)","line":2542,"loc":{"start":{"line":2542,"column":32},"end":{"line":2542,"column":55}}},"76":{"name":"(anonymous_76)","line":2557,"loc":{"start":{"line":2557,"column":29},"end":{"line":2557,"column":52}}},"77":{"name":"(anonymous_77)","line":2568,"loc":{"start":{"line":2568,"column":29},"end":{"line":2568,"column":49}}},"78":{"name":"(anonymous_78)","line":2586,"loc":{"start":{"line":2586,"column":34},"end":{"line":2586,"column":69}}},"79":{"name":"(anonymous_79)","line":2632,"loc":{"start":{"line":2632,"column":36},"end":{"line":2632,"column":61}}},"80":{"name":"(anonymous_80)","line":2641,"loc":{"start":{"line":2641,"column":37},"end":{"line":2641,"column":51}}},"81":{"name":"(anonymous_81)","line":2656,"loc":{"start":{"line":2656,"column":36},"end":{"line":2656,"column":47}}},"82":{"name":"(anonymous_82)","line":2667,"loc":{"start":{"line":2667,"column":32},"end":{"line":2667,"column":43}}},"83":{"name":"(anonymous_83)","line":2685,"loc":{"start":{"line":2685,"column":33},"end":{"line":2685,"column":52}}},"84":{"name":"(anonymous_84)","line":2707,"loc":{"start":{"line":2707,"column":34},"end":{"line":2707,"column":55}}},"85":{"name":"(anonymous_85)","line":2731,"loc":{"start":{"line":2731,"column":31},"end":{"line":2731,"column":48}}},"86":{"name":"(anonymous_86)","line":2753,"loc":{"start":{"line":2753,"column":32},"end":{"line":2753,"column":53}}},"87":{"name":"(anonymous_87)","line":2779,"loc":{"start":{"line":2779,"column":35},"end":{"line":2779,"column":55}}},"88":{"name":"(anonymous_88)","line":2809,"loc":{"start":{"line":2809,"column":40},"end":{"line":2809,"column":51}}},"89":{"name":"(anonymous_89)","line":2844,"loc":{"start":{"line":2844,"column":35},"end":{"line":2844,"column":66}}},"90":{"name":"(anonymous_90)","line":2879,"loc":{"start":{"line":2879,"column":35},"end":{"line":2879,"column":56}}},"91":{"name":"(anonymous_91)","line":2898,"loc":{"start":{"line":2898,"column":28},"end":{"line":2898,"column":56}}},"92":{"name":"(anonymous_92)","line":2910,"loc":{"start":{"line":2910,"column":22},"end":{"line":2910,"column":36}}},"93":{"name":"(anonymous_93)","line":2921,"loc":{"start":{"line":2921,"column":22},"end":{"line":2921,"column":36}}},"94":{"name":"(anonymous_94)","line":2935,"loc":{"start":{"line":2935,"column":35},"end":{"line":2935,"column":56}}},"95":{"name":"(anonymous_95)","line":2954,"loc":{"start":{"line":2954,"column":28},"end":{"line":2954,"column":56}}},"96":{"name":"(anonymous_96)","line":2978,"loc":{"start":{"line":2978,"column":34},"end":{"line":2978,"column":52}}},"97":{"name":"(anonymous_97)","line":3029,"loc":{"start":{"line":3029,"column":27},"end":{"line":3029,"column":65}}},"98":{"name":"(anonymous_98)","line":3154,"loc":{"start":{"line":3154,"column":32},"end":{"line":3154,"column":53}}},"99":{"name":"(anonymous_99)","line":3180,"loc":{"start":{"line":3180,"column":25},"end":{"line":3180,"column":63}}},"100":{"name":"(anonymous_100)","line":3200,"loc":{"start":{"line":3200,"column":15},"end":{"line":3200,"column":26}}},"101":{"name":"(anonymous_101)","line":3223,"loc":{"start":{"line":3223,"column":26},"end":{"line":3223,"column":45}}},"102":{"name":"(anonymous_102)","line":3227,"loc":{"start":{"line":3227,"column":22},"end":{"line":3227,"column":33}}},"103":{"name":"(anonymous_103)","line":3256,"loc":{"start":{"line":3256,"column":26},"end":{"line":3256,"column":45}}},"104":{"name":"(anonymous_104)","line":3257,"loc":{"start":{"line":3257,"column":35},"end":{"line":3257,"column":47}}},"105":{"name":"(anonymous_105)","line":3287,"loc":{"start":{"line":3287,"column":27},"end":{"line":3287,"column":46}}},"106":{"name":"(anonymous_106)","line":3312,"loc":{"start":{"line":3312,"column":27},"end":{"line":3312,"column":46}}},"107":{"name":"(anonymous_107)","line":3315,"loc":{"start":{"line":3315,"column":32},"end":{"line":3315,"column":43}}},"108":{"name":"(anonymous_108)","line":3333,"loc":{"start":{"line":3333,"column":33},"end":{"line":3333,"column":52}}},"109":{"name":"(anonymous_109)","line":3334,"loc":{"start":{"line":3334,"column":34},"end":{"line":3334,"column":47}}},"110":{"name":"(anonymous_110)","line":3347,"loc":{"start":{"line":3347,"column":33},"end":{"line":3347,"column":52}}},"111":{"name":"(anonymous_111)","line":3348,"loc":{"start":{"line":3348,"column":33},"end":{"line":3348,"column":46}}},"112":{"name":"(anonymous_112)","line":3358,"loc":{"start":{"line":3358,"column":34},"end":{"line":3358,"column":47}}},"113":{"name":"(anonymous_113)","line":3368,"loc":{"start":{"line":3368,"column":29},"end":{"line":3368,"column":43}}},"114":{"name":"(anonymous_114)","line":3381,"loc":{"start":{"line":3381,"column":36},"end":{"line":3381,"column":50}}},"115":{"name":"(anonymous_115)","line":3383,"loc":{"start":{"line":3383,"column":34},"end":{"line":3383,"column":47}}},"116":{"name":"(anonymous_116)","line":3401,"loc":{"start":{"line":3401,"column":33},"end":{"line":3401,"column":54}}},"117":{"name":"(anonymous_117)","line":3427,"loc":{"start":{"line":3427,"column":26},"end":{"line":3427,"column":64}}}},"statementMap":{"1":{"start":{"line":23,"column":0},"end":{"line":3454,"column":5}},"2":{"start":{"line":26,"column":4},"end":{"line":29,"column":22}},"3":{"start":{"line":29,"column":23},"end":{"line":29,"column":71}},"4":{"start":{"line":29,"column":29},"end":{"line":29,"column":56}},"5":{"start":{"line":43,"column":4},"end":{"line":105,"column":6}},"6":{"start":{"line":44,"column":8},"end":{"line":45,"column":51}},"7":{"start":{"line":45,"column":12},"end":{"line":45,"column":51}},"8":{"start":{"line":46,"column":8},"end":{"line":47,"column":53}},"9":{"start":{"line":47,"column":12},"end":{"line":47,"column":53}},"10":{"start":{"line":48,"column":8},"end":{"line":49,"column":51}},"11":{"start":{"line":49,"column":12},"end":{"line":49,"column":51}},"12":{"start":{"line":50,"column":8},"end":{"line":56,"column":9}},"13":{"start":{"line":51,"column":12},"end":{"line":51,"column":36}},"14":{"start":{"line":52,"column":12},"end":{"line":53,"column":53}},"15":{"start":{"line":53,"column":16},"end":{"line":53,"column":53}},"16":{"start":{"line":54,"column":12},"end":{"line":54,"column":42}},"17":{"start":{"line":55,"column":12},"end":{"line":55,"column":34}},"18":{"start":{"line":63,"column":8},"end":{"line":63,"column":75}},"19":{"start":{"line":72,"column":8},"end":{"line":72,"column":24}},"20":{"start":{"line":81,"column":8},"end":{"line":81,"column":31}},"21":{"start":{"line":90,"column":8},"end":{"line":90,"column":30}},"22":{"start":{"line":97,"column":8},"end":{"line":97,"column":41}},"23":{"start":{"line":104,"column":8},"end":{"line":104,"column":33}},"24":{"start":{"line":113,"column":4},"end":{"line":113,"column":33}},"25":{"start":{"line":121,"column":4},"end":{"line":121,"column":36}},"26":{"start":{"line":129,"column":4},"end":{"line":129,"column":34}},"27":{"start":{"line":136,"column":4},"end":{"line":136,"column":37}},"28":{"start":{"line":143,"column":4},"end":{"line":143,"column":54}},"29":{"start":{"line":150,"column":4},"end":{"line":150,"column":40}},"30":{"start":{"line":159,"column":4},"end":{"line":159,"column":27}},"31":{"start":{"line":165,"column":4},"end":{"line":165,"column":51}},"32":{"start":{"line":174,"column":4},"end":{"line":174,"column":41}},"33":{"start":{"line":176,"column":4},"end":{"line":180,"column":7}},"34":{"start":{"line":188,"column":4},"end":{"line":188,"column":37}},"35":{"start":{"line":195,"column":4},"end":{"line":195,"column":49}},"36":{"start":{"line":205,"column":4},"end":{"line":209,"column":5}},"37":{"start":{"line":206,"column":8},"end":{"line":206,"column":16}},"38":{"start":{"line":206,"column":17},"end":{"line":208,"column":10}},"39":{"start":{"line":207,"column":12},"end":{"line":207,"column":59}},"40":{"start":{"line":217,"column":4},"end":{"line":226,"column":5}},"41":{"start":{"line":218,"column":8},"end":{"line":218,"column":29}},"42":{"start":{"line":218,"column":30},"end":{"line":225,"column":10}},"43":{"start":{"line":219,"column":12},"end":{"line":220,"column":72}},"44":{"start":{"line":220,"column":16},"end":{"line":220,"column":72}},"45":{"start":{"line":221,"column":12},"end":{"line":223,"column":34}},"46":{"start":{"line":222,"column":16},"end":{"line":223,"column":34}},"47":{"start":{"line":224,"column":12},"end":{"line":224,"column":54}},"48":{"start":{"line":233,"column":4},"end":{"line":235,"column":6}},"49":{"start":{"line":234,"column":8},"end":{"line":234,"column":22}},"50":{"start":{"line":246,"column":4},"end":{"line":248,"column":6}},"51":{"start":{"line":247,"column":8},"end":{"line":247,"column":64}},"52":{"start":{"line":262,"column":4},"end":{"line":289,"column":6}},"53":{"start":{"line":263,"column":8},"end":{"line":267,"column":9}},"54":{"start":{"line":264,"column":12},"end":{"line":264,"column":36}},"55":{"start":{"line":265,"column":12},"end":{"line":265,"column":36}},"56":{"start":{"line":266,"column":12},"end":{"line":266,"column":33}},"57":{"start":{"line":268,"column":8},"end":{"line":268,"column":25}},"58":{"start":{"line":269,"column":8},"end":{"line":274,"column":9}},"59":{"start":{"line":270,"column":12},"end":{"line":271,"column":67}},"60":{"start":{"line":271,"column":16},"end":{"line":271,"column":67}},"61":{"start":{"line":272,"column":12},"end":{"line":272,"column":58}},"62":{"start":{"line":273,"column":12},"end":{"line":273,"column":47}},"63":{"start":{"line":273,"column":28},"end":{"line":273,"column":47}},"64":{"start":{"line":275,"column":8},"end":{"line":276,"column":61}},"65":{"start":{"line":276,"column":12},"end":{"line":276,"column":61}},"66":{"start":{"line":277,"column":8},"end":{"line":278,"column":15}},"67":{"start":{"line":279,"column":8},"end":{"line":279,"column":12}},"68":{"start":{"line":279,"column":13},"end":{"line":285,"column":9}},"69":{"start":{"line":280,"column":12},"end":{"line":280,"column":30}},"70":{"start":{"line":281,"column":12},"end":{"line":281,"column":42}},"71":{"start":{"line":282,"column":12},"end":{"line":282,"column":38}},"72":{"start":{"line":282,"column":29},"end":{"line":282,"column":38}},"73":{"start":{"line":283,"column":12},"end":{"line":283,"column":70}},"74":{"start":{"line":284,"column":12},"end":{"line":284,"column":32}},"75":{"start":{"line":286,"column":8},"end":{"line":286,"column":29}},"76":{"start":{"line":287,"column":8},"end":{"line":287,"column":22}},"77":{"start":{"line":288,"column":8},"end":{"line":288,"column":18}},"78":{"start":{"line":297,"column":4},"end":{"line":299,"column":6}},"79":{"start":{"line":298,"column":8},"end":{"line":298,"column":55}},"80":{"start":{"line":305,"column":4},"end":{"line":307,"column":6}},"81":{"start":{"line":306,"column":8},"end":{"line":306,"column":22}},"82":{"start":{"line":321,"column":4},"end":{"line":387,"column":6}},"83":{"start":{"line":322,"column":8},"end":{"line":326,"column":9}},"84":{"start":{"line":323,"column":12},"end":{"line":323,"column":36}},"85":{"start":{"line":324,"column":12},"end":{"line":324,"column":36}},"86":{"start":{"line":325,"column":12},"end":{"line":325,"column":33}},"87":{"start":{"line":327,"column":8},"end":{"line":344,"column":9}},"88":{"start":{"line":328,"column":12},"end":{"line":329,"column":34}},"89":{"start":{"line":329,"column":16},"end":{"line":329,"column":34}},"90":{"start":{"line":330,"column":12},"end":{"line":343,"column":13}},"91":{"start":{"line":332,"column":20},"end":{"line":332,"column":71}},"92":{"start":{"line":334,"column":20},"end":{"line":334,"column":68}},"93":{"start":{"line":336,"column":20},"end":{"line":336,"column":71}},"94":{"start":{"line":338,"column":20},"end":{"line":338,"column":69}},"95":{"start":{"line":340,"column":20},"end":{"line":340,"column":70}},"96":{"start":{"line":342,"column":20},"end":{"line":342,"column":67}},"97":{"start":{"line":345,"column":8},"end":{"line":346,"column":46}},"98":{"start":{"line":346,"column":12},"end":{"line":346,"column":46}},"99":{"start":{"line":347,"column":8},"end":{"line":347,"column":15}},"100":{"start":{"line":348,"column":8},"end":{"line":352,"column":9}},"101":{"start":{"line":349,"column":12},"end":{"line":349,"column":56}},"102":{"start":{"line":350,"column":12},"end":{"line":350,"column":33}},"103":{"start":{"line":351,"column":12},"end":{"line":351,"column":22}},"104":{"start":{"line":353,"column":8},"end":{"line":355,"column":14}},"105":{"start":{"line":356,"column":8},"end":{"line":380,"column":9}},"106":{"start":{"line":357,"column":12},"end":{"line":357,"column":42}},"107":{"start":{"line":358,"column":12},"end":{"line":363,"column":13}},"108":{"start":{"line":359,"column":16},"end":{"line":359,"column":98}},"109":{"start":{"line":361,"column":16},"end":{"line":362,"column":37}},"110":{"start":{"line":362,"column":20},"end":{"line":362,"column":37}},"111":{"start":{"line":364,"column":12},"end":{"line":364,"column":23}},"112":{"start":{"line":365,"column":15},"end":{"line":380,"column":9}},"113":{"start":{"line":366,"column":12},"end":{"line":366,"column":46}},"114":{"start":{"line":367,"column":12},"end":{"line":374,"column":13}},"115":{"start":{"line":368,"column":16},"end":{"line":368,"column":59}},"116":{"start":{"line":370,"column":16},"end":{"line":370,"column":48}},"117":{"start":{"line":371,"column":16},"end":{"line":373,"column":17}},"118":{"start":{"line":372,"column":20},"end":{"line":372,"column":37}},"119":{"start":{"line":375,"column":12},"end":{"line":375,"column":23}},"120":{"start":{"line":376,"column":15},"end":{"line":380,"column":9}},"121":{"start":{"line":377,"column":12},"end":{"line":378,"column":50}},"122":{"start":{"line":378,"column":16},"end":{"line":378,"column":50}},"123":{"start":{"line":379,"column":12},"end":{"line":379,"column":40}},"124":{"start":{"line":381,"column":8},"end":{"line":381,"column":55}},"125":{"start":{"line":382,"column":8},"end":{"line":385,"column":9}},"126":{"start":{"line":383,"column":12},"end":{"line":383,"column":31}},"127":{"start":{"line":384,"column":12},"end":{"line":384,"column":37}},"128":{"start":{"line":386,"column":8},"end":{"line":386,"column":18}},"129":{"start":{"line":396,"column":4},"end":{"line":440,"column":5}},"130":{"start":{"line":397,"column":6},"end":{"line":397,"column":51}},"131":{"start":{"line":398,"column":6},"end":{"line":398,"column":41}},"132":{"start":{"line":398,"column":20},"end":{"line":398,"column":41}},"133":{"start":{"line":399,"column":6},"end":{"line":407,"column":7}},"134":{"start":{"line":400,"column":8},"end":{"line":401,"column":58}},"135":{"start":{"line":401,"column":10},"end":{"line":401,"column":58}},"136":{"start":{"line":402,"column":8},"end":{"line":403,"column":75}},"137":{"start":{"line":403,"column":12},"end":{"line":403,"column":75}},"138":{"start":{"line":404,"column":8},"end":{"line":404,"column":22}},"139":{"start":{"line":405,"column":8},"end":{"line":406,"column":96}},"140":{"start":{"line":406,"column":12},"end":{"line":406,"column":96}},"141":{"start":{"line":409,"column":6},"end":{"line":413,"column":12}},"142":{"start":{"line":415,"column":6},"end":{"line":415,"column":48}},"143":{"start":{"line":417,"column":6},"end":{"line":427,"column":7}},"144":{"start":{"line":418,"column":8},"end":{"line":425,"column":40}},"145":{"start":{"line":426,"column":8},"end":{"line":426,"column":35}},"146":{"start":{"line":429,"column":6},"end":{"line":433,"column":7}},"147":{"start":{"line":430,"column":8},"end":{"line":430,"column":18}},"148":{"start":{"line":430,"column":19},"end":{"line":430,"column":25}},"149":{"start":{"line":431,"column":8},"end":{"line":431,"column":66}},"150":{"start":{"line":431,"column":26},"end":{"line":431,"column":66}},"151":{"start":{"line":432,"column":8},"end":{"line":432,"column":35}},"152":{"start":{"line":435,"column":6},"end":{"line":438,"column":7}},"153":{"start":{"line":436,"column":8},"end":{"line":436,"column":29}},"154":{"start":{"line":437,"column":8},"end":{"line":437,"column":20}},"155":{"start":{"line":439,"column":6},"end":{"line":439,"column":28}},"156":{"start":{"line":448,"column":4},"end":{"line":483,"column":5}},"157":{"start":{"line":449,"column":6},"end":{"line":449,"column":51}},"158":{"start":{"line":450,"column":6},"end":{"line":450,"column":41}},"159":{"start":{"line":450,"column":20},"end":{"line":450,"column":41}},"160":{"start":{"line":452,"column":6},"end":{"line":457,"column":12}},"161":{"start":{"line":459,"column":6},"end":{"line":459,"column":27}},"162":{"start":{"line":461,"column":6},"end":{"line":471,"column":7}},"163":{"start":{"line":462,"column":8},"end":{"line":462,"column":36}},"164":{"start":{"line":463,"column":8},"end":{"line":463,"column":36}},"165":{"start":{"line":464,"column":8},"end":{"line":464,"column":36}},"166":{"start":{"line":465,"column":8},"end":{"line":465,"column":36}},"167":{"start":{"line":466,"column":8},"end":{"line":466,"column":36}},"168":{"start":{"line":467,"column":8},"end":{"line":467,"column":36}},"169":{"start":{"line":468,"column":8},"end":{"line":468,"column":36}},"170":{"start":{"line":469,"column":8},"end":{"line":469,"column":36}},"171":{"start":{"line":470,"column":8},"end":{"line":470,"column":36}},"172":{"start":{"line":473,"column":6},"end":{"line":477,"column":7}},"173":{"start":{"line":474,"column":8},"end":{"line":474,"column":18}},"174":{"start":{"line":475,"column":8},"end":{"line":475,"column":36}},"175":{"start":{"line":476,"column":8},"end":{"line":476,"column":62}},"176":{"start":{"line":476,"column":26},"end":{"line":476,"column":62}},"177":{"start":{"line":479,"column":6},"end":{"line":481,"column":7}},"178":{"start":{"line":480,"column":8},"end":{"line":480,"column":29}},"179":{"start":{"line":482,"column":6},"end":{"line":482,"column":19}},"180":{"start":{"line":491,"column":4},"end":{"line":504,"column":6}},"181":{"start":{"line":492,"column":8},"end":{"line":492,"column":53}},"182":{"start":{"line":493,"column":8},"end":{"line":493,"column":43}},"183":{"start":{"line":493,"column":22},"end":{"line":493,"column":43}},"184":{"start":{"line":494,"column":8},"end":{"line":500,"column":9}},"185":{"start":{"line":495,"column":12},"end":{"line":496,"column":79}},"186":{"start":{"line":496,"column":16},"end":{"line":496,"column":79}},"187":{"start":{"line":497,"column":12},"end":{"line":497,"column":26}},"188":{"start":{"line":498,"column":12},"end":{"line":499,"column":105}},"189":{"start":{"line":499,"column":16},"end":{"line":499,"column":105}},"190":{"start":{"line":501,"column":8},"end":{"line":501,"column":56}},"191":{"start":{"line":502,"column":8},"end":{"line":502,"column":44}},"192":{"start":{"line":502,"column":22},"end":{"line":502,"column":44}},"193":{"start":{"line":503,"column":8},"end":{"line":503,"column":21}},"194":{"start":{"line":517,"column":4},"end":{"line":517,"column":64}},"195":{"start":{"line":528,"column":4},"end":{"line":549,"column":6}},"196":{"start":{"line":529,"column":8},"end":{"line":529,"column":53}},"197":{"start":{"line":530,"column":8},"end":{"line":530,"column":43}},"198":{"start":{"line":530,"column":22},"end":{"line":530,"column":43}},"199":{"start":{"line":531,"column":8},"end":{"line":540,"column":9}},"200":{"start":{"line":532,"column":12},"end":{"line":533,"column":77}},"201":{"start":{"line":533,"column":16},"end":{"line":533,"column":77}},"202":{"start":{"line":534,"column":12},"end":{"line":534,"column":23}},"203":{"start":{"line":535,"column":12},"end":{"line":536,"column":79}},"204":{"start":{"line":536,"column":16},"end":{"line":536,"column":79}},"205":{"start":{"line":537,"column":12},"end":{"line":537,"column":26}},"206":{"start":{"line":538,"column":12},"end":{"line":539,"column":100}},"207":{"start":{"line":539,"column":16},"end":{"line":539,"column":100}},"208":{"start":{"line":541,"column":8},"end":{"line":541,"column":20}},"209":{"start":{"line":542,"column":8},"end":{"line":542,"column":43}},"210":{"start":{"line":543,"column":8},"end":{"line":544,"column":72}},"211":{"start":{"line":544,"column":12},"end":{"line":544,"column":72}},"212":{"start":{"line":545,"column":8},"end":{"line":545,"column":20}},"213":{"start":{"line":546,"column":8},"end":{"line":546,"column":36}},"214":{"start":{"line":547,"column":8},"end":{"line":547,"column":39}},"215":{"start":{"line":547,"column":22},"end":{"line":547,"column":39}},"216":{"start":{"line":548,"column":8},"end":{"line":548,"column":20}},"217":{"start":{"line":559,"column":4},"end":{"line":559,"column":66}},"218":{"start":{"line":567,"column":4},"end":{"line":581,"column":6}},"219":{"start":{"line":568,"column":8},"end":{"line":568,"column":53}},"220":{"start":{"line":569,"column":8},"end":{"line":569,"column":43}},"221":{"start":{"line":569,"column":22},"end":{"line":569,"column":43}},"222":{"start":{"line":570,"column":8},"end":{"line":576,"column":9}},"223":{"start":{"line":571,"column":12},"end":{"line":572,"column":79}},"224":{"start":{"line":572,"column":16},"end":{"line":572,"column":79}},"225":{"start":{"line":573,"column":12},"end":{"line":573,"column":26}},"226":{"start":{"line":574,"column":12},"end":{"line":575,"column":100}},"227":{"start":{"line":575,"column":16},"end":{"line":575,"column":100}},"228":{"start":{"line":577,"column":8},"end":{"line":577,"column":40}},"229":{"start":{"line":578,"column":8},"end":{"line":578,"column":65}},"230":{"start":{"line":578,"column":37},"end":{"line":578,"column":65}},"231":{"start":{"line":579,"column":8},"end":{"line":579,"column":39}},"232":{"start":{"line":579,"column":22},"end":{"line":579,"column":39}},"233":{"start":{"line":580,"column":8},"end":{"line":580,"column":21}},"234":{"start":{"line":590,"column":4},"end":{"line":590,"column":64}},"235":{"start":{"line":599,"column":4},"end":{"line":620,"column":6}},"236":{"start":{"line":600,"column":8},"end":{"line":600,"column":53}},"237":{"start":{"line":601,"column":8},"end":{"line":601,"column":43}},"238":{"start":{"line":601,"column":22},"end":{"line":601,"column":43}},"239":{"start":{"line":602,"column":8},"end":{"line":611,"column":9}},"240":{"start":{"line":603,"column":12},"end":{"line":604,"column":77}},"241":{"start":{"line":604,"column":16},"end":{"line":604,"column":77}},"242":{"start":{"line":605,"column":12},"end":{"line":605,"column":25}},"243":{"start":{"line":606,"column":12},"end":{"line":607,"column":79}},"244":{"start":{"line":607,"column":16},"end":{"line":607,"column":79}},"245":{"start":{"line":608,"column":12},"end":{"line":608,"column":26}},"246":{"start":{"line":609,"column":12},"end":{"line":610,"column":100}},"247":{"start":{"line":610,"column":16},"end":{"line":610,"column":100}},"248":{"start":{"line":612,"column":8},"end":{"line":612,"column":20}},"249":{"start":{"line":613,"column":8},"end":{"line":613,"column":43}},"250":{"start":{"line":614,"column":8},"end":{"line":615,"column":72}},"251":{"start":{"line":615,"column":12},"end":{"line":615,"column":72}},"252":{"start":{"line":616,"column":8},"end":{"line":616,"column":20}},"253":{"start":{"line":617,"column":8},"end":{"line":617,"column":36}},"254":{"start":{"line":618,"column":8},"end":{"line":618,"column":39}},"255":{"start":{"line":618,"column":22},"end":{"line":618,"column":39}},"256":{"start":{"line":619,"column":8},"end":{"line":619,"column":20}},"257":{"start":{"line":630,"column":4},"end":{"line":630,"column":68}},"258":{"start":{"line":638,"column":4},"end":{"line":651,"column":6}},"259":{"start":{"line":639,"column":8},"end":{"line":639,"column":53}},"260":{"start":{"line":640,"column":8},"end":{"line":640,"column":43}},"261":{"start":{"line":640,"column":22},"end":{"line":640,"column":43}},"262":{"start":{"line":641,"column":8},"end":{"line":647,"column":9}},"263":{"start":{"line":642,"column":12},"end":{"line":643,"column":79}},"264":{"start":{"line":643,"column":16},"end":{"line":643,"column":79}},"265":{"start":{"line":644,"column":12},"end":{"line":644,"column":26}},"266":{"start":{"line":645,"column":12},"end":{"line":646,"column":100}},"267":{"start":{"line":646,"column":16},"end":{"line":646,"column":100}},"268":{"start":{"line":648,"column":8},"end":{"line":648,"column":40}},"269":{"start":{"line":649,"column":8},"end":{"line":649,"column":39}},"270":{"start":{"line":649,"column":22},"end":{"line":649,"column":39}},"271":{"start":{"line":650,"column":8},"end":{"line":650,"column":21}},"272":{"start":{"line":660,"column":4},"end":{"line":660,"column":66}},"273":{"start":{"line":672,"column":4},"end":{"line":699,"column":6}},"274":{"start":{"line":673,"column":8},"end":{"line":673,"column":53}},"275":{"start":{"line":674,"column":8},"end":{"line":674,"column":43}},"276":{"start":{"line":674,"column":22},"end":{"line":674,"column":43}},"277":{"start":{"line":675,"column":8},"end":{"line":684,"column":9}},"278":{"start":{"line":676,"column":12},"end":{"line":677,"column":77}},"279":{"start":{"line":677,"column":16},"end":{"line":677,"column":77}},"280":{"start":{"line":678,"column":12},"end":{"line":678,"column":23}},"281":{"start":{"line":679,"column":12},"end":{"line":680,"column":79}},"282":{"start":{"line":680,"column":16},"end":{"line":680,"column":79}},"283":{"start":{"line":681,"column":12},"end":{"line":681,"column":26}},"284":{"start":{"line":682,"column":12},"end":{"line":683,"column":100}},"285":{"start":{"line":683,"column":16},"end":{"line":683,"column":100}},"286":{"start":{"line":685,"column":8},"end":{"line":685,"column":20}},"287":{"start":{"line":686,"column":8},"end":{"line":686,"column":43}},"288":{"start":{"line":687,"column":8},"end":{"line":688,"column":72}},"289":{"start":{"line":688,"column":12},"end":{"line":688,"column":72}},"290":{"start":{"line":689,"column":8},"end":{"line":689,"column":20}},"291":{"start":{"line":690,"column":8},"end":{"line":696,"column":9}},"292":{"start":{"line":691,"column":12},"end":{"line":691,"column":59}},"293":{"start":{"line":692,"column":12},"end":{"line":692,"column":52}},"294":{"start":{"line":694,"column":12},"end":{"line":694,"column":59}},"295":{"start":{"line":695,"column":12},"end":{"line":695,"column":52}},"296":{"start":{"line":697,"column":8},"end":{"line":697,"column":39}},"297":{"start":{"line":697,"column":22},"end":{"line":697,"column":39}},"298":{"start":{"line":698,"column":8},"end":{"line":698,"column":20}},"299":{"start":{"line":710,"column":4},"end":{"line":710,"column":68}},"300":{"start":{"line":720,"column":4},"end":{"line":741,"column":6}},"301":{"start":{"line":721,"column":8},"end":{"line":721,"column":53}},"302":{"start":{"line":722,"column":8},"end":{"line":722,"column":43}},"303":{"start":{"line":722,"column":22},"end":{"line":722,"column":43}},"304":{"start":{"line":723,"column":8},"end":{"line":729,"column":9}},"305":{"start":{"line":724,"column":12},"end":{"line":725,"column":79}},"306":{"start":{"line":725,"column":16},"end":{"line":725,"column":79}},"307":{"start":{"line":726,"column":12},"end":{"line":726,"column":26}},"308":{"start":{"line":727,"column":12},"end":{"line":728,"column":100}},"309":{"start":{"line":728,"column":16},"end":{"line":728,"column":100}},"310":{"start":{"line":730,"column":8},"end":{"line":730,"column":22}},"311":{"start":{"line":731,"column":8},"end":{"line":737,"column":9}},"312":{"start":{"line":732,"column":12},"end":{"line":732,"column":43}},"313":{"start":{"line":733,"column":12},"end":{"line":733,"column":48}},"314":{"start":{"line":735,"column":12},"end":{"line":735,"column":48}},"315":{"start":{"line":736,"column":12},"end":{"line":736,"column":43}},"316":{"start":{"line":738,"column":8},"end":{"line":738,"column":71}},"317":{"start":{"line":738,"column":41},"end":{"line":738,"column":71}},"318":{"start":{"line":739,"column":8},"end":{"line":739,"column":39}},"319":{"start":{"line":739,"column":22},"end":{"line":739,"column":39}},"320":{"start":{"line":740,"column":8},"end":{"line":740,"column":21}},"321":{"start":{"line":752,"column":4},"end":{"line":752,"column":66}},"322":{"start":{"line":762,"column":4},"end":{"line":789,"column":6}},"323":{"start":{"line":763,"column":8},"end":{"line":763,"column":53}},"324":{"start":{"line":764,"column":8},"end":{"line":764,"column":43}},"325":{"start":{"line":764,"column":22},"end":{"line":764,"column":43}},"326":{"start":{"line":765,"column":8},"end":{"line":774,"column":9}},"327":{"start":{"line":766,"column":12},"end":{"line":767,"column":77}},"328":{"start":{"line":767,"column":16},"end":{"line":767,"column":77}},"329":{"start":{"line":768,"column":12},"end":{"line":768,"column":25}},"330":{"start":{"line":769,"column":12},"end":{"line":770,"column":79}},"331":{"start":{"line":770,"column":16},"end":{"line":770,"column":79}},"332":{"start":{"line":771,"column":12},"end":{"line":771,"column":26}},"333":{"start":{"line":772,"column":12},"end":{"line":773,"column":100}},"334":{"start":{"line":773,"column":16},"end":{"line":773,"column":100}},"335":{"start":{"line":775,"column":8},"end":{"line":775,"column":20}},"336":{"start":{"line":776,"column":8},"end":{"line":776,"column":43}},"337":{"start":{"line":777,"column":8},"end":{"line":778,"column":72}},"338":{"start":{"line":778,"column":12},"end":{"line":778,"column":72}},"339":{"start":{"line":779,"column":8},"end":{"line":779,"column":20}},"340":{"start":{"line":780,"column":8},"end":{"line":786,"column":9}},"341":{"start":{"line":781,"column":12},"end":{"line":781,"column":59}},"342":{"start":{"line":782,"column":12},"end":{"line":782,"column":52}},"343":{"start":{"line":784,"column":12},"end":{"line":784,"column":59}},"344":{"start":{"line":785,"column":12},"end":{"line":785,"column":52}},"345":{"start":{"line":787,"column":8},"end":{"line":787,"column":39}},"346":{"start":{"line":787,"column":22},"end":{"line":787,"column":39}},"347":{"start":{"line":788,"column":8},"end":{"line":788,"column":20}},"348":{"start":{"line":800,"column":4},"end":{"line":800,"column":70}},"349":{"start":{"line":810,"column":4},"end":{"line":830,"column":6}},"350":{"start":{"line":811,"column":8},"end":{"line":811,"column":53}},"351":{"start":{"line":812,"column":8},"end":{"line":812,"column":43}},"352":{"start":{"line":812,"column":22},"end":{"line":812,"column":43}},"353":{"start":{"line":813,"column":8},"end":{"line":819,"column":9}},"354":{"start":{"line":814,"column":12},"end":{"line":815,"column":79}},"355":{"start":{"line":815,"column":16},"end":{"line":815,"column":79}},"356":{"start":{"line":816,"column":12},"end":{"line":816,"column":26}},"357":{"start":{"line":817,"column":12},"end":{"line":818,"column":100}},"358":{"start":{"line":818,"column":16},"end":{"line":818,"column":100}},"359":{"start":{"line":820,"column":8},"end":{"line":820,"column":22}},"360":{"start":{"line":821,"column":8},"end":{"line":827,"column":9}},"361":{"start":{"line":822,"column":12},"end":{"line":822,"column":43}},"362":{"start":{"line":823,"column":12},"end":{"line":823,"column":48}},"363":{"start":{"line":825,"column":12},"end":{"line":825,"column":48}},"364":{"start":{"line":826,"column":12},"end":{"line":826,"column":43}},"365":{"start":{"line":828,"column":8},"end":{"line":828,"column":39}},"366":{"start":{"line":828,"column":22},"end":{"line":828,"column":39}},"367":{"start":{"line":829,"column":8},"end":{"line":829,"column":21}},"368":{"start":{"line":841,"column":4},"end":{"line":841,"column":68}},"369":{"start":{"line":851,"column":4},"end":{"line":882,"column":6}},"370":{"start":{"line":852,"column":8},"end":{"line":852,"column":53}},"371":{"start":{"line":853,"column":8},"end":{"line":853,"column":43}},"372":{"start":{"line":853,"column":22},"end":{"line":853,"column":43}},"373":{"start":{"line":854,"column":8},"end":{"line":863,"column":9}},"374":{"start":{"line":855,"column":12},"end":{"line":856,"column":77}},"375":{"start":{"line":856,"column":16},"end":{"line":856,"column":77}},"376":{"start":{"line":857,"column":12},"end":{"line":857,"column":23}},"377":{"start":{"line":858,"column":12},"end":{"line":859,"column":79}},"378":{"start":{"line":859,"column":16},"end":{"line":859,"column":79}},"379":{"start":{"line":860,"column":12},"end":{"line":860,"column":26}},"380":{"start":{"line":861,"column":12},"end":{"line":862,"column":100}},"381":{"start":{"line":862,"column":16},"end":{"line":862,"column":100}},"382":{"start":{"line":864,"column":8},"end":{"line":864,"column":20}},"383":{"start":{"line":865,"column":8},"end":{"line":865,"column":43}},"384":{"start":{"line":866,"column":8},"end":{"line":867,"column":72}},"385":{"start":{"line":867,"column":12},"end":{"line":867,"column":72}},"386":{"start":{"line":868,"column":8},"end":{"line":868,"column":20}},"387":{"start":{"line":869,"column":8},"end":{"line":879,"column":9}},"388":{"start":{"line":870,"column":12},"end":{"line":870,"column":58}},"389":{"start":{"line":871,"column":12},"end":{"line":871,"column":58}},"390":{"start":{"line":872,"column":12},"end":{"line":872,"column":58}},"391":{"start":{"line":873,"column":12},"end":{"line":873,"column":58}},"392":{"start":{"line":875,"column":12},"end":{"line":875,"column":58}},"393":{"start":{"line":876,"column":12},"end":{"line":876,"column":58}},"394":{"start":{"line":877,"column":12},"end":{"line":877,"column":58}},"395":{"start":{"line":878,"column":12},"end":{"line":878,"column":58}},"396":{"start":{"line":880,"column":8},"end":{"line":880,"column":39}},"397":{"start":{"line":880,"column":22},"end":{"line":880,"column":39}},"398":{"start":{"line":881,"column":8},"end":{"line":881,"column":20}},"399":{"start":{"line":890,"column":4},"end":{"line":890,"column":66}},"400":{"start":{"line":898,"column":4},"end":{"line":923,"column":6}},"401":{"start":{"line":899,"column":8},"end":{"line":899,"column":53}},"402":{"start":{"line":900,"column":8},"end":{"line":900,"column":43}},"403":{"start":{"line":900,"column":22},"end":{"line":900,"column":43}},"404":{"start":{"line":901,"column":8},"end":{"line":907,"column":9}},"405":{"start":{"line":902,"column":12},"end":{"line":903,"column":79}},"406":{"start":{"line":903,"column":16},"end":{"line":903,"column":79}},"407":{"start":{"line":904,"column":12},"end":{"line":904,"column":26}},"408":{"start":{"line":905,"column":12},"end":{"line":906,"column":100}},"409":{"start":{"line":906,"column":16},"end":{"line":906,"column":100}},"410":{"start":{"line":908,"column":8},"end":{"line":908,"column":22}},"411":{"start":{"line":909,"column":8},"end":{"line":919,"column":9}},"412":{"start":{"line":910,"column":12},"end":{"line":910,"column":49}},"413":{"start":{"line":911,"column":12},"end":{"line":911,"column":49}},"414":{"start":{"line":912,"column":12},"end":{"line":912,"column":43}},"415":{"start":{"line":913,"column":12},"end":{"line":913,"column":55}},"416":{"start":{"line":915,"column":12},"end":{"line":915,"column":49}},"417":{"start":{"line":916,"column":12},"end":{"line":916,"column":49}},"418":{"start":{"line":917,"column":12},"end":{"line":917,"column":43}},"419":{"start":{"line":918,"column":12},"end":{"line":918,"column":55}},"420":{"start":{"line":920,"column":8},"end":{"line":920,"column":19}},"421":{"start":{"line":921,"column":8},"end":{"line":921,"column":39}},"422":{"start":{"line":921,"column":22},"end":{"line":921,"column":39}},"423":{"start":{"line":922,"column":8},"end":{"line":922,"column":21}},"424":{"start":{"line":931,"column":4},"end":{"line":931,"column":64}},"425":{"start":{"line":939,"column":4},"end":{"line":970,"column":6}},"426":{"start":{"line":940,"column":8},"end":{"line":940,"column":53}},"427":{"start":{"line":941,"column":8},"end":{"line":941,"column":43}},"428":{"start":{"line":941,"column":22},"end":{"line":941,"column":43}},"429":{"start":{"line":942,"column":8},"end":{"line":951,"column":9}},"430":{"start":{"line":943,"column":12},"end":{"line":944,"column":77}},"431":{"start":{"line":944,"column":16},"end":{"line":944,"column":77}},"432":{"start":{"line":945,"column":12},"end":{"line":945,"column":25}},"433":{"start":{"line":946,"column":12},"end":{"line":947,"column":79}},"434":{"start":{"line":947,"column":16},"end":{"line":947,"column":79}},"435":{"start":{"line":948,"column":12},"end":{"line":948,"column":26}},"436":{"start":{"line":949,"column":12},"end":{"line":950,"column":100}},"437":{"start":{"line":950,"column":16},"end":{"line":950,"column":100}},"438":{"start":{"line":952,"column":8},"end":{"line":952,"column":20}},"439":{"start":{"line":953,"column":8},"end":{"line":953,"column":43}},"440":{"start":{"line":954,"column":8},"end":{"line":955,"column":72}},"441":{"start":{"line":955,"column":12},"end":{"line":955,"column":72}},"442":{"start":{"line":956,"column":8},"end":{"line":956,"column":20}},"443":{"start":{"line":957,"column":8},"end":{"line":967,"column":9}},"444":{"start":{"line":958,"column":12},"end":{"line":958,"column":58}},"445":{"start":{"line":959,"column":12},"end":{"line":959,"column":58}},"446":{"start":{"line":960,"column":12},"end":{"line":960,"column":58}},"447":{"start":{"line":961,"column":12},"end":{"line":961,"column":58}},"448":{"start":{"line":963,"column":12},"end":{"line":963,"column":58}},"449":{"start":{"line":964,"column":12},"end":{"line":964,"column":58}},"450":{"start":{"line":965,"column":12},"end":{"line":965,"column":58}},"451":{"start":{"line":966,"column":12},"end":{"line":966,"column":58}},"452":{"start":{"line":968,"column":8},"end":{"line":968,"column":39}},"453":{"start":{"line":968,"column":22},"end":{"line":968,"column":39}},"454":{"start":{"line":969,"column":8},"end":{"line":969,"column":20}},"455":{"start":{"line":979,"column":4},"end":{"line":979,"column":70}},"456":{"start":{"line":987,"column":4},"end":{"line":1011,"column":6}},"457":{"start":{"line":988,"column":8},"end":{"line":988,"column":53}},"458":{"start":{"line":989,"column":8},"end":{"line":989,"column":43}},"459":{"start":{"line":989,"column":22},"end":{"line":989,"column":43}},"460":{"start":{"line":990,"column":8},"end":{"line":996,"column":9}},"461":{"start":{"line":991,"column":12},"end":{"line":992,"column":79}},"462":{"start":{"line":992,"column":16},"end":{"line":992,"column":79}},"463":{"start":{"line":993,"column":12},"end":{"line":993,"column":26}},"464":{"start":{"line":994,"column":12},"end":{"line":995,"column":100}},"465":{"start":{"line":995,"column":16},"end":{"line":995,"column":100}},"466":{"start":{"line":997,"column":8},"end":{"line":997,"column":22}},"467":{"start":{"line":998,"column":8},"end":{"line":1008,"column":9}},"468":{"start":{"line":999,"column":12},"end":{"line":999,"column":49}},"469":{"start":{"line":1000,"column":12},"end":{"line":1000,"column":49}},"470":{"start":{"line":1001,"column":12},"end":{"line":1001,"column":43}},"471":{"start":{"line":1002,"column":12},"end":{"line":1002,"column":55}},"472":{"start":{"line":1004,"column":12},"end":{"line":1004,"column":49}},"473":{"start":{"line":1005,"column":12},"end":{"line":1005,"column":49}},"474":{"start":{"line":1006,"column":12},"end":{"line":1006,"column":43}},"475":{"start":{"line":1007,"column":12},"end":{"line":1007,"column":55}},"476":{"start":{"line":1009,"column":8},"end":{"line":1009,"column":39}},"477":{"start":{"line":1009,"column":22},"end":{"line":1009,"column":39}},"478":{"start":{"line":1010,"column":8},"end":{"line":1010,"column":21}},"479":{"start":{"line":1020,"column":4},"end":{"line":1020,"column":68}},"480":{"start":{"line":1024,"column":4},"end":{"line":1268,"column":5}},"481":{"start":{"line":1033,"column":8},"end":{"line":1083,"column":10}},"482":{"start":{"line":1034,"column":12},"end":{"line":1034,"column":57}},"483":{"start":{"line":1035,"column":12},"end":{"line":1035,"column":47}},"484":{"start":{"line":1035,"column":26},"end":{"line":1035,"column":47}},"485":{"start":{"line":1036,"column":12},"end":{"line":1048,"column":13}},"486":{"start":{"line":1037,"column":16},"end":{"line":1042,"column":89}},"487":{"start":{"line":1038,"column":20},"end":{"line":1038,"column":51}},"488":{"start":{"line":1039,"column":21},"end":{"line":1042,"column":89}},"489":{"start":{"line":1040,"column":20},"end":{"line":1040,"column":51}},"490":{"start":{"line":1041,"column":21},"end":{"line":1042,"column":89}},"491":{"start":{"line":1042,"column":20},"end":{"line":1042,"column":89}},"492":{"start":{"line":1043,"column":16},"end":{"line":1044,"column":83}},"493":{"start":{"line":1044,"column":20},"end":{"line":1044,"column":83}},"494":{"start":{"line":1045,"column":16},"end":{"line":1045,"column":30}},"495":{"start":{"line":1046,"column":16},"end":{"line":1047,"column":104}},"496":{"start":{"line":1047,"column":20},"end":{"line":1047,"column":104}},"497":{"start":{"line":1049,"column":12},"end":{"line":1052,"column":47}},"498":{"start":{"line":1050,"column":16},"end":{"line":1050,"column":47}},"499":{"start":{"line":1051,"column":17},"end":{"line":1052,"column":47}},"500":{"start":{"line":1052,"column":16},"end":{"line":1052,"column":47}},"501":{"start":{"line":1053,"column":12},"end":{"line":1053,"column":24}},"502":{"start":{"line":1054,"column":12},"end":{"line":1054,"column":47}},"503":{"start":{"line":1055,"column":12},"end":{"line":1056,"column":76}},"504":{"start":{"line":1056,"column":16},"end":{"line":1056,"column":76}},"505":{"start":{"line":1057,"column":12},"end":{"line":1057,"column":24}},"506":{"start":{"line":1058,"column":12},"end":{"line":1059,"column":32}},"507":{"start":{"line":1060,"column":12},"end":{"line":1080,"column":13}},"508":{"start":{"line":1061,"column":16},"end":{"line":1061,"column":59}},"509":{"start":{"line":1062,"column":16},"end":{"line":1062,"column":59}},"510":{"start":{"line":1063,"column":16},"end":{"line":1063,"column":59}},"511":{"start":{"line":1064,"column":16},"end":{"line":1064,"column":59}},"512":{"start":{"line":1065,"column":16},"end":{"line":1065,"column":28}},"513":{"start":{"line":1066,"column":16},"end":{"line":1066,"column":59}},"514":{"start":{"line":1067,"column":16},"end":{"line":1067,"column":59}},"515":{"start":{"line":1068,"column":16},"end":{"line":1068,"column":59}},"516":{"start":{"line":1069,"column":16},"end":{"line":1069,"column":59}},"517":{"start":{"line":1071,"column":16},"end":{"line":1071,"column":59}},"518":{"start":{"line":1072,"column":16},"end":{"line":1072,"column":59}},"519":{"start":{"line":1073,"column":16},"end":{"line":1073,"column":59}},"520":{"start":{"line":1074,"column":16},"end":{"line":1074,"column":59}},"521":{"start":{"line":1075,"column":16},"end":{"line":1075,"column":28}},"522":{"start":{"line":1076,"column":16},"end":{"line":1076,"column":59}},"523":{"start":{"line":1077,"column":16},"end":{"line":1077,"column":59}},"524":{"start":{"line":1078,"column":16},"end":{"line":1078,"column":59}},"525":{"start":{"line":1079,"column":16},"end":{"line":1079,"column":59}},"526":{"start":{"line":1081,"column":12},"end":{"line":1081,"column":43}},"527":{"start":{"line":1081,"column":26},"end":{"line":1081,"column":43}},"528":{"start":{"line":1082,"column":12},"end":{"line":1082,"column":24}},"529":{"start":{"line":1092,"column":8},"end":{"line":1092,"column":71}},"530":{"start":{"line":1100,"column":8},"end":{"line":1136,"column":10}},"531":{"start":{"line":1101,"column":12},"end":{"line":1101,"column":57}},"532":{"start":{"line":1102,"column":12},"end":{"line":1102,"column":47}},"533":{"start":{"line":1102,"column":26},"end":{"line":1102,"column":47}},"534":{"start":{"line":1103,"column":12},"end":{"line":1109,"column":13}},"535":{"start":{"line":1104,"column":16},"end":{"line":1105,"column":83}},"536":{"start":{"line":1105,"column":20},"end":{"line":1105,"column":83}},"537":{"start":{"line":1106,"column":16},"end":{"line":1106,"column":30}},"538":{"start":{"line":1107,"column":16},"end":{"line":1108,"column":104}},"539":{"start":{"line":1108,"column":20},"end":{"line":1108,"column":104}},"540":{"start":{"line":1110,"column":12},"end":{"line":1111,"column":23}},"541":{"start":{"line":1112,"column":12},"end":{"line":1132,"column":13}},"542":{"start":{"line":1113,"column":16},"end":{"line":1113,"column":50}},"543":{"start":{"line":1114,"column":16},"end":{"line":1114,"column":50}},"544":{"start":{"line":1115,"column":16},"end":{"line":1115,"column":44}},"545":{"start":{"line":1116,"column":16},"end":{"line":1116,"column":56}},"546":{"start":{"line":1117,"column":16},"end":{"line":1117,"column":28}},"547":{"start":{"line":1118,"column":16},"end":{"line":1118,"column":50}},"548":{"start":{"line":1119,"column":16},"end":{"line":1119,"column":50}},"549":{"start":{"line":1120,"column":16},"end":{"line":1120,"column":44}},"550":{"start":{"line":1121,"column":16},"end":{"line":1121,"column":56}},"551":{"start":{"line":1123,"column":16},"end":{"line":1123,"column":50}},"552":{"start":{"line":1124,"column":16},"end":{"line":1124,"column":50}},"553":{"start":{"line":1125,"column":16},"end":{"line":1125,"column":44}},"554":{"start":{"line":1126,"column":16},"end":{"line":1126,"column":56}},"555":{"start":{"line":1127,"column":16},"end":{"line":1127,"column":28}},"556":{"start":{"line":1128,"column":16},"end":{"line":1128,"column":50}},"557":{"start":{"line":1129,"column":16},"end":{"line":1129,"column":50}},"558":{"start":{"line":1130,"column":16},"end":{"line":1130,"column":44}},"559":{"start":{"line":1131,"column":16},"end":{"line":1131,"column":56}},"560":{"start":{"line":1133,"column":12},"end":{"line":1133,"column":48}},"561":{"start":{"line":1134,"column":12},"end":{"line":1134,"column":43}},"562":{"start":{"line":1134,"column":26},"end":{"line":1134,"column":43}},"563":{"start":{"line":1135,"column":12},"end":{"line":1135,"column":25}},"564":{"start":{"line":1144,"column":8},"end":{"line":1144,"column":69}},"565":{"start":{"line":1153,"column":8},"end":{"line":1203,"column":10}},"566":{"start":{"line":1154,"column":12},"end":{"line":1154,"column":57}},"567":{"start":{"line":1155,"column":12},"end":{"line":1155,"column":47}},"568":{"start":{"line":1155,"column":26},"end":{"line":1155,"column":47}},"569":{"start":{"line":1156,"column":12},"end":{"line":1168,"column":13}},"570":{"start":{"line":1157,"column":16},"end":{"line":1162,"column":89}},"571":{"start":{"line":1158,"column":20},"end":{"line":1158,"column":51}},"572":{"start":{"line":1159,"column":21},"end":{"line":1162,"column":89}},"573":{"start":{"line":1160,"column":20},"end":{"line":1160,"column":51}},"574":{"start":{"line":1161,"column":21},"end":{"line":1162,"column":89}},"575":{"start":{"line":1162,"column":20},"end":{"line":1162,"column":89}},"576":{"start":{"line":1163,"column":16},"end":{"line":1164,"column":83}},"577":{"start":{"line":1164,"column":20},"end":{"line":1164,"column":83}},"578":{"start":{"line":1165,"column":16},"end":{"line":1165,"column":30}},"579":{"start":{"line":1166,"column":16},"end":{"line":1167,"column":104}},"580":{"start":{"line":1167,"column":20},"end":{"line":1167,"column":104}},"581":{"start":{"line":1169,"column":12},"end":{"line":1172,"column":47}},"582":{"start":{"line":1170,"column":16},"end":{"line":1170,"column":47}},"583":{"start":{"line":1171,"column":17},"end":{"line":1172,"column":47}},"584":{"start":{"line":1172,"column":16},"end":{"line":1172,"column":47}},"585":{"start":{"line":1173,"column":12},"end":{"line":1173,"column":24}},"586":{"start":{"line":1174,"column":12},"end":{"line":1174,"column":47}},"587":{"start":{"line":1175,"column":12},"end":{"line":1176,"column":76}},"588":{"start":{"line":1176,"column":16},"end":{"line":1176,"column":76}},"589":{"start":{"line":1177,"column":12},"end":{"line":1177,"column":24}},"590":{"start":{"line":1178,"column":12},"end":{"line":1179,"column":32}},"591":{"start":{"line":1180,"column":12},"end":{"line":1200,"column":13}},"592":{"start":{"line":1181,"column":16},"end":{"line":1181,"column":59}},"593":{"start":{"line":1182,"column":16},"end":{"line":1182,"column":59}},"594":{"start":{"line":1183,"column":16},"end":{"line":1183,"column":59}},"595":{"start":{"line":1184,"column":16},"end":{"line":1184,"column":59}},"596":{"start":{"line":1185,"column":16},"end":{"line":1185,"column":28}},"597":{"start":{"line":1186,"column":16},"end":{"line":1186,"column":59}},"598":{"start":{"line":1187,"column":16},"end":{"line":1187,"column":59}},"599":{"start":{"line":1188,"column":16},"end":{"line":1188,"column":59}},"600":{"start":{"line":1189,"column":16},"end":{"line":1189,"column":59}},"601":{"start":{"line":1191,"column":16},"end":{"line":1191,"column":59}},"602":{"start":{"line":1192,"column":16},"end":{"line":1192,"column":59}},"603":{"start":{"line":1193,"column":16},"end":{"line":1193,"column":59}},"604":{"start":{"line":1194,"column":16},"end":{"line":1194,"column":59}},"605":{"start":{"line":1195,"column":16},"end":{"line":1195,"column":28}},"606":{"start":{"line":1196,"column":16},"end":{"line":1196,"column":59}},"607":{"start":{"line":1197,"column":16},"end":{"line":1197,"column":59}},"608":{"start":{"line":1198,"column":16},"end":{"line":1198,"column":59}},"609":{"start":{"line":1199,"column":16},"end":{"line":1199,"column":59}},"610":{"start":{"line":1201,"column":12},"end":{"line":1201,"column":43}},"611":{"start":{"line":1201,"column":26},"end":{"line":1201,"column":43}},"612":{"start":{"line":1202,"column":12},"end":{"line":1202,"column":24}},"613":{"start":{"line":1213,"column":8},"end":{"line":1213,"column":74}},"614":{"start":{"line":1221,"column":8},"end":{"line":1257,"column":10}},"615":{"start":{"line":1222,"column":12},"end":{"line":1222,"column":57}},"616":{"start":{"line":1223,"column":12},"end":{"line":1223,"column":47}},"617":{"start":{"line":1223,"column":26},"end":{"line":1223,"column":47}},"618":{"start":{"line":1224,"column":12},"end":{"line":1230,"column":13}},"619":{"start":{"line":1225,"column":16},"end":{"line":1226,"column":83}},"620":{"start":{"line":1226,"column":20},"end":{"line":1226,"column":83}},"621":{"start":{"line":1227,"column":16},"end":{"line":1227,"column":30}},"622":{"start":{"line":1228,"column":16},"end":{"line":1229,"column":104}},"623":{"start":{"line":1229,"column":20},"end":{"line":1229,"column":104}},"624":{"start":{"line":1231,"column":12},"end":{"line":1232,"column":23}},"625":{"start":{"line":1233,"column":12},"end":{"line":1253,"column":13}},"626":{"start":{"line":1234,"column":16},"end":{"line":1234,"column":50}},"627":{"start":{"line":1235,"column":16},"end":{"line":1235,"column":50}},"628":{"start":{"line":1236,"column":16},"end":{"line":1236,"column":44}},"629":{"start":{"line":1237,"column":16},"end":{"line":1237,"column":56}},"630":{"start":{"line":1238,"column":16},"end":{"line":1238,"column":28}},"631":{"start":{"line":1239,"column":16},"end":{"line":1239,"column":50}},"632":{"start":{"line":1240,"column":16},"end":{"line":1240,"column":50}},"633":{"start":{"line":1241,"column":16},"end":{"line":1241,"column":44}},"634":{"start":{"line":1242,"column":16},"end":{"line":1242,"column":56}},"635":{"start":{"line":1244,"column":16},"end":{"line":1244,"column":50}},"636":{"start":{"line":1245,"column":16},"end":{"line":1245,"column":50}},"637":{"start":{"line":1246,"column":16},"end":{"line":1246,"column":44}},"638":{"start":{"line":1247,"column":16},"end":{"line":1247,"column":56}},"639":{"start":{"line":1248,"column":16},"end":{"line":1248,"column":28}},"640":{"start":{"line":1249,"column":16},"end":{"line":1249,"column":50}},"641":{"start":{"line":1250,"column":16},"end":{"line":1250,"column":50}},"642":{"start":{"line":1251,"column":16},"end":{"line":1251,"column":44}},"643":{"start":{"line":1252,"column":16},"end":{"line":1252,"column":56}},"644":{"start":{"line":1254,"column":12},"end":{"line":1254,"column":47}},"645":{"start":{"line":1255,"column":12},"end":{"line":1255,"column":43}},"646":{"start":{"line":1255,"column":26},"end":{"line":1255,"column":43}},"647":{"start":{"line":1256,"column":12},"end":{"line":1256,"column":25}},"648":{"start":{"line":1266,"column":8},"end":{"line":1266,"column":72}},"649":{"start":{"line":1280,"column":4},"end":{"line":1302,"column":6}},"650":{"start":{"line":1281,"column":8},"end":{"line":1281,"column":53}},"651":{"start":{"line":1282,"column":8},"end":{"line":1282,"column":43}},"652":{"start":{"line":1282,"column":22},"end":{"line":1282,"column":43}},"653":{"start":{"line":1283,"column":8},"end":{"line":1291,"column":9}},"654":{"start":{"line":1284,"column":12},"end":{"line":1285,"column":75}},"655":{"start":{"line":1285,"column":16},"end":{"line":1285,"column":75}},"656":{"start":{"line":1286,"column":12},"end":{"line":1287,"column":79}},"657":{"start":{"line":1287,"column":16},"end":{"line":1287,"column":79}},"658":{"start":{"line":1288,"column":12},"end":{"line":1288,"column":26}},"659":{"start":{"line":1289,"column":12},"end":{"line":1290,"column":100}},"660":{"start":{"line":1290,"column":16},"end":{"line":1290,"column":100}},"661":{"start":{"line":1292,"column":8},"end":{"line":1292,"column":20}},"662":{"start":{"line":1293,"column":8},"end":{"line":1293,"column":43}},"663":{"start":{"line":1294,"column":8},"end":{"line":1295,"column":72}},"664":{"start":{"line":1295,"column":12},"end":{"line":1295,"column":72}},"665":{"start":{"line":1296,"column":8},"end":{"line":1296,"column":20}},"666":{"start":{"line":1297,"column":8},"end":{"line":1299,"column":60}},"667":{"start":{"line":1300,"column":8},"end":{"line":1300,"column":39}},"668":{"start":{"line":1300,"column":22},"end":{"line":1300,"column":39}},"669":{"start":{"line":1301,"column":8},"end":{"line":1301,"column":20}},"670":{"start":{"line":1312,"column":4},"end":{"line":1312,"column":70}},"671":{"start":{"line":1320,"column":4},"end":{"line":1335,"column":6}},"672":{"start":{"line":1321,"column":8},"end":{"line":1321,"column":53}},"673":{"start":{"line":1322,"column":8},"end":{"line":1322,"column":43}},"674":{"start":{"line":1322,"column":22},"end":{"line":1322,"column":43}},"675":{"start":{"line":1323,"column":8},"end":{"line":1329,"column":9}},"676":{"start":{"line":1324,"column":12},"end":{"line":1325,"column":79}},"677":{"start":{"line":1325,"column":16},"end":{"line":1325,"column":79}},"678":{"start":{"line":1326,"column":12},"end":{"line":1326,"column":26}},"679":{"start":{"line":1327,"column":12},"end":{"line":1328,"column":100}},"680":{"start":{"line":1328,"column":16},"end":{"line":1328,"column":100}},"681":{"start":{"line":1330,"column":8},"end":{"line":1332,"column":52}},"682":{"start":{"line":1333,"column":8},"end":{"line":1333,"column":39}},"683":{"start":{"line":1333,"column":22},"end":{"line":1333,"column":39}},"684":{"start":{"line":1334,"column":8},"end":{"line":1334,"column":21}},"685":{"start":{"line":1344,"column":4},"end":{"line":1344,"column":68}},"686":{"start":{"line":1355,"column":4},"end":{"line":1377,"column":6}},"687":{"start":{"line":1356,"column":8},"end":{"line":1356,"column":53}},"688":{"start":{"line":1357,"column":8},"end":{"line":1357,"column":43}},"689":{"start":{"line":1357,"column":22},"end":{"line":1357,"column":43}},"690":{"start":{"line":1358,"column":8},"end":{"line":1366,"column":9}},"691":{"start":{"line":1359,"column":12},"end":{"line":1360,"column":75}},"692":{"start":{"line":1360,"column":16},"end":{"line":1360,"column":75}},"693":{"start":{"line":1361,"column":12},"end":{"line":1362,"column":79}},"694":{"start":{"line":1362,"column":16},"end":{"line":1362,"column":79}},"695":{"start":{"line":1363,"column":12},"end":{"line":1363,"column":26}},"696":{"start":{"line":1364,"column":12},"end":{"line":1365,"column":100}},"697":{"start":{"line":1365,"column":16},"end":{"line":1365,"column":100}},"698":{"start":{"line":1367,"column":8},"end":{"line":1367,"column":20}},"699":{"start":{"line":1368,"column":8},"end":{"line":1368,"column":43}},"700":{"start":{"line":1369,"column":8},"end":{"line":1370,"column":72}},"701":{"start":{"line":1370,"column":12},"end":{"line":1370,"column":72}},"702":{"start":{"line":1371,"column":8},"end":{"line":1371,"column":20}},"703":{"start":{"line":1372,"column":8},"end":{"line":1374,"column":61}},"704":{"start":{"line":1375,"column":8},"end":{"line":1375,"column":39}},"705":{"start":{"line":1375,"column":22},"end":{"line":1375,"column":39}},"706":{"start":{"line":1376,"column":8},"end":{"line":1376,"column":20}},"707":{"start":{"line":1387,"column":4},"end":{"line":1387,"column":71}},"708":{"start":{"line":1395,"column":4},"end":{"line":1410,"column":6}},"709":{"start":{"line":1396,"column":8},"end":{"line":1396,"column":53}},"710":{"start":{"line":1397,"column":8},"end":{"line":1397,"column":43}},"711":{"start":{"line":1397,"column":22},"end":{"line":1397,"column":43}},"712":{"start":{"line":1398,"column":8},"end":{"line":1404,"column":9}},"713":{"start":{"line":1399,"column":12},"end":{"line":1400,"column":79}},"714":{"start":{"line":1400,"column":16},"end":{"line":1400,"column":79}},"715":{"start":{"line":1401,"column":12},"end":{"line":1401,"column":26}},"716":{"start":{"line":1402,"column":12},"end":{"line":1403,"column":100}},"717":{"start":{"line":1403,"column":16},"end":{"line":1403,"column":100}},"718":{"start":{"line":1405,"column":8},"end":{"line":1407,"column":53}},"719":{"start":{"line":1408,"column":8},"end":{"line":1408,"column":39}},"720":{"start":{"line":1408,"column":22},"end":{"line":1408,"column":39}},"721":{"start":{"line":1409,"column":8},"end":{"line":1409,"column":21}},"722":{"start":{"line":1419,"column":4},"end":{"line":1419,"column":69}},"723":{"start":{"line":1430,"column":4},"end":{"line":1430,"column":38}},"724":{"start":{"line":1438,"column":4},"end":{"line":1446,"column":6}},"725":{"start":{"line":1440,"column":8},"end":{"line":1440,"column":28}},"726":{"start":{"line":1441,"column":13},"end":{"line":1445,"column":43}},"727":{"start":{"line":1441,"column":34},"end":{"line":1441,"column":43}},"728":{"start":{"line":1442,"column":13},"end":{"line":1445,"column":43}},"729":{"start":{"line":1442,"column":34},"end":{"line":1442,"column":43}},"730":{"start":{"line":1443,"column":13},"end":{"line":1445,"column":43}},"731":{"start":{"line":1443,"column":34},"end":{"line":1443,"column":43}},"732":{"start":{"line":1444,"column":13},"end":{"line":1445,"column":43}},"733":{"start":{"line":1444,"column":34},"end":{"line":1444,"column":43}},"734":{"start":{"line":1445,"column":34},"end":{"line":1445,"column":43}},"735":{"start":{"line":1454,"column":4},"end":{"line":1456,"column":6}},"736":{"start":{"line":1455,"column":8},"end":{"line":1455,"column":51}},"737":{"start":{"line":1464,"column":4},"end":{"line":1466,"column":6}},"738":{"start":{"line":1465,"column":8},"end":{"line":1465,"column":42}},"739":{"start":{"line":1476,"column":4},"end":{"line":1508,"column":6}},"740":{"start":{"line":1477,"column":8},"end":{"line":1477,"column":53}},"741":{"start":{"line":1478,"column":8},"end":{"line":1478,"column":43}},"742":{"start":{"line":1478,"column":22},"end":{"line":1478,"column":43}},"743":{"start":{"line":1479,"column":8},"end":{"line":1488,"column":9}},"744":{"start":{"line":1480,"column":12},"end":{"line":1481,"column":77}},"745":{"start":{"line":1481,"column":16},"end":{"line":1481,"column":77}},"746":{"start":{"line":1482,"column":12},"end":{"line":1482,"column":23}},"747":{"start":{"line":1483,"column":12},"end":{"line":1484,"column":79}},"748":{"start":{"line":1484,"column":16},"end":{"line":1484,"column":79}},"749":{"start":{"line":1485,"column":12},"end":{"line":1485,"column":26}},"750":{"start":{"line":1486,"column":12},"end":{"line":1487,"column":100}},"751":{"start":{"line":1487,"column":16},"end":{"line":1487,"column":100}},"752":{"start":{"line":1489,"column":8},"end":{"line":1490,"column":14}},"753":{"start":{"line":1491,"column":8},"end":{"line":1491,"column":23}},"754":{"start":{"line":1492,"column":8},"end":{"line":1492,"column":44}},"755":{"start":{"line":1493,"column":8},"end":{"line":1494,"column":74}},"756":{"start":{"line":1494,"column":12},"end":{"line":1494,"column":74}},"757":{"start":{"line":1495,"column":8},"end":{"line":1495,"column":23}},"758":{"start":{"line":1496,"column":8},"end":{"line":1496,"column":21}},"759":{"start":{"line":1497,"column":8},"end":{"line":1501,"column":9}},"760":{"start":{"line":1498,"column":12},"end":{"line":1498,"column":38}},"761":{"start":{"line":1499,"column":12},"end":{"line":1499,"column":38}},"762":{"start":{"line":1500,"column":12},"end":{"line":1500,"column":25}},"763":{"start":{"line":1502,"column":8},"end":{"line":1502,"column":38}},"764":{"start":{"line":1503,"column":8},"end":{"line":1506,"column":9}},"765":{"start":{"line":1504,"column":12},"end":{"line":1504,"column":33}},"766":{"start":{"line":1505,"column":12},"end":{"line":1505,"column":24}},"767":{"start":{"line":1507,"column":8},"end":{"line":1507,"column":20}},"768":{"start":{"line":1518,"column":4},"end":{"line":1520,"column":6}},"769":{"start":{"line":1519,"column":8},"end":{"line":1519,"column":76}},"770":{"start":{"line":1532,"column":4},"end":{"line":1565,"column":6}},"771":{"start":{"line":1533,"column":8},"end":{"line":1533,"column":53}},"772":{"start":{"line":1534,"column":8},"end":{"line":1534,"column":43}},"773":{"start":{"line":1534,"column":22},"end":{"line":1534,"column":43}},"774":{"start":{"line":1535,"column":8},"end":{"line":1541,"column":9}},"775":{"start":{"line":1536,"column":12},"end":{"line":1537,"column":79}},"776":{"start":{"line":1537,"column":16},"end":{"line":1537,"column":79}},"777":{"start":{"line":1538,"column":12},"end":{"line":1538,"column":26}},"778":{"start":{"line":1539,"column":12},"end":{"line":1540,"column":100}},"779":{"start":{"line":1540,"column":16},"end":{"line":1540,"column":100}},"780":{"start":{"line":1542,"column":8},"end":{"line":1544,"column":14}},"781":{"start":{"line":1545,"column":8},"end":{"line":1555,"column":35}},"782":{"start":{"line":1546,"column":12},"end":{"line":1550,"column":13}},"783":{"start":{"line":1547,"column":16},"end":{"line":1547,"column":45}},"784":{"start":{"line":1548,"column":16},"end":{"line":1548,"column":40}},"785":{"start":{"line":1549,"column":16},"end":{"line":1549,"column":26}},"786":{"start":{"line":1551,"column":12},"end":{"line":1551,"column":38}},"787":{"start":{"line":1552,"column":12},"end":{"line":1553,"column":45}},"788":{"start":{"line":1553,"column":16},"end":{"line":1553,"column":45}},"789":{"start":{"line":1554,"column":12},"end":{"line":1554,"column":16}},"790":{"start":{"line":1556,"column":8},"end":{"line":1556,"column":19}},"791":{"start":{"line":1557,"column":8},"end":{"line":1560,"column":9}},"792":{"start":{"line":1558,"column":12},"end":{"line":1558,"column":33}},"793":{"start":{"line":1559,"column":12},"end":{"line":1559,"column":25}},"794":{"start":{"line":1561,"column":8},"end":{"line":1564,"column":10}},"795":{"start":{"line":1576,"column":4},"end":{"line":1583,"column":6}},"796":{"start":{"line":1577,"column":8},"end":{"line":1577,"column":44}},"797":{"start":{"line":1578,"column":8},"end":{"line":1581,"column":49}},"798":{"start":{"line":1579,"column":12},"end":{"line":1579,"column":67}},"799":{"start":{"line":1581,"column":12},"end":{"line":1581,"column":49}},"800":{"start":{"line":1582,"column":8},"end":{"line":1582,"column":19}},"801":{"start":{"line":1587,"column":4},"end":{"line":1796,"column":5}},"802":{"start":{"line":1595,"column":8},"end":{"line":1595,"column":43}},"803":{"start":{"line":1603,"column":8},"end":{"line":1626,"column":10}},"804":{"start":{"line":1604,"column":12},"end":{"line":1607,"column":47}},"805":{"start":{"line":1605,"column":16},"end":{"line":1605,"column":47}},"806":{"start":{"line":1606,"column":17},"end":{"line":1607,"column":47}},"807":{"start":{"line":1607,"column":16},"end":{"line":1607,"column":47}},"808":{"start":{"line":1609,"column":12},"end":{"line":1611,"column":67}},"809":{"start":{"line":1612,"column":12},"end":{"line":1625,"column":47}},"810":{"start":{"line":1613,"column":16},"end":{"line":1623,"column":17}},"811":{"start":{"line":1614,"column":20},"end":{"line":1617,"column":55}},"812":{"start":{"line":1615,"column":24},"end":{"line":1615,"column":54}},"813":{"start":{"line":1617,"column":24},"end":{"line":1617,"column":55}},"814":{"start":{"line":1619,"column":20},"end":{"line":1622,"column":55}},"815":{"start":{"line":1620,"column":24},"end":{"line":1620,"column":54}},"816":{"start":{"line":1622,"column":24},"end":{"line":1622,"column":55}},"817":{"start":{"line":1625,"column":16},"end":{"line":1625,"column":47}},"818":{"start":{"line":1634,"column":8},"end":{"line":1642,"column":10}},"819":{"start":{"line":1635,"column":12},"end":{"line":1639,"column":72}},"820":{"start":{"line":1636,"column":16},"end":{"line":1636,"column":54}},"821":{"start":{"line":1637,"column":17},"end":{"line":1639,"column":72}},"822":{"start":{"line":1638,"column":16},"end":{"line":1638,"column":54}},"823":{"start":{"line":1639,"column":17},"end":{"line":1639,"column":72}},"824":{"start":{"line":1639,"column":47},"end":{"line":1639,"column":72}},"825":{"start":{"line":1641,"column":12},"end":{"line":1641,"column":77}},"826":{"start":{"line":1650,"column":8},"end":{"line":1658,"column":10}},"827":{"start":{"line":1651,"column":12},"end":{"line":1655,"column":72}},"828":{"start":{"line":1652,"column":16},"end":{"line":1652,"column":54}},"829":{"start":{"line":1653,"column":17},"end":{"line":1655,"column":72}},"830":{"start":{"line":1654,"column":16},"end":{"line":1654,"column":54}},"831":{"start":{"line":1655,"column":17},"end":{"line":1655,"column":72}},"832":{"start":{"line":1655,"column":47},"end":{"line":1655,"column":72}},"833":{"start":{"line":1657,"column":12},"end":{"line":1657,"column":103}},"834":{"start":{"line":1668,"column":8},"end":{"line":1716,"column":10}},"835":{"start":{"line":1669,"column":12},"end":{"line":1669,"column":57}},"836":{"start":{"line":1670,"column":12},"end":{"line":1670,"column":47}},"837":{"start":{"line":1670,"column":26},"end":{"line":1670,"column":47}},"838":{"start":{"line":1671,"column":12},"end":{"line":1683,"column":13}},"839":{"start":{"line":1672,"column":16},"end":{"line":1677,"column":89}},"840":{"start":{"line":1673,"column":20},"end":{"line":1673,"column":51}},"841":{"start":{"line":1674,"column":21},"end":{"line":1677,"column":89}},"842":{"start":{"line":1675,"column":20},"end":{"line":1675,"column":51}},"843":{"start":{"line":1676,"column":21},"end":{"line":1677,"column":89}},"844":{"start":{"line":1677,"column":20},"end":{"line":1677,"column":89}},"845":{"start":{"line":1678,"column":16},"end":{"line":1679,"column":83}},"846":{"start":{"line":1679,"column":20},"end":{"line":1679,"column":83}},"847":{"start":{"line":1680,"column":16},"end":{"line":1680,"column":30}},"848":{"start":{"line":1681,"column":16},"end":{"line":1682,"column":104}},"849":{"start":{"line":1682,"column":20},"end":{"line":1682,"column":104}},"850":{"start":{"line":1684,"column":12},"end":{"line":1688,"column":72}},"851":{"start":{"line":1685,"column":16},"end":{"line":1685,"column":54}},"852":{"start":{"line":1686,"column":17},"end":{"line":1688,"column":72}},"853":{"start":{"line":1687,"column":16},"end":{"line":1687,"column":54}},"854":{"start":{"line":1688,"column":17},"end":{"line":1688,"column":72}},"855":{"start":{"line":1688,"column":47},"end":{"line":1688,"column":72}},"856":{"start":{"line":1689,"column":12},"end":{"line":1692,"column":67}},"857":{"start":{"line":1693,"column":12},"end":{"line":1693,"column":27}},"858":{"start":{"line":1694,"column":12},"end":{"line":1694,"column":48}},"859":{"start":{"line":1695,"column":12},"end":{"line":1696,"column":78}},"860":{"start":{"line":1696,"column":16},"end":{"line":1696,"column":78}},"861":{"start":{"line":1697,"column":12},"end":{"line":1697,"column":27}},"862":{"start":{"line":1698,"column":12},"end":{"line":1709,"column":13}},"863":{"start":{"line":1699,"column":25},"end":{"line":1699,"column":71}},"864":{"start":{"line":1700,"column":25},"end":{"line":1700,"column":108}},"865":{"start":{"line":1701,"column":25},"end":{"line":1701,"column":108}},"866":{"start":{"line":1702,"column":25},"end":{"line":1702,"column":108}},"867":{"start":{"line":1703,"column":25},"end":{"line":1703,"column":108}},"868":{"start":{"line":1704,"column":25},"end":{"line":1704,"column":108}},"869":{"start":{"line":1705,"column":25},"end":{"line":1705,"column":108}},"870":{"start":{"line":1706,"column":25},"end":{"line":1706,"column":108}},"871":{"start":{"line":1707,"column":25},"end":{"line":1707,"column":108}},"872":{"start":{"line":1708,"column":25},"end":{"line":1708,"column":108}},"873":{"start":{"line":1710,"column":12},"end":{"line":1715,"column":13}},"874":{"start":{"line":1711,"column":16},"end":{"line":1711,"column":36}},"875":{"start":{"line":1712,"column":16},"end":{"line":1712,"column":28}},"876":{"start":{"line":1714,"column":16},"end":{"line":1714,"column":28}},"877":{"start":{"line":1726,"column":8},"end":{"line":1728,"column":10}},"878":{"start":{"line":1727,"column":12},"end":{"line":1727,"column":80}},"879":{"start":{"line":1739,"column":8},"end":{"line":1776,"column":10}},"880":{"start":{"line":1740,"column":12},"end":{"line":1740,"column":57}},"881":{"start":{"line":1741,"column":12},"end":{"line":1741,"column":47}},"882":{"start":{"line":1741,"column":26},"end":{"line":1741,"column":47}},"883":{"start":{"line":1742,"column":12},"end":{"line":1748,"column":13}},"884":{"start":{"line":1743,"column":16},"end":{"line":1744,"column":83}},"885":{"start":{"line":1744,"column":20},"end":{"line":1744,"column":83}},"886":{"start":{"line":1745,"column":16},"end":{"line":1745,"column":30}},"887":{"start":{"line":1746,"column":16},"end":{"line":1747,"column":104}},"888":{"start":{"line":1747,"column":20},"end":{"line":1747,"column":104}},"889":{"start":{"line":1750,"column":12},"end":{"line":1754,"column":23}},"890":{"start":{"line":1755,"column":12},"end":{"line":1755,"column":38}},"891":{"start":{"line":1755,"column":39},"end":{"line":1755,"column":65}},"892":{"start":{"line":1755,"column":66},"end":{"line":1765,"column":53}},"893":{"start":{"line":1756,"column":12},"end":{"line":1756,"column":38}},"894":{"start":{"line":1756,"column":39},"end":{"line":1756,"column":65}},"895":{"start":{"line":1756,"column":66},"end":{"line":1765,"column":52}},"896":{"start":{"line":1757,"column":12},"end":{"line":1757,"column":38}},"897":{"start":{"line":1757,"column":39},"end":{"line":1757,"column":65}},"898":{"start":{"line":1757,"column":66},"end":{"line":1765,"column":51}},"899":{"start":{"line":1758,"column":12},"end":{"line":1758,"column":38}},"900":{"start":{"line":1758,"column":39},"end":{"line":1758,"column":65}},"901":{"start":{"line":1758,"column":66},"end":{"line":1765,"column":50}},"902":{"start":{"line":1759,"column":12},"end":{"line":1759,"column":38}},"903":{"start":{"line":1759,"column":39},"end":{"line":1759,"column":65}},"904":{"start":{"line":1759,"column":66},"end":{"line":1765,"column":49}},"905":{"start":{"line":1760,"column":12},"end":{"line":1760,"column":38}},"906":{"start":{"line":1760,"column":39},"end":{"line":1760,"column":65}},"907":{"start":{"line":1760,"column":66},"end":{"line":1765,"column":48}},"908":{"start":{"line":1761,"column":12},"end":{"line":1761,"column":38}},"909":{"start":{"line":1761,"column":39},"end":{"line":1761,"column":65}},"910":{"start":{"line":1761,"column":66},"end":{"line":1765,"column":47}},"911":{"start":{"line":1762,"column":12},"end":{"line":1762,"column":38}},"912":{"start":{"line":1762,"column":39},"end":{"line":1762,"column":65}},"913":{"start":{"line":1762,"column":66},"end":{"line":1765,"column":46}},"914":{"start":{"line":1763,"column":12},"end":{"line":1763,"column":38}},"915":{"start":{"line":1763,"column":39},"end":{"line":1763,"column":65}},"916":{"start":{"line":1763,"column":66},"end":{"line":1765,"column":45}},"917":{"start":{"line":1764,"column":12},"end":{"line":1764,"column":38}},"918":{"start":{"line":1764,"column":39},"end":{"line":1764,"column":65}},"919":{"start":{"line":1764,"column":66},"end":{"line":1765,"column":44}},"920":{"start":{"line":1765,"column":12},"end":{"line":1765,"column":42}},"921":{"start":{"line":1766,"column":12},"end":{"line":1766,"column":99}},"922":{"start":{"line":1767,"column":12},"end":{"line":1775,"column":13}},"923":{"start":{"line":1768,"column":16},"end":{"line":1768,"column":37}},"924":{"start":{"line":1769,"column":16},"end":{"line":1769,"column":29}},"925":{"start":{"line":1771,"column":16},"end":{"line":1774,"column":18}},"926":{"start":{"line":1787,"column":8},"end":{"line":1794,"column":10}},"927":{"start":{"line":1788,"column":12},"end":{"line":1788,"column":48}},"928":{"start":{"line":1789,"column":12},"end":{"line":1792,"column":53}},"929":{"start":{"line":1790,"column":16},"end":{"line":1790,"column":71}},"930":{"start":{"line":1792,"column":16},"end":{"line":1792,"column":53}},"931":{"start":{"line":1793,"column":12},"end":{"line":1793,"column":23}},"932":{"start":{"line":1810,"column":4},"end":{"line":1842,"column":6}},"933":{"start":{"line":1811,"column":8},"end":{"line":1811,"column":53}},"934":{"start":{"line":1812,"column":8},"end":{"line":1812,"column":43}},"935":{"start":{"line":1812,"column":22},"end":{"line":1812,"column":43}},"936":{"start":{"line":1813,"column":8},"end":{"line":1814,"column":27}},"937":{"start":{"line":1815,"column":8},"end":{"line":1827,"column":9}},"938":{"start":{"line":1816,"column":12},"end":{"line":1817,"column":61}},"939":{"start":{"line":1817,"column":16},"end":{"line":1817,"column":61}},"940":{"start":{"line":1818,"column":12},"end":{"line":1821,"column":13}},"941":{"start":{"line":1819,"column":16},"end":{"line":1820,"column":78}},"942":{"start":{"line":1820,"column":20},"end":{"line":1820,"column":78}},"943":{"start":{"line":1822,"column":12},"end":{"line":1823,"column":79}},"944":{"start":{"line":1823,"column":16},"end":{"line":1823,"column":79}},"945":{"start":{"line":1824,"column":12},"end":{"line":1824,"column":26}},"946":{"start":{"line":1825,"column":12},"end":{"line":1826,"column":100}},"947":{"start":{"line":1826,"column":16},"end":{"line":1826,"column":100}},"948":{"start":{"line":1829,"column":8},"end":{"line":1829,"column":43}},"949":{"start":{"line":1830,"column":8},"end":{"line":1830,"column":22}},"950":{"start":{"line":1831,"column":8},"end":{"line":1831,"column":44}},"951":{"start":{"line":1832,"column":8},"end":{"line":1833,"column":74}},"952":{"start":{"line":1833,"column":12},"end":{"line":1833,"column":74}},"953":{"start":{"line":1834,"column":8},"end":{"line":1834,"column":22}},"954":{"start":{"line":1835,"column":8},"end":{"line":1835,"column":60}},"955":{"start":{"line":1836,"column":8},"end":{"line":1836,"column":34}},"956":{"start":{"line":1837,"column":8},"end":{"line":1840,"column":9}},"957":{"start":{"line":1838,"column":12},"end":{"line":1838,"column":33}},"958":{"start":{"line":1839,"column":12},"end":{"line":1839,"column":24}},"959":{"start":{"line":1841,"column":8},"end":{"line":1841,"column":17}},"960":{"start":{"line":1853,"column":4},"end":{"line":1881,"column":6}},"961":{"start":{"line":1854,"column":8},"end":{"line":1854,"column":53}},"962":{"start":{"line":1855,"column":8},"end":{"line":1855,"column":43}},"963":{"start":{"line":1855,"column":22},"end":{"line":1855,"column":43}},"964":{"start":{"line":1856,"column":8},"end":{"line":1862,"column":9}},"965":{"start":{"line":1857,"column":12},"end":{"line":1858,"column":79}},"966":{"start":{"line":1858,"column":16},"end":{"line":1858,"column":79}},"967":{"start":{"line":1859,"column":12},"end":{"line":1859,"column":26}},"968":{"start":{"line":1860,"column":12},"end":{"line":1861,"column":100}},"969":{"start":{"line":1861,"column":16},"end":{"line":1861,"column":100}},"970":{"start":{"line":1863,"column":8},"end":{"line":1864,"column":17}},"971":{"start":{"line":1866,"column":8},"end":{"line":1870,"column":29}},"972":{"start":{"line":1867,"column":12},"end":{"line":1868,"column":90}},"973":{"start":{"line":1868,"column":16},"end":{"line":1868,"column":90}},"974":{"start":{"line":1869,"column":12},"end":{"line":1869,"column":41}},"975":{"start":{"line":1871,"column":8},"end":{"line":1871,"column":64}},"976":{"start":{"line":1872,"column":8},"end":{"line":1880,"column":9}},"977":{"start":{"line":1873,"column":12},"end":{"line":1873,"column":33}},"978":{"start":{"line":1874,"column":12},"end":{"line":1874,"column":23}},"979":{"start":{"line":1876,"column":12},"end":{"line":1879,"column":14}},"980":{"start":{"line":1894,"column":4},"end":{"line":1932,"column":6}},"981":{"start":{"line":1895,"column":8},"end":{"line":1895,"column":53}},"982":{"start":{"line":1896,"column":8},"end":{"line":1896,"column":43}},"983":{"start":{"line":1896,"column":22},"end":{"line":1896,"column":43}},"984":{"start":{"line":1897,"column":8},"end":{"line":1905,"column":9}},"985":{"start":{"line":1898,"column":12},"end":{"line":1899,"column":61}},"986":{"start":{"line":1899,"column":16},"end":{"line":1899,"column":61}},"987":{"start":{"line":1900,"column":12},"end":{"line":1901,"column":79}},"988":{"start":{"line":1901,"column":16},"end":{"line":1901,"column":79}},"989":{"start":{"line":1902,"column":12},"end":{"line":1902,"column":26}},"990":{"start":{"line":1903,"column":12},"end":{"line":1904,"column":100}},"991":{"start":{"line":1904,"column":16},"end":{"line":1904,"column":100}},"992":{"start":{"line":1906,"column":8},"end":{"line":1907,"column":14}},"993":{"start":{"line":1908,"column":8},"end":{"line":1908,"column":43}},"994":{"start":{"line":1909,"column":8},"end":{"line":1909,"column":22}},"995":{"start":{"line":1910,"column":8},"end":{"line":1910,"column":44}},"996":{"start":{"line":1911,"column":8},"end":{"line":1912,"column":74}},"997":{"start":{"line":1912,"column":12},"end":{"line":1912,"column":74}},"998":{"start":{"line":1913,"column":8},"end":{"line":1913,"column":22}},"999":{"start":{"line":1914,"column":8},"end":{"line":1924,"column":9}},"1000":{"start":{"line":1915,"column":12},"end":{"line":1915,"column":54}},"1001":{"start":{"line":1916,"column":12},"end":{"line":1916,"column":54}},"1002":{"start":{"line":1917,"column":12},"end":{"line":1917,"column":54}},"1003":{"start":{"line":1918,"column":12},"end":{"line":1918,"column":54}},"1004":{"start":{"line":1920,"column":12},"end":{"line":1920,"column":54}},"1005":{"start":{"line":1921,"column":12},"end":{"line":1921,"column":54}},"1006":{"start":{"line":1922,"column":12},"end":{"line":1922,"column":54}},"1007":{"start":{"line":1923,"column":12},"end":{"line":1923,"column":54}},"1008":{"start":{"line":1925,"column":8},"end":{"line":1925,"column":20}},"1009":{"start":{"line":1926,"column":8},"end":{"line":1926,"column":60}},"1010":{"start":{"line":1927,"column":8},"end":{"line":1930,"column":9}},"1011":{"start":{"line":1928,"column":12},"end":{"line":1928,"column":33}},"1012":{"start":{"line":1929,"column":12},"end":{"line":1929,"column":24}},"1013":{"start":{"line":1931,"column":8},"end":{"line":1931,"column":30}},"1014":{"start":{"line":1943,"column":4},"end":{"line":1966,"column":6}},"1015":{"start":{"line":1944,"column":8},"end":{"line":1944,"column":53}},"1016":{"start":{"line":1945,"column":8},"end":{"line":1945,"column":43}},"1017":{"start":{"line":1945,"column":22},"end":{"line":1945,"column":43}},"1018":{"start":{"line":1946,"column":8},"end":{"line":1952,"column":9}},"1019":{"start":{"line":1947,"column":12},"end":{"line":1948,"column":79}},"1020":{"start":{"line":1948,"column":16},"end":{"line":1948,"column":79}},"1021":{"start":{"line":1949,"column":12},"end":{"line":1949,"column":26}},"1022":{"start":{"line":1950,"column":12},"end":{"line":1951,"column":100}},"1023":{"start":{"line":1951,"column":16},"end":{"line":1951,"column":100}},"1024":{"start":{"line":1953,"column":8},"end":{"line":1953,"column":27}},"1025":{"start":{"line":1954,"column":8},"end":{"line":1954,"column":42}},"1026":{"start":{"line":1955,"column":8},"end":{"line":1955,"column":82}},"1027":{"start":{"line":1956,"column":8},"end":{"line":1956,"column":32}},"1028":{"start":{"line":1957,"column":8},"end":{"line":1965,"column":9}},"1029":{"start":{"line":1958,"column":12},"end":{"line":1958,"column":33}},"1030":{"start":{"line":1959,"column":12},"end":{"line":1959,"column":33}},"1031":{"start":{"line":1961,"column":12},"end":{"line":1964,"column":14}},"1032":{"start":{"line":1976,"column":4},"end":{"line":1976,"column":35}},"1033":{"start":{"line":1984,"column":4},"end":{"line":1984,"column":35}},"1034":{"start":{"line":1993,"column":4},"end":{"line":2016,"column":6}},"1035":{"start":{"line":1994,"column":8},"end":{"line":1994,"column":53}},"1036":{"start":{"line":1995,"column":8},"end":{"line":1995,"column":43}},"1037":{"start":{"line":1995,"column":22},"end":{"line":1995,"column":43}},"1038":{"start":{"line":1996,"column":8},"end":{"line":2002,"column":9}},"1039":{"start":{"line":1997,"column":12},"end":{"line":1998,"column":79}},"1040":{"start":{"line":1998,"column":16},"end":{"line":1998,"column":79}},"1041":{"start":{"line":1999,"column":12},"end":{"line":1999,"column":26}},"1042":{"start":{"line":2000,"column":12},"end":{"line":2001,"column":100}},"1043":{"start":{"line":2001,"column":16},"end":{"line":2001,"column":100}},"1044":{"start":{"line":2003,"column":8},"end":{"line":2003,"column":14}},"1045":{"start":{"line":2004,"column":8},"end":{"line":2004,"column":43}},"1046":{"start":{"line":2005,"column":8},"end":{"line":2005,"column":20}},"1047":{"start":{"line":2006,"column":8},"end":{"line":2006,"column":44}},"1048":{"start":{"line":2007,"column":8},"end":{"line":2008,"column":74}},"1049":{"start":{"line":2008,"column":12},"end":{"line":2008,"column":74}},"1050":{"start":{"line":2009,"column":8},"end":{"line":2009,"column":20}},"1051":{"start":{"line":2010,"column":8},"end":{"line":2010,"column":60}},"1052":{"start":{"line":2011,"column":8},"end":{"line":2014,"column":9}},"1053":{"start":{"line":2012,"column":12},"end":{"line":2012,"column":33}},"1054":{"start":{"line":2013,"column":12},"end":{"line":2013,"column":24}},"1055":{"start":{"line":2015,"column":8},"end":{"line":2015,"column":17}},"1056":{"start":{"line":2026,"column":4},"end":{"line":2026,"column":74}},"1057":{"start":{"line":2035,"column":4},"end":{"line":2037,"column":6}},"1058":{"start":{"line":2036,"column":8},"end":{"line":2036,"column":63}},"1059":{"start":{"line":2045,"column":4},"end":{"line":2049,"column":6}},"1060":{"start":{"line":2046,"column":8},"end":{"line":2047,"column":63}},"1061":{"start":{"line":2047,"column":12},"end":{"line":2047,"column":63}},"1062":{"start":{"line":2048,"column":8},"end":{"line":2048,"column":46}},"1063":{"start":{"line":2058,"column":4},"end":{"line":2058,"column":63}},"1064":{"start":{"line":2071,"column":4},"end":{"line":2131,"column":6}},"1065":{"start":{"line":2072,"column":8},"end":{"line":2075,"column":9}},"1066":{"start":{"line":2073,"column":12},"end":{"line":2073,"column":29}},"1067":{"start":{"line":2074,"column":12},"end":{"line":2074,"column":32}},"1068":{"start":{"line":2076,"column":8},"end":{"line":2076,"column":53}},"1069":{"start":{"line":2077,"column":8},"end":{"line":2077,"column":43}},"1070":{"start":{"line":2077,"column":22},"end":{"line":2077,"column":43}},"1071":{"start":{"line":2078,"column":8},"end":{"line":2078,"column":79}},"1072":{"start":{"line":2078,"column":44},"end":{"line":2078,"column":79}},"1073":{"start":{"line":2079,"column":8},"end":{"line":2088,"column":9}},"1074":{"start":{"line":2080,"column":12},"end":{"line":2081,"column":79}},"1075":{"start":{"line":2081,"column":16},"end":{"line":2081,"column":79}},"1076":{"start":{"line":2082,"column":12},"end":{"line":2082,"column":24}},"1077":{"start":{"line":2083,"column":12},"end":{"line":2084,"column":79}},"1078":{"start":{"line":2084,"column":16},"end":{"line":2084,"column":79}},"1079":{"start":{"line":2085,"column":12},"end":{"line":2085,"column":26}},"1080":{"start":{"line":2086,"column":12},"end":{"line":2087,"column":100}},"1081":{"start":{"line":2087,"column":16},"end":{"line":2087,"column":100}},"1082":{"start":{"line":2089,"column":8},"end":{"line":2092,"column":15}},"1083":{"start":{"line":2093,"column":8},"end":{"line":2130,"column":61}},"1084":{"start":{"line":2094,"column":12},"end":{"line":2094,"column":37}},"1085":{"start":{"line":2095,"column":12},"end":{"line":2099,"column":15}},"1086":{"start":{"line":2096,"column":16},"end":{"line":2096,"column":88}},"1087":{"start":{"line":2098,"column":16},"end":{"line":2098,"column":20}},"1088":{"start":{"line":2098,"column":21},"end":{"line":2098,"column":46}},"1089":{"start":{"line":2100,"column":12},"end":{"line":2101,"column":84}},"1090":{"start":{"line":2101,"column":16},"end":{"line":2101,"column":84}},"1091":{"start":{"line":2102,"column":12},"end":{"line":2110,"column":13}},"1092":{"start":{"line":2103,"column":16},"end":{"line":2103,"column":37}},"1093":{"start":{"line":2104,"column":16},"end":{"line":2104,"column":28}},"1094":{"start":{"line":2106,"column":16},"end":{"line":2109,"column":18}},"1095":{"start":{"line":2111,"column":15},"end":{"line":2130,"column":61}},"1096":{"start":{"line":2112,"column":12},"end":{"line":2118,"column":13}},"1097":{"start":{"line":2113,"column":16},"end":{"line":2114,"column":83}},"1098":{"start":{"line":2114,"column":20},"end":{"line":2114,"column":83}},"1099":{"start":{"line":2115,"column":16},"end":{"line":2115,"column":30}},"1100":{"start":{"line":2116,"column":16},"end":{"line":2117,"column":109}},"1101":{"start":{"line":2117,"column":20},"end":{"line":2117,"column":109}},"1102":{"start":{"line":2119,"column":12},"end":{"line":2119,"column":71}},"1103":{"start":{"line":2120,"column":12},"end":{"line":2128,"column":13}},"1104":{"start":{"line":2121,"column":16},"end":{"line":2121,"column":38}},"1105":{"start":{"line":2122,"column":16},"end":{"line":2122,"column":28}},"1106":{"start":{"line":2124,"column":16},"end":{"line":2127,"column":18}},"1107":{"start":{"line":2130,"column":12},"end":{"line":2130,"column":61}},"1108":{"start":{"line":2145,"column":4},"end":{"line":2145,"column":72}},"1109":{"start":{"line":2158,"column":4},"end":{"line":2186,"column":6}},"1110":{"start":{"line":2159,"column":8},"end":{"line":2159,"column":53}},"1111":{"start":{"line":2160,"column":8},"end":{"line":2160,"column":43}},"1112":{"start":{"line":2160,"column":22},"end":{"line":2160,"column":43}},"1113":{"start":{"line":2161,"column":8},"end":{"line":2169,"column":9}},"1114":{"start":{"line":2162,"column":12},"end":{"line":2163,"column":61}},"1115":{"start":{"line":2163,"column":16},"end":{"line":2163,"column":61}},"1116":{"start":{"line":2164,"column":12},"end":{"line":2165,"column":79}},"1117":{"start":{"line":2165,"column":16},"end":{"line":2165,"column":79}},"1118":{"start":{"line":2166,"column":12},"end":{"line":2166,"column":26}},"1119":{"start":{"line":2167,"column":12},"end":{"line":2168,"column":100}},"1120":{"start":{"line":2168,"column":16},"end":{"line":2168,"column":100}},"1121":{"start":{"line":2170,"column":8},"end":{"line":2171,"column":17}},"1122":{"start":{"line":2172,"column":8},"end":{"line":2172,"column":43}},"1123":{"start":{"line":2173,"column":8},"end":{"line":2173,"column":44}},"1124":{"start":{"line":2174,"column":8},"end":{"line":2174,"column":22}},"1125":{"start":{"line":2175,"column":8},"end":{"line":2175,"column":44}},"1126":{"start":{"line":2176,"column":8},"end":{"line":2177,"column":74}},"1127":{"start":{"line":2177,"column":12},"end":{"line":2177,"column":74}},"1128":{"start":{"line":2178,"column":8},"end":{"line":2178,"column":22}},"1129":{"start":{"line":2179,"column":8},"end":{"line":2179,"column":48}},"1130":{"start":{"line":2180,"column":8},"end":{"line":2180,"column":60}},"1131":{"start":{"line":2181,"column":8},"end":{"line":2184,"column":9}},"1132":{"start":{"line":2182,"column":12},"end":{"line":2182,"column":33}},"1133":{"start":{"line":2183,"column":12},"end":{"line":2183,"column":24}},"1134":{"start":{"line":2185,"column":8},"end":{"line":2185,"column":30}},"1135":{"start":{"line":2197,"column":4},"end":{"line":2220,"column":6}},"1136":{"start":{"line":2198,"column":8},"end":{"line":2198,"column":53}},"1137":{"start":{"line":2199,"column":8},"end":{"line":2199,"column":43}},"1138":{"start":{"line":2199,"column":22},"end":{"line":2199,"column":43}},"1139":{"start":{"line":2200,"column":8},"end":{"line":2206,"column":9}},"1140":{"start":{"line":2201,"column":12},"end":{"line":2202,"column":79}},"1141":{"start":{"line":2202,"column":16},"end":{"line":2202,"column":79}},"1142":{"start":{"line":2203,"column":12},"end":{"line":2203,"column":26}},"1143":{"start":{"line":2204,"column":12},"end":{"line":2205,"column":100}},"1144":{"start":{"line":2205,"column":16},"end":{"line":2205,"column":100}},"1145":{"start":{"line":2207,"column":8},"end":{"line":2207,"column":27}},"1146":{"start":{"line":2208,"column":8},"end":{"line":2208,"column":44}},"1147":{"start":{"line":2209,"column":8},"end":{"line":2209,"column":103}},"1148":{"start":{"line":2210,"column":8},"end":{"line":2210,"column":32}},"1149":{"start":{"line":2211,"column":8},"end":{"line":2219,"column":9}},"1150":{"start":{"line":2212,"column":12},"end":{"line":2212,"column":33}},"1151":{"start":{"line":2213,"column":12},"end":{"line":2213,"column":33}},"1152":{"start":{"line":2215,"column":12},"end":{"line":2218,"column":14}},"1153":{"start":{"line":2236,"column":4},"end":{"line":2263,"column":6}},"1154":{"start":{"line":2237,"column":8},"end":{"line":2240,"column":9}},"1155":{"start":{"line":2238,"column":12},"end":{"line":2238,"column":30}},"1156":{"start":{"line":2239,"column":12},"end":{"line":2239,"column":33}},"1157":{"start":{"line":2241,"column":8},"end":{"line":2241,"column":53}},"1158":{"start":{"line":2242,"column":8},"end":{"line":2242,"column":43}},"1159":{"start":{"line":2242,"column":22},"end":{"line":2242,"column":43}},"1160":{"start":{"line":2243,"column":8},"end":{"line":2249,"column":9}},"1161":{"start":{"line":2244,"column":12},"end":{"line":2245,"column":79}},"1162":{"start":{"line":2245,"column":16},"end":{"line":2245,"column":79}},"1163":{"start":{"line":2246,"column":12},"end":{"line":2246,"column":26}},"1164":{"start":{"line":2247,"column":12},"end":{"line":2248,"column":100}},"1165":{"start":{"line":2248,"column":16},"end":{"line":2248,"column":100}},"1166":{"start":{"line":2250,"column":8},"end":{"line":2251,"column":55}},"1167":{"start":{"line":2251,"column":12},"end":{"line":2251,"column":55}},"1168":{"start":{"line":2252,"column":8},"end":{"line":2252,"column":50}},"1169":{"start":{"line":2253,"column":8},"end":{"line":2253,"column":37}},"1170":{"start":{"line":2253,"column":25},"end":{"line":2253,"column":37}},"1171":{"start":{"line":2254,"column":8},"end":{"line":2254,"column":25}},"1172":{"start":{"line":2255,"column":8},"end":{"line":2255,"column":44}},"1173":{"start":{"line":2256,"column":8},"end":{"line":2257,"column":74}},"1174":{"start":{"line":2257,"column":12},"end":{"line":2257,"column":74}},"1175":{"start":{"line":2258,"column":8},"end":{"line":2258,"column":25}},"1176":{"start":{"line":2259,"column":8},"end":{"line":2259,"column":77}},"1177":{"start":{"line":2260,"column":8},"end":{"line":2260,"column":32}},"1178":{"start":{"line":2261,"column":8},"end":{"line":2261,"column":44}},"1179":{"start":{"line":2261,"column":22},"end":{"line":2261,"column":44}},"1180":{"start":{"line":2262,"column":8},"end":{"line":2262,"column":20}},"1181":{"start":{"line":2275,"column":4},"end":{"line":2278,"column":6}},"1182":{"start":{"line":2276,"column":8},"end":{"line":2276,"column":36}},"1183":{"start":{"line":2277,"column":8},"end":{"line":2277,"column":20}},"1184":{"start":{"line":2287,"column":4},"end":{"line":2290,"column":6}},"1185":{"start":{"line":2288,"column":8},"end":{"line":2288,"column":32}},"1186":{"start":{"line":2289,"column":8},"end":{"line":2289,"column":20}},"1187":{"start":{"line":2297,"column":4},"end":{"line":2299,"column":6}},"1188":{"start":{"line":2298,"column":8},"end":{"line":2298,"column":34}},"1189":{"start":{"line":2306,"column":4},"end":{"line":2311,"column":6}},"1190":{"start":{"line":2307,"column":8},"end":{"line":2307,"column":24}},"1191":{"start":{"line":2308,"column":8},"end":{"line":2308,"column":40}},"1192":{"start":{"line":2309,"column":8},"end":{"line":2309,"column":31}},"1193":{"start":{"line":2310,"column":8},"end":{"line":2310,"column":20}},"1194":{"start":{"line":2320,"column":4},"end":{"line":2333,"column":6}},"1195":{"start":{"line":2321,"column":8},"end":{"line":2321,"column":69}},"1196":{"start":{"line":2322,"column":8},"end":{"line":2328,"column":9}},"1197":{"start":{"line":2323,"column":12},"end":{"line":2323,"column":56}},"1198":{"start":{"line":2324,"column":12},"end":{"line":2324,"column":37}},"1199":{"start":{"line":2325,"column":12},"end":{"line":2325,"column":31}},"1200":{"start":{"line":2327,"column":12},"end":{"line":2327,"column":36}},"1201":{"start":{"line":2329,"column":8},"end":{"line":2329,"column":32}},"1202":{"start":{"line":2330,"column":8},"end":{"line":2330,"column":44}},"1203":{"start":{"line":2331,"column":8},"end":{"line":2331,"column":30}},"1204":{"start":{"line":2332,"column":8},"end":{"line":2332,"column":18}},"1205":{"start":{"line":2344,"column":4},"end":{"line":2374,"column":6}},"1206":{"start":{"line":2345,"column":8},"end":{"line":2345,"column":62}},"1207":{"start":{"line":2345,"column":42},"end":{"line":2345,"column":62}},"1208":{"start":{"line":2346,"column":8},"end":{"line":2346,"column":57}},"1209":{"start":{"line":2346,"column":40},"end":{"line":2346,"column":57}},"1210":{"start":{"line":2347,"column":8},"end":{"line":2356,"column":9}},"1211":{"start":{"line":2348,"column":12},"end":{"line":2349,"column":65}},"1212":{"start":{"line":2349,"column":16},"end":{"line":2349,"column":65}},"1213":{"start":{"line":2350,"column":12},"end":{"line":2350,"column":25}},"1214":{"start":{"line":2351,"column":12},"end":{"line":2352,"column":63}},"1215":{"start":{"line":2352,"column":16},"end":{"line":2352,"column":63}},"1216":{"start":{"line":2353,"column":12},"end":{"line":2353,"column":23}},"1217":{"start":{"line":2354,"column":12},"end":{"line":2355,"column":100}},"1218":{"start":{"line":2355,"column":16},"end":{"line":2355,"column":100}},"1219":{"start":{"line":2357,"column":8},"end":{"line":2358,"column":24}},"1220":{"start":{"line":2358,"column":12},"end":{"line":2358,"column":24}},"1221":{"start":{"line":2359,"column":8},"end":{"line":2359,"column":30}},"1222":{"start":{"line":2360,"column":8},"end":{"line":2366,"column":9}},"1223":{"start":{"line":2361,"column":12},"end":{"line":2361,"column":39}},"1224":{"start":{"line":2362,"column":12},"end":{"line":2362,"column":67}},"1225":{"start":{"line":2362,"column":40},"end":{"line":2362,"column":67}},"1226":{"start":{"line":2363,"column":12},"end":{"line":2363,"column":28}},"1227":{"start":{"line":2364,"column":12},"end":{"line":2364,"column":27}},"1228":{"start":{"line":2365,"column":12},"end":{"line":2365,"column":24}},"1229":{"start":{"line":2367,"column":8},"end":{"line":2367,"column":37}},"1230":{"start":{"line":2368,"column":8},"end":{"line":2368,"column":48}},"1231":{"start":{"line":2369,"column":8},"end":{"line":2369,"column":29}},"1232":{"start":{"line":2370,"column":8},"end":{"line":2370,"column":63}},"1233":{"start":{"line":2370,"column":36},"end":{"line":2370,"column":63}},"1234":{"start":{"line":2371,"column":8},"end":{"line":2371,"column":24}},"1235":{"start":{"line":2372,"column":8},"end":{"line":2372,"column":25}},"1236":{"start":{"line":2373,"column":8},"end":{"line":2373,"column":20}},"1237":{"start":{"line":2384,"column":4},"end":{"line":2406,"column":6}},"1238":{"start":{"line":2385,"column":8},"end":{"line":2385,"column":62}},"1239":{"start":{"line":2385,"column":42},"end":{"line":2385,"column":62}},"1240":{"start":{"line":2386,"column":8},"end":{"line":2386,"column":57}},"1241":{"start":{"line":2386,"column":40},"end":{"line":2386,"column":57}},"1242":{"start":{"line":2387,"column":8},"end":{"line":2396,"column":9}},"1243":{"start":{"line":2388,"column":12},"end":{"line":2389,"column":65}},"1244":{"start":{"line":2389,"column":16},"end":{"line":2389,"column":65}},"1245":{"start":{"line":2390,"column":12},"end":{"line":2390,"column":25}},"1246":{"start":{"line":2391,"column":12},"end":{"line":2392,"column":63}},"1247":{"start":{"line":2392,"column":16},"end":{"line":2392,"column":63}},"1248":{"start":{"line":2393,"column":12},"end":{"line":2393,"column":23}},"1249":{"start":{"line":2394,"column":12},"end":{"line":2395,"column":100}},"1250":{"start":{"line":2395,"column":16},"end":{"line":2395,"column":100}},"1251":{"start":{"line":2397,"column":8},"end":{"line":2398,"column":71}},"1252":{"start":{"line":2398,"column":12},"end":{"line":2398,"column":71}},"1253":{"start":{"line":2399,"column":8},"end":{"line":2400,"column":76}},"1254":{"start":{"line":2401,"column":8},"end":{"line":2401,"column":22}},"1255":{"start":{"line":2402,"column":8},"end":{"line":2402,"column":28}},"1256":{"start":{"line":2403,"column":8},"end":{"line":2403,"column":59}},"1257":{"start":{"line":2403,"column":34},"end":{"line":2403,"column":59}},"1258":{"start":{"line":2404,"column":8},"end":{"line":2404,"column":39}},"1259":{"start":{"line":2405,"column":8},"end":{"line":2405,"column":18}},"1260":{"start":{"line":2420,"column":4},"end":{"line":2448,"column":6}},"1261":{"start":{"line":2421,"column":8},"end":{"line":2422,"column":27}},"1262":{"start":{"line":2423,"column":8},"end":{"line":2426,"column":9}},"1263":{"start":{"line":2424,"column":12},"end":{"line":2425,"column":68}},"1264":{"start":{"line":2425,"column":16},"end":{"line":2425,"column":68}},"1265":{"start":{"line":2427,"column":8},"end":{"line":2427,"column":113}},"1266":{"start":{"line":2428,"column":8},"end":{"line":2428,"column":105}},"1267":{"start":{"line":2429,"column":8},"end":{"line":2429,"column":88}},"1268":{"start":{"line":2431,"column":8},"end":{"line":2432,"column":101}},"1269":{"start":{"line":2432,"column":12},"end":{"line":2432,"column":101}},"1270":{"start":{"line":2433,"column":8},"end":{"line":2434,"column":99}},"1271":{"start":{"line":2434,"column":12},"end":{"line":2434,"column":99}},"1272":{"start":{"line":2436,"column":8},"end":{"line":2436,"column":45}},"1273":{"start":{"line":2437,"column":8},"end":{"line":2438,"column":26}},"1274":{"start":{"line":2438,"column":12},"end":{"line":2438,"column":26}},"1275":{"start":{"line":2440,"column":8},"end":{"line":2440,"column":50}},"1276":{"start":{"line":2442,"column":8},"end":{"line":2442,"column":81}},"1277":{"start":{"line":2444,"column":8},"end":{"line":2444,"column":41}},"1278":{"start":{"line":2444,"column":22},"end":{"line":2444,"column":41}},"1279":{"start":{"line":2445,"column":8},"end":{"line":2445,"column":49}},"1280":{"start":{"line":2445,"column":28},"end":{"line":2445,"column":49}},"1281":{"start":{"line":2447,"column":8},"end":{"line":2447,"column":20}},"1282":{"start":{"line":2458,"column":4},"end":{"line":2463,"column":6}},"1283":{"start":{"line":2459,"column":8},"end":{"line":2459,"column":41}},"1284":{"start":{"line":2460,"column":8},"end":{"line":2461,"column":79}},"1285":{"start":{"line":2461,"column":12},"end":{"line":2461,"column":79}},"1286":{"start":{"line":2462,"column":8},"end":{"line":2462,"column":20}},"1287":{"start":{"line":2476,"column":4},"end":{"line":2502,"column":6}},"1288":{"start":{"line":2477,"column":8},"end":{"line":2477,"column":52}},"1289":{"start":{"line":2478,"column":8},"end":{"line":2478,"column":42}},"1290":{"start":{"line":2478,"column":22},"end":{"line":2478,"column":42}},"1291":{"start":{"line":2479,"column":8},"end":{"line":2480,"column":40}},"1292":{"start":{"line":2480,"column":12},"end":{"line":2480,"column":40}},"1293":{"start":{"line":2481,"column":8},"end":{"line":2481,"column":62}},"1294":{"start":{"line":2481,"column":42},"end":{"line":2481,"column":62}},"1295":{"start":{"line":2482,"column":8},"end":{"line":2482,"column":57}},"1296":{"start":{"line":2482,"column":40},"end":{"line":2482,"column":57}},"1297":{"start":{"line":2483,"column":8},"end":{"line":2495,"column":9}},"1298":{"start":{"line":2484,"column":12},"end":{"line":2485,"column":77}},"1299":{"start":{"line":2485,"column":16},"end":{"line":2485,"column":77}},"1300":{"start":{"line":2486,"column":12},"end":{"line":2486,"column":23}},"1301":{"start":{"line":2487,"column":12},"end":{"line":2488,"column":65}},"1302":{"start":{"line":2488,"column":16},"end":{"line":2488,"column":65}},"1303":{"start":{"line":2489,"column":12},"end":{"line":2489,"column":25}},"1304":{"start":{"line":2490,"column":12},"end":{"line":2491,"column":63}},"1305":{"start":{"line":2491,"column":16},"end":{"line":2491,"column":63}},"1306":{"start":{"line":2492,"column":12},"end":{"line":2492,"column":23}},"1307":{"start":{"line":2493,"column":12},"end":{"line":2494,"column":100}},"1308":{"start":{"line":2494,"column":16},"end":{"line":2494,"column":100}},"1309":{"start":{"line":2496,"column":8},"end":{"line":2497,"column":24}},"1310":{"start":{"line":2497,"column":12},"end":{"line":2497,"column":24}},"1311":{"start":{"line":2498,"column":8},"end":{"line":2498,"column":44}},"1312":{"start":{"line":2499,"column":8},"end":{"line":2499,"column":20}},"1313":{"start":{"line":2500,"column":8},"end":{"line":2500,"column":42}},"1314":{"start":{"line":2500,"column":22},"end":{"line":2500,"column":42}},"1315":{"start":{"line":2501,"column":8},"end":{"line":2501,"column":20}},"1316":{"start":{"line":2510,"column":4},"end":{"line":2514,"column":6}},"1317":{"start":{"line":2511,"column":8},"end":{"line":2511,"column":33}},"1318":{"start":{"line":2512,"column":8},"end":{"line":2512,"column":24}},"1319":{"start":{"line":2513,"column":8},"end":{"line":2513,"column":20}},"1320":{"start":{"line":2524,"column":4},"end":{"line":2535,"column":6}},"1321":{"start":{"line":2525,"column":8},"end":{"line":2525,"column":70}},"1322":{"start":{"line":2526,"column":8},"end":{"line":2532,"column":9}},"1323":{"start":{"line":2527,"column":12},"end":{"line":2528,"column":79}},"1324":{"start":{"line":2528,"column":16},"end":{"line":2528,"column":79}},"1325":{"start":{"line":2529,"column":12},"end":{"line":2529,"column":26}},"1326":{"start":{"line":2530,"column":12},"end":{"line":2531,"column":100}},"1327":{"start":{"line":2531,"column":16},"end":{"line":2531,"column":100}},"1328":{"start":{"line":2533,"column":8},"end":{"line":2533,"column":35}},"1329":{"start":{"line":2534,"column":8},"end":{"line":2534,"column":20}},"1330":{"start":{"line":2542,"column":4},"end":{"line":2549,"column":6}},"1331":{"start":{"line":2543,"column":8},"end":{"line":2546,"column":9}},"1332":{"start":{"line":2544,"column":12},"end":{"line":2545,"column":71}},"1333":{"start":{"line":2545,"column":16},"end":{"line":2545,"column":71}},"1334":{"start":{"line":2547,"column":8},"end":{"line":2547,"column":43}},"1335":{"start":{"line":2548,"column":8},"end":{"line":2548,"column":20}},"1336":{"start":{"line":2557,"column":4},"end":{"line":2560,"column":6}},"1337":{"start":{"line":2558,"column":8},"end":{"line":2558,"column":88}},"1338":{"start":{"line":2559,"column":8},"end":{"line":2559,"column":20}},"1339":{"start":{"line":2568,"column":4},"end":{"line":2571,"column":6}},"1340":{"start":{"line":2569,"column":8},"end":{"line":2569,"column":82}},"1341":{"start":{"line":2570,"column":8},"end":{"line":2570,"column":20}},"1342":{"start":{"line":2586,"column":4},"end":{"line":2619,"column":6}},"1343":{"start":{"line":2587,"column":8},"end":{"line":2590,"column":9}},"1344":{"start":{"line":2588,"column":12},"end":{"line":2588,"column":30}},"1345":{"start":{"line":2589,"column":12},"end":{"line":2589,"column":33}},"1346":{"start":{"line":2591,"column":8},"end":{"line":2591,"column":53}},"1347":{"start":{"line":2592,"column":8},"end":{"line":2592,"column":43}},"1348":{"start":{"line":2592,"column":22},"end":{"line":2592,"column":43}},"1349":{"start":{"line":2593,"column":8},"end":{"line":2599,"column":9}},"1350":{"start":{"line":2594,"column":12},"end":{"line":2595,"column":79}},"1351":{"start":{"line":2595,"column":16},"end":{"line":2595,"column":79}},"1352":{"start":{"line":2596,"column":12},"end":{"line":2596,"column":26}},"1353":{"start":{"line":2597,"column":12},"end":{"line":2598,"column":100}},"1354":{"start":{"line":2598,"column":16},"end":{"line":2598,"column":100}},"1355":{"start":{"line":2600,"column":8},"end":{"line":2601,"column":55}},"1356":{"start":{"line":2601,"column":12},"end":{"line":2601,"column":55}},"1357":{"start":{"line":2602,"column":8},"end":{"line":2602,"column":47}},"1358":{"start":{"line":2603,"column":8},"end":{"line":2603,"column":34}},"1359":{"start":{"line":2603,"column":22},"end":{"line":2603,"column":34}},"1360":{"start":{"line":2604,"column":8},"end":{"line":2604,"column":32}},"1361":{"start":{"line":2605,"column":8},"end":{"line":2613,"column":9}},"1362":{"start":{"line":2606,"column":12},"end":{"line":2606,"column":63}},"1363":{"start":{"line":2607,"column":12},"end":{"line":2607,"column":70}},"1364":{"start":{"line":2608,"column":12},"end":{"line":2608,"column":33}},"1365":{"start":{"line":2609,"column":12},"end":{"line":2609,"column":32}},"1366":{"start":{"line":2610,"column":12},"end":{"line":2610,"column":66}},"1367":{"start":{"line":2610,"column":40},"end":{"line":2610,"column":66}},"1368":{"start":{"line":2611,"column":12},"end":{"line":2611,"column":31}},"1369":{"start":{"line":2612,"column":12},"end":{"line":2612,"column":27}},"1370":{"start":{"line":2613,"column":17},"end":{"line":2613,"column":92}},"1371":{"start":{"line":2615,"column":8},"end":{"line":2615,"column":37}},"1372":{"start":{"line":2616,"column":8},"end":{"line":2617,"column":31}},"1373":{"start":{"line":2617,"column":12},"end":{"line":2617,"column":31}},"1374":{"start":{"line":2618,"column":8},"end":{"line":2618,"column":20}},"1375":{"start":{"line":2632,"column":4},"end":{"line":2635,"column":6}},"1376":{"start":{"line":2633,"column":8},"end":{"line":2633,"column":37}},"1377":{"start":{"line":2634,"column":8},"end":{"line":2634,"column":20}},"1378":{"start":{"line":2641,"column":4},"end":{"line":2648,"column":6}},"1379":{"start":{"line":2642,"column":8},"end":{"line":2642,"column":71}},"1380":{"start":{"line":2642,"column":39},"end":{"line":2642,"column":71}},"1381":{"start":{"line":2643,"column":8},"end":{"line":2647,"column":10}},"1382":{"start":{"line":2656,"column":4},"end":{"line":2658,"column":6}},"1383":{"start":{"line":2657,"column":8},"end":{"line":2657,"column":40}},"1384":{"start":{"line":2667,"column":4},"end":{"line":2675,"column":6}},"1385":{"start":{"line":2668,"column":8},"end":{"line":2673,"column":9}},"1386":{"start":{"line":2669,"column":12},"end":{"line":2669,"column":44}},"1387":{"start":{"line":2670,"column":12},"end":{"line":2670,"column":35}},"1388":{"start":{"line":2672,"column":12},"end":{"line":2672,"column":28}},"1389":{"start":{"line":2674,"column":8},"end":{"line":2674,"column":20}},"1390":{"start":{"line":2685,"column":4},"end":{"line":2699,"column":6}},"1391":{"start":{"line":2686,"column":8},"end":{"line":2692,"column":9}},"1392":{"start":{"line":2687,"column":12},"end":{"line":2688,"column":83}},"1393":{"start":{"line":2688,"column":16},"end":{"line":2688,"column":83}},"1394":{"start":{"line":2689,"column":12},"end":{"line":2689,"column":26}},"1395":{"start":{"line":2690,"column":12},"end":{"line":2691,"column":69}},"1396":{"start":{"line":2691,"column":16},"end":{"line":2691,"column":69}},"1397":{"start":{"line":2693,"column":8},"end":{"line":2697,"column":9}},"1398":{"start":{"line":2694,"column":12},"end":{"line":2694,"column":46}},"1399":{"start":{"line":2695,"column":12},"end":{"line":2695,"column":37}},"1400":{"start":{"line":2696,"column":12},"end":{"line":2696,"column":33}},"1401":{"start":{"line":2698,"column":8},"end":{"line":2698,"column":20}},"1402":{"start":{"line":2707,"column":4},"end":{"line":2724,"column":6}},"1403":{"start":{"line":2708,"column":8},"end":{"line":2708,"column":62}},"1404":{"start":{"line":2708,"column":42},"end":{"line":2708,"column":62}},"1405":{"start":{"line":2709,"column":8},"end":{"line":2709,"column":57}},"1406":{"start":{"line":2709,"column":40},"end":{"line":2709,"column":57}},"1407":{"start":{"line":2710,"column":8},"end":{"line":2719,"column":9}},"1408":{"start":{"line":2711,"column":12},"end":{"line":2712,"column":65}},"1409":{"start":{"line":2712,"column":16},"end":{"line":2712,"column":65}},"1410":{"start":{"line":2713,"column":12},"end":{"line":2713,"column":25}},"1411":{"start":{"line":2714,"column":12},"end":{"line":2715,"column":63}},"1412":{"start":{"line":2715,"column":16},"end":{"line":2715,"column":63}},"1413":{"start":{"line":2716,"column":12},"end":{"line":2716,"column":23}},"1414":{"start":{"line":2717,"column":12},"end":{"line":2718,"column":100}},"1415":{"start":{"line":2718,"column":16},"end":{"line":2718,"column":100}},"1416":{"start":{"line":2720,"column":8},"end":{"line":2721,"column":24}},"1417":{"start":{"line":2721,"column":12},"end":{"line":2721,"column":24}},"1418":{"start":{"line":2722,"column":8},"end":{"line":2722,"column":68}},"1419":{"start":{"line":2723,"column":8},"end":{"line":2723,"column":20}},"1420":{"start":{"line":2731,"column":4},"end":{"line":2744,"column":6}},"1421":{"start":{"line":2732,"column":8},"end":{"line":2736,"column":9}},"1422":{"start":{"line":2733,"column":12},"end":{"line":2734,"column":79}},"1423":{"start":{"line":2734,"column":16},"end":{"line":2734,"column":79}},"1424":{"start":{"line":2735,"column":12},"end":{"line":2735,"column":24}},"1425":{"start":{"line":2737,"column":8},"end":{"line":2737,"column":42}},"1426":{"start":{"line":2738,"column":8},"end":{"line":2741,"column":9}},"1427":{"start":{"line":2739,"column":12},"end":{"line":2740,"column":109}},"1428":{"start":{"line":2740,"column":16},"end":{"line":2740,"column":109}},"1429":{"start":{"line":2742,"column":8},"end":{"line":2742,"column":29}},"1430":{"start":{"line":2743,"column":8},"end":{"line":2743,"column":20}},"1431":{"start":{"line":2753,"column":4},"end":{"line":2770,"column":6}},"1432":{"start":{"line":2754,"column":8},"end":{"line":2754,"column":62}},"1433":{"start":{"line":2754,"column":42},"end":{"line":2754,"column":62}},"1434":{"start":{"line":2755,"column":8},"end":{"line":2755,"column":57}},"1435":{"start":{"line":2755,"column":40},"end":{"line":2755,"column":57}},"1436":{"start":{"line":2756,"column":8},"end":{"line":2765,"column":9}},"1437":{"start":{"line":2757,"column":12},"end":{"line":2758,"column":65}},"1438":{"start":{"line":2758,"column":16},"end":{"line":2758,"column":65}},"1439":{"start":{"line":2759,"column":12},"end":{"line":2759,"column":25}},"1440":{"start":{"line":2760,"column":12},"end":{"line":2761,"column":63}},"1441":{"start":{"line":2761,"column":16},"end":{"line":2761,"column":63}},"1442":{"start":{"line":2762,"column":12},"end":{"line":2762,"column":23}},"1443":{"start":{"line":2763,"column":12},"end":{"line":2764,"column":100}},"1444":{"start":{"line":2764,"column":16},"end":{"line":2764,"column":100}},"1445":{"start":{"line":2766,"column":8},"end":{"line":2766,"column":30}},"1446":{"start":{"line":2767,"column":8},"end":{"line":2767,"column":26}},"1447":{"start":{"line":2768,"column":8},"end":{"line":2768,"column":23}},"1448":{"start":{"line":2769,"column":8},"end":{"line":2769,"column":18}},"1449":{"start":{"line":2779,"column":4},"end":{"line":2802,"column":6}},"1450":{"start":{"line":2780,"column":8},"end":{"line":2781,"column":31}},"1451":{"start":{"line":2782,"column":8},"end":{"line":2791,"column":9}},"1452":{"start":{"line":2783,"column":12},"end":{"line":2784,"column":66}},"1453":{"start":{"line":2784,"column":16},"end":{"line":2784,"column":66}},"1454":{"start":{"line":2785,"column":12},"end":{"line":2785,"column":26}},"1455":{"start":{"line":2786,"column":12},"end":{"line":2787,"column":65}},"1456":{"start":{"line":2787,"column":16},"end":{"line":2787,"column":65}},"1457":{"start":{"line":2788,"column":12},"end":{"line":2788,"column":25}},"1458":{"start":{"line":2789,"column":12},"end":{"line":2790,"column":103}},"1459":{"start":{"line":2790,"column":16},"end":{"line":2790,"column":103}},"1460":{"start":{"line":2792,"column":8},"end":{"line":2801,"column":9}},"1461":{"start":{"line":2793,"column":12},"end":{"line":2793,"column":52}},"1462":{"start":{"line":2794,"column":12},"end":{"line":2794,"column":55}},"1463":{"start":{"line":2795,"column":12},"end":{"line":2795,"column":26}},"1464":{"start":{"line":2797,"column":12},"end":{"line":2800,"column":56}},"1465":{"start":{"line":2798,"column":16},"end":{"line":2798,"column":35}},"1466":{"start":{"line":2800,"column":16},"end":{"line":2800,"column":56}},"1467":{"start":{"line":2809,"column":4},"end":{"line":2831,"column":6}},"1468":{"start":{"line":2810,"column":8},"end":{"line":2811,"column":31}},"1469":{"start":{"line":2812,"column":8},"end":{"line":2821,"column":9}},"1470":{"start":{"line":2813,"column":12},"end":{"line":2814,"column":66}},"1471":{"start":{"line":2814,"column":16},"end":{"line":2814,"column":66}},"1472":{"start":{"line":2815,"column":12},"end":{"line":2815,"column":26}},"1473":{"start":{"line":2816,"column":12},"end":{"line":2817,"column":65}},"1474":{"start":{"line":2817,"column":16},"end":{"line":2817,"column":65}},"1475":{"start":{"line":2818,"column":12},"end":{"line":2818,"column":25}},"1476":{"start":{"line":2819,"column":12},"end":{"line":2820,"column":103}},"1477":{"start":{"line":2820,"column":16},"end":{"line":2820,"column":103}},"1478":{"start":{"line":2822,"column":8},"end":{"line":2822,"column":49}},"1479":{"start":{"line":2823,"column":8},"end":{"line":2829,"column":9}},"1480":{"start":{"line":2824,"column":12},"end":{"line":2824,"column":54}},"1481":{"start":{"line":2826,"column":12},"end":{"line":2826,"column":41}},"1482":{"start":{"line":2827,"column":12},"end":{"line":2828,"column":47}},"1483":{"start":{"line":2828,"column":16},"end":{"line":2828,"column":47}},"1484":{"start":{"line":2830,"column":8},"end":{"line":2830,"column":18}},"1485":{"start":{"line":2844,"column":4},"end":{"line":2867,"column":6}},"1486":{"start":{"line":2845,"column":8},"end":{"line":2846,"column":143}},"1487":{"start":{"line":2846,"column":12},"end":{"line":2846,"column":143}},"1488":{"start":{"line":2847,"column":8},"end":{"line":2850,"column":24}},"1489":{"start":{"line":2848,"column":12},"end":{"line":2850,"column":24}},"1490":{"start":{"line":2851,"column":8},"end":{"line":2866,"column":9}},"1491":{"start":{"line":2853,"column":16},"end":{"line":2853,"column":47}},"1492":{"start":{"line":2855,"column":16},"end":{"line":2855,"column":49}},"1493":{"start":{"line":2857,"column":16},"end":{"line":2857,"column":46}},"1494":{"start":{"line":2859,"column":16},"end":{"line":2859,"column":49}},"1495":{"start":{"line":2861,"column":16},"end":{"line":2861,"column":38}},"1496":{"start":{"line":2863,"column":16},"end":{"line":2863,"column":40}},"1497":{"start":{"line":2865,"column":16},"end":{"line":2865,"column":63}},"1498":{"start":{"line":2879,"column":4},"end":{"line":2888,"column":6}},"1499":{"start":{"line":2880,"column":8},"end":{"line":2881,"column":32}},"1500":{"start":{"line":2881,"column":12},"end":{"line":2881,"column":32}},"1501":{"start":{"line":2882,"column":8},"end":{"line":2883,"column":29}},"1502":{"start":{"line":2883,"column":12},"end":{"line":2883,"column":29}},"1503":{"start":{"line":2884,"column":8},"end":{"line":2884,"column":26}},"1504":{"start":{"line":2884,"column":27},"end":{"line":2884,"column":41}},"1505":{"start":{"line":2885,"column":8},"end":{"line":2886,"column":43}},"1506":{"start":{"line":2886,"column":12},"end":{"line":2886,"column":43}},"1507":{"start":{"line":2887,"column":8},"end":{"line":2887,"column":58}},"1508":{"start":{"line":2898,"column":4},"end":{"line":2901,"column":6}},"1509":{"start":{"line":2899,"column":8},"end":{"line":2899,"column":72}},"1510":{"start":{"line":2900,"column":8},"end":{"line":2900,"column":18}},"1511":{"start":{"line":2910,"column":4},"end":{"line":2912,"column":6}},"1512":{"start":{"line":2911,"column":8},"end":{"line":2911,"column":53}},"1513":{"start":{"line":2921,"column":4},"end":{"line":2923,"column":6}},"1514":{"start":{"line":2922,"column":8},"end":{"line":2922,"column":53}},"1515":{"start":{"line":2935,"column":4},"end":{"line":2944,"column":6}},"1516":{"start":{"line":2936,"column":8},"end":{"line":2937,"column":32}},"1517":{"start":{"line":2937,"column":12},"end":{"line":2937,"column":32}},"1518":{"start":{"line":2938,"column":8},"end":{"line":2939,"column":29}},"1519":{"start":{"line":2939,"column":12},"end":{"line":2939,"column":29}},"1520":{"start":{"line":2940,"column":8},"end":{"line":2940,"column":19}},"1521":{"start":{"line":2940,"column":20},"end":{"line":2940,"column":29}},"1522":{"start":{"line":2941,"column":8},"end":{"line":2942,"column":43}},"1523":{"start":{"line":2942,"column":12},"end":{"line":2942,"column":43}},"1524":{"start":{"line":2943,"column":8},"end":{"line":2943,"column":58}},"1525":{"start":{"line":2954,"column":4},"end":{"line":2957,"column":6}},"1526":{"start":{"line":2955,"column":8},"end":{"line":2955,"column":72}},"1527":{"start":{"line":2956,"column":8},"end":{"line":2956,"column":18}},"1528":{"start":{"line":2978,"column":4},"end":{"line":3016,"column":6}},"1529":{"start":{"line":2979,"column":8},"end":{"line":2984,"column":21}},"1530":{"start":{"line":2985,"column":8},"end":{"line":3009,"column":9}},"1531":{"start":{"line":2986,"column":12},"end":{"line":2992,"column":13}},"1532":{"start":{"line":2987,"column":16},"end":{"line":2987,"column":35}},"1533":{"start":{"line":2988,"column":16},"end":{"line":2989,"column":57}},"1534":{"start":{"line":2988,"column":30},"end":{"line":2988,"column":70}},"1535":{"start":{"line":2989,"column":21},"end":{"line":2989,"column":57}},"1536":{"start":{"line":2990,"column":16},"end":{"line":2991,"column":76}},"1537":{"start":{"line":2991,"column":20},"end":{"line":2991,"column":76}},"1538":{"start":{"line":2993,"column":12},"end":{"line":2993,"column":16}},"1539":{"start":{"line":2994,"column":12},"end":{"line":3000,"column":13}},"1540":{"start":{"line":2995,"column":16},"end":{"line":2999,"column":17}},"1541":{"start":{"line":2996,"column":20},"end":{"line":2996,"column":59}},"1542":{"start":{"line":2996,"column":48},"end":{"line":2996,"column":59}},"1543":{"start":{"line":2997,"column":20},"end":{"line":2997,"column":40}},"1544":{"start":{"line":2998,"column":20},"end":{"line":2998,"column":35}},"1545":{"start":{"line":3001,"column":12},"end":{"line":3008,"column":100}},"1546":{"start":{"line":3002,"column":16},"end":{"line":3002,"column":59}},"1547":{"start":{"line":3003,"column":17},"end":{"line":3008,"column":100}},"1548":{"start":{"line":3004,"column":16},"end":{"line":3004,"column":59}},"1549":{"start":{"line":3005,"column":17},"end":{"line":3008,"column":100}},"1550":{"start":{"line":3006,"column":16},"end":{"line":3006,"column":59}},"1551":{"start":{"line":3008,"column":16},"end":{"line":3008,"column":100}},"1552":{"start":{"line":3010,"column":8},"end":{"line":3014,"column":9}},"1553":{"start":{"line":3011,"column":12},"end":{"line":3012,"column":27}},"1554":{"start":{"line":3012,"column":16},"end":{"line":3012,"column":27}},"1555":{"start":{"line":3013,"column":12},"end":{"line":3013,"column":36}},"1556":{"start":{"line":3015,"column":8},"end":{"line":3015,"column":35}},"1557":{"start":{"line":3029,"column":4},"end":{"line":3143,"column":6}},"1558":{"start":{"line":3030,"column":8},"end":{"line":3031,"column":69}},"1559":{"start":{"line":3032,"column":8},"end":{"line":3035,"column":25}},"1560":{"start":{"line":3036,"column":8},"end":{"line":3135,"column":9}},"1561":{"start":{"line":3037,"column":12},"end":{"line":3132,"column":13}},"1562":{"start":{"line":3039,"column":20},"end":{"line":3045,"column":21}},"1563":{"start":{"line":3040,"column":24},"end":{"line":3043,"column":25}},"1564":{"start":{"line":3041,"column":28},"end":{"line":3041,"column":40}},"1565":{"start":{"line":3042,"column":28},"end":{"line":3042,"column":34}},"1566":{"start":{"line":3044,"column":24},"end":{"line":3044,"column":44}},"1567":{"start":{"line":3046,"column":20},"end":{"line":3046,"column":63}},"1568":{"start":{"line":3047,"column":20},"end":{"line":3047,"column":31}},"1569":{"start":{"line":3048,"column":20},"end":{"line":3048,"column":26}},"1570":{"start":{"line":3050,"column":20},"end":{"line":3056,"column":21}},"1571":{"start":{"line":3051,"column":24},"end":{"line":3054,"column":25}},"1572":{"start":{"line":3052,"column":28},"end":{"line":3052,"column":40}},"1573":{"start":{"line":3053,"column":28},"end":{"line":3053,"column":34}},"1574":{"start":{"line":3055,"column":24},"end":{"line":3055,"column":39}},"1575":{"start":{"line":3057,"column":20},"end":{"line":3057,"column":45}},"1576":{"start":{"line":3058,"column":20},"end":{"line":3058,"column":31}},"1577":{"start":{"line":3059,"column":20},"end":{"line":3059,"column":26}},"1578":{"start":{"line":3061,"column":20},"end":{"line":3067,"column":21}},"1579":{"start":{"line":3062,"column":24},"end":{"line":3065,"column":25}},"1580":{"start":{"line":3063,"column":28},"end":{"line":3063,"column":40}},"1581":{"start":{"line":3064,"column":28},"end":{"line":3064,"column":34}},"1582":{"start":{"line":3066,"column":24},"end":{"line":3066,"column":39}},"1583":{"start":{"line":3068,"column":20},"end":{"line":3068,"column":52}},"1584":{"start":{"line":3069,"column":20},"end":{"line":3069,"column":31}},"1585":{"start":{"line":3070,"column":20},"end":{"line":3070,"column":26}},"1586":{"start":{"line":3072,"column":20},"end":{"line":3078,"column":21}},"1587":{"start":{"line":3073,"column":24},"end":{"line":3076,"column":25}},"1588":{"start":{"line":3074,"column":28},"end":{"line":3074,"column":40}},"1589":{"start":{"line":3075,"column":28},"end":{"line":3075,"column":34}},"1590":{"start":{"line":3077,"column":24},"end":{"line":3077,"column":34}},"1591":{"start":{"line":3079,"column":20},"end":{"line":3079,"column":34}},"1592":{"start":{"line":3080,"column":20},"end":{"line":3080,"column":31}},"1593":{"start":{"line":3081,"column":20},"end":{"line":3081,"column":26}},"1594":{"start":{"line":3083,"column":20},"end":{"line":3089,"column":21}},"1595":{"start":{"line":3084,"column":24},"end":{"line":3087,"column":25}},"1596":{"start":{"line":3085,"column":28},"end":{"line":3085,"column":40}},"1597":{"start":{"line":3086,"column":28},"end":{"line":3086,"column":34}},"1598":{"start":{"line":3088,"column":24},"end":{"line":3088,"column":39}},"1599":{"start":{"line":3090,"column":20},"end":{"line":3090,"column":51}},"1600":{"start":{"line":3091,"column":20},"end":{"line":3091,"column":31}},"1601":{"start":{"line":3092,"column":20},"end":{"line":3092,"column":26}},"1602":{"start":{"line":3094,"column":20},"end":{"line":3100,"column":21}},"1603":{"start":{"line":3095,"column":24},"end":{"line":3098,"column":25}},"1604":{"start":{"line":3096,"column":28},"end":{"line":3096,"column":40}},"1605":{"start":{"line":3097,"column":28},"end":{"line":3097,"column":34}},"1606":{"start":{"line":3099,"column":24},"end":{"line":3099,"column":34}},"1607":{"start":{"line":3101,"column":20},"end":{"line":3101,"column":33}},"1608":{"start":{"line":3102,"column":20},"end":{"line":3102,"column":31}},"1609":{"start":{"line":3103,"column":20},"end":{"line":3103,"column":26}},"1610":{"start":{"line":3105,"column":20},"end":{"line":3111,"column":21}},"1611":{"start":{"line":3106,"column":24},"end":{"line":3109,"column":25}},"1612":{"start":{"line":3107,"column":28},"end":{"line":3107,"column":40}},"1613":{"start":{"line":3108,"column":28},"end":{"line":3108,"column":34}},"1614":{"start":{"line":3110,"column":24},"end":{"line":3110,"column":34}},"1615":{"start":{"line":3112,"column":20},"end":{"line":3112,"column":40}},"1616":{"start":{"line":3113,"column":20},"end":{"line":3113,"column":31}},"1617":{"start":{"line":3114,"column":20},"end":{"line":3114,"column":26}},"1618":{"start":{"line":3116,"column":20},"end":{"line":3116,"column":31}},"1619":{"start":{"line":3117,"column":20},"end":{"line":3117,"column":26}},"1620":{"start":{"line":3119,"column":20},"end":{"line":3124,"column":21}},"1621":{"start":{"line":3120,"column":24},"end":{"line":3123,"column":25}},"1622":{"start":{"line":3121,"column":28},"end":{"line":3121,"column":40}},"1623":{"start":{"line":3122,"column":28},"end":{"line":3122,"column":34}},"1624":{"start":{"line":3125,"column":20},"end":{"line":3125,"column":57}},"1625":{"start":{"line":3126,"column":20},"end":{"line":3129,"column":21}},"1626":{"start":{"line":3127,"column":24},"end":{"line":3128,"column":87}},"1627":{"start":{"line":3128,"column":28},"end":{"line":3128,"column":87}},"1628":{"start":{"line":3130,"column":20},"end":{"line":3130,"column":39}},"1629":{"start":{"line":3131,"column":20},"end":{"line":3131,"column":30}},"1630":{"start":{"line":3133,"column":12},"end":{"line":3134,"column":69}},"1631":{"start":{"line":3134,"column":16},"end":{"line":3134,"column":69}},"1632":{"start":{"line":3136,"column":8},"end":{"line":3141,"column":9}},"1633":{"start":{"line":3137,"column":12},"end":{"line":3138,"column":72}},"1634":{"start":{"line":3138,"column":16},"end":{"line":3138,"column":72}},"1635":{"start":{"line":3139,"column":12},"end":{"line":3140,"column":99}},"1636":{"start":{"line":3140,"column":16},"end":{"line":3140,"column":99}},"1637":{"start":{"line":3142,"column":8},"end":{"line":3142,"column":18}},"1638":{"start":{"line":3154,"column":4},"end":{"line":3168,"column":6}},"1639":{"start":{"line":3155,"column":8},"end":{"line":3155,"column":67}},"1640":{"start":{"line":3156,"column":8},"end":{"line":3156,"column":60}},"1641":{"start":{"line":3157,"column":8},"end":{"line":3166,"column":9}},"1642":{"start":{"line":3158,"column":12},"end":{"line":3159,"column":65}},"1643":{"start":{"line":3159,"column":16},"end":{"line":3159,"column":65}},"1644":{"start":{"line":3160,"column":12},"end":{"line":3160,"column":25}},"1645":{"start":{"line":3161,"column":12},"end":{"line":3162,"column":63}},"1646":{"start":{"line":3162,"column":16},"end":{"line":3162,"column":63}},"1647":{"start":{"line":3163,"column":12},"end":{"line":3163,"column":23}},"1648":{"start":{"line":3164,"column":12},"end":{"line":3165,"column":100}},"1649":{"start":{"line":3165,"column":16},"end":{"line":3165,"column":100}},"1650":{"start":{"line":3167,"column":8},"end":{"line":3167,"column":55}},"1651":{"start":{"line":3180,"column":4},"end":{"line":3191,"column":6}},"1652":{"start":{"line":3181,"column":8},"end":{"line":3186,"column":9}},"1653":{"start":{"line":3182,"column":12},"end":{"line":3183,"column":61}},"1654":{"start":{"line":3183,"column":16},"end":{"line":3183,"column":61}},"1655":{"start":{"line":3184,"column":12},"end":{"line":3185,"column":75}},"1656":{"start":{"line":3185,"column":16},"end":{"line":3185,"column":75}},"1657":{"start":{"line":3187,"column":8},"end":{"line":3187,"column":55}},"1658":{"start":{"line":3188,"column":8},"end":{"line":3188,"column":43}},"1659":{"start":{"line":3189,"column":8},"end":{"line":3189,"column":36}},"1660":{"start":{"line":3190,"column":8},"end":{"line":3190,"column":18}},"1661":{"start":{"line":3200,"column":4},"end":{"line":3390,"column":8}},"1662":{"start":{"line":3208,"column":8},"end":{"line":3208,"column":22}},"1663":{"start":{"line":3215,"column":8},"end":{"line":3215,"column":38}},"1664":{"start":{"line":3223,"column":8},"end":{"line":3245,"column":10}},"1665":{"start":{"line":3224,"column":12},"end":{"line":3224,"column":26}},"1666":{"start":{"line":3225,"column":12},"end":{"line":3227,"column":50}},"1667":{"start":{"line":3226,"column":16},"end":{"line":3227,"column":50}},"1668":{"start":{"line":3227,"column":35},"end":{"line":3227,"column":47}},"1669":{"start":{"line":3228,"column":12},"end":{"line":3244,"column":13}},"1670":{"start":{"line":3229,"column":16},"end":{"line":3242,"column":40}},"1671":{"start":{"line":3230,"column":20},"end":{"line":3230,"column":33}},"1672":{"start":{"line":3231,"column":21},"end":{"line":3242,"column":40}},"1673":{"start":{"line":3232,"column":20},"end":{"line":3233,"column":40}},"1674":{"start":{"line":3234,"column":21},"end":{"line":3242,"column":40}},"1675":{"start":{"line":3235,"column":20},"end":{"line":3237,"column":40}},"1676":{"start":{"line":3239,"column":20},"end":{"line":3242,"column":40}},"1677":{"start":{"line":3243,"column":16},"end":{"line":3243,"column":26}},"1678":{"start":{"line":3256,"column":8},"end":{"line":3278,"column":10}},"1679":{"start":{"line":3257,"column":12},"end":{"line":3263,"column":14}},"1680":{"start":{"line":3258,"column":16},"end":{"line":3258,"column":48}},"1681":{"start":{"line":3259,"column":16},"end":{"line":3259,"column":46}},"1682":{"start":{"line":3260,"column":16},"end":{"line":3260,"column":44}},"1683":{"start":{"line":3261,"column":16},"end":{"line":3261,"column":33}},"1684":{"start":{"line":3262,"column":16},"end":{"line":3262,"column":26}},"1685":{"start":{"line":3264,"column":12},"end":{"line":3277,"column":13}},"1686":{"start":{"line":3265,"column":16},"end":{"line":3276,"column":67}},"1687":{"start":{"line":3266,"column":20},"end":{"line":3266,"column":27}},"1688":{"start":{"line":3267,"column":21},"end":{"line":3276,"column":67}},"1689":{"start":{"line":3268,"column":20},"end":{"line":3269,"column":50}},"1690":{"start":{"line":3270,"column":21},"end":{"line":3276,"column":67}},"1691":{"start":{"line":3271,"column":20},"end":{"line":3272,"column":67}},"1692":{"start":{"line":3273,"column":21},"end":{"line":3276,"column":67}},"1693":{"start":{"line":3274,"column":20},"end":{"line":3275,"column":84}},"1694":{"start":{"line":3276,"column":21},"end":{"line":3276,"column":67}},"1695":{"start":{"line":3287,"column":8},"end":{"line":3303,"column":10}},"1696":{"start":{"line":3288,"column":12},"end":{"line":3288,"column":30}},"1697":{"start":{"line":3289,"column":12},"end":{"line":3301,"column":13}},"1698":{"start":{"line":3290,"column":16},"end":{"line":3291,"column":26}},"1699":{"start":{"line":3291,"column":20},"end":{"line":3291,"column":26}},"1700":{"start":{"line":3292,"column":16},"end":{"line":3299,"column":17}},"1701":{"start":{"line":3293,"column":20},"end":{"line":3298,"column":21}},"1702":{"start":{"line":3294,"column":24},"end":{"line":3297,"column":25}},"1703":{"start":{"line":3295,"column":28},"end":{"line":3295,"column":69}},"1704":{"start":{"line":3296,"column":28},"end":{"line":3296,"column":38}},"1705":{"start":{"line":3296,"column":39},"end":{"line":3296,"column":48}},"1706":{"start":{"line":3300,"column":16},"end":{"line":3300,"column":24}},"1707":{"start":{"line":3302,"column":12},"end":{"line":3302,"column":37}},"1708":{"start":{"line":3302,"column":29},"end":{"line":3302,"column":37}},"1709":{"start":{"line":3312,"column":8},"end":{"line":3325,"column":10}},"1710":{"start":{"line":3313,"column":12},"end":{"line":3313,"column":26}},"1711":{"start":{"line":3314,"column":12},"end":{"line":3315,"column":60}},"1712":{"start":{"line":3315,"column":16},"end":{"line":3315,"column":60}},"1713":{"start":{"line":3315,"column":45},"end":{"line":3315,"column":57}},"1714":{"start":{"line":3316,"column":12},"end":{"line":3324,"column":13}},"1715":{"start":{"line":3317,"column":16},"end":{"line":3322,"column":43}},"1716":{"start":{"line":3318,"column":20},"end":{"line":3318,"column":28}},"1717":{"start":{"line":3320,"column":20},"end":{"line":3322,"column":43}},"1718":{"start":{"line":3323,"column":16},"end":{"line":3323,"column":26}},"1719":{"start":{"line":3333,"column":8},"end":{"line":3337,"column":10}},"1720":{"start":{"line":3334,"column":12},"end":{"line":3336,"column":15}},"1721":{"start":{"line":3335,"column":16},"end":{"line":3335,"column":41}},"1722":{"start":{"line":3347,"column":8},"end":{"line":3351,"column":10}},"1723":{"start":{"line":3348,"column":12},"end":{"line":3350,"column":15}},"1724":{"start":{"line":3349,"column":16},"end":{"line":3349,"column":42}},"1725":{"start":{"line":3358,"column":8},"end":{"line":3360,"column":10}},"1726":{"start":{"line":3359,"column":12},"end":{"line":3359,"column":79}},"1727":{"start":{"line":3368,"column":8},"end":{"line":3373,"column":10}},"1728":{"start":{"line":3369,"column":12},"end":{"line":3369,"column":24}},"1729":{"start":{"line":3370,"column":12},"end":{"line":3371,"column":81}},"1730":{"start":{"line":3371,"column":16},"end":{"line":3371,"column":81}},"1731":{"start":{"line":3372,"column":12},"end":{"line":3372,"column":21}},"1732":{"start":{"line":3381,"column":8},"end":{"line":3387,"column":10}},"1733":{"start":{"line":3382,"column":12},"end":{"line":3382,"column":25}},"1734":{"start":{"line":3383,"column":12},"end":{"line":3385,"column":15}},"1735":{"start":{"line":3384,"column":16},"end":{"line":3384,"column":20}},"1736":{"start":{"line":3384,"column":21},"end":{"line":3384,"column":86}},"1737":{"start":{"line":3386,"column":12},"end":{"line":3386,"column":25}},"1738":{"start":{"line":3389,"column":8},"end":{"line":3389,"column":20}},"1739":{"start":{"line":3401,"column":4},"end":{"line":3415,"column":6}},"1740":{"start":{"line":3402,"column":8},"end":{"line":3402,"column":62}},"1741":{"start":{"line":3402,"column":42},"end":{"line":3402,"column":62}},"1742":{"start":{"line":3403,"column":8},"end":{"line":3403,"column":57}},"1743":{"start":{"line":3403,"column":40},"end":{"line":3403,"column":57}},"1744":{"start":{"line":3404,"column":8},"end":{"line":3413,"column":9}},"1745":{"start":{"line":3405,"column":12},"end":{"line":3406,"column":65}},"1746":{"start":{"line":3406,"column":16},"end":{"line":3406,"column":65}},"1747":{"start":{"line":3407,"column":12},"end":{"line":3407,"column":25}},"1748":{"start":{"line":3408,"column":12},"end":{"line":3409,"column":63}},"1749":{"start":{"line":3409,"column":16},"end":{"line":3409,"column":63}},"1750":{"start":{"line":3410,"column":12},"end":{"line":3410,"column":23}},"1751":{"start":{"line":3411,"column":12},"end":{"line":3412,"column":100}},"1752":{"start":{"line":3412,"column":16},"end":{"line":3412,"column":100}},"1753":{"start":{"line":3414,"column":8},"end":{"line":3414,"column":56}},"1754":{"start":{"line":3427,"column":4},"end":{"line":3435,"column":6}},"1755":{"start":{"line":3428,"column":8},"end":{"line":3430,"column":61}},"1756":{"start":{"line":3429,"column":12},"end":{"line":3430,"column":61}},"1757":{"start":{"line":3430,"column":16},"end":{"line":3430,"column":61}},"1758":{"start":{"line":3431,"column":8},"end":{"line":3431,"column":59}},"1759":{"start":{"line":3432,"column":8},"end":{"line":3432,"column":44}},"1760":{"start":{"line":3433,"column":8},"end":{"line":3433,"column":36}},"1761":{"start":{"line":3434,"column":8},"end":{"line":3434,"column":18}},"1762":{"start":{"line":3450,"column":4},"end":{"line":3450,"column":31}},"1763":{"start":{"line":3452,"column":4},"end":{"line":3452,"column":22}}},"branchMap":{"1":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":8}},{"start":{"line":44,"column":8},"end":{"line":44,"column":8}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":8}},{"start":{"line":48,"column":8},"end":{"line":48,"column":8}}]},"4":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":12}},{"start":{"line":52,"column":12},"end":{"line":52,"column":12}}]},"6":{"line":63,"type":"cond-expr","locations":[{"start":{"line":63,"column":39},"end":{"line":63,"column":51}},{"start":{"line":63,"column":54},"end":{"line":63,"column":74}}]},"7":{"line":207,"type":"cond-expr","locations":[{"start":{"line":207,"column":34},"end":{"line":207,"column":51}},{"start":{"line":207,"column":54},"end":{"line":207,"column":58}}]},"8":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":12},"end":{"line":219,"column":12}},{"start":{"line":219,"column":12},"end":{"line":219,"column":12}}]},"9":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":12},"end":{"line":221,"column":12}},{"start":{"line":221,"column":12},"end":{"line":221,"column":12}}]},"10":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":8},"end":{"line":263,"column":8}},{"start":{"line":263,"column":8},"end":{"line":263,"column":8}}]},"11":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":12},"end":{"line":263,"column":41}},{"start":{"line":263,"column":45},"end":{"line":263,"column":73}}]},"12":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":12},"end":{"line":270,"column":12}},{"start":{"line":270,"column":12},"end":{"line":270,"column":12}}]},"13":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":12},"end":{"line":273,"column":12}},{"start":{"line":273,"column":12},"end":{"line":273,"column":12}}]},"14":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":8},"end":{"line":275,"column":8}},{"start":{"line":275,"column":8},"end":{"line":275,"column":8}}]},"15":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":12},"end":{"line":282,"column":12}},{"start":{"line":282,"column":12},"end":{"line":282,"column":12}}]},"16":{"line":298,"type":"binary-expr","locations":[{"start":{"line":298,"column":16},"end":{"line":298,"column":18}},{"start":{"line":298,"column":22},"end":{"line":298,"column":44}}]},"17":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":8},"end":{"line":322,"column":8}},{"start":{"line":322,"column":8},"end":{"line":322,"column":8}}]},"18":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":8},"end":{"line":327,"column":8}},{"start":{"line":327,"column":8},"end":{"line":327,"column":8}}]},"19":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":12},"end":{"line":328,"column":12}},{"start":{"line":328,"column":12},"end":{"line":328,"column":12}}]},"20":{"line":330,"type":"switch","locations":[{"start":{"line":331,"column":16},"end":{"line":332,"column":71}},{"start":{"line":333,"column":16},"end":{"line":334,"column":68}},{"start":{"line":335,"column":16},"end":{"line":336,"column":71}},{"start":{"line":337,"column":16},"end":{"line":338,"column":69}},{"start":{"line":339,"column":16},"end":{"line":340,"column":70}},{"start":{"line":341,"column":16},"end":{"line":342,"column":67}}]},"21":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":8},"end":{"line":345,"column":8}},{"start":{"line":345,"column":8},"end":{"line":345,"column":8}}]},"22":{"line":345,"type":"binary-expr","locations":[{"start":{"line":345,"column":12},"end":{"line":345,"column":27}},{"start":{"line":345,"column":31},"end":{"line":345,"column":57}}]},"23":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":8},"end":{"line":348,"column":8}},{"start":{"line":348,"column":8},"end":{"line":348,"column":8}}]},"24":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":8},"end":{"line":356,"column":8}},{"start":{"line":356,"column":8},"end":{"line":356,"column":8}}]},"25":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":12},"end":{"line":358,"column":12}},{"start":{"line":358,"column":12},"end":{"line":358,"column":12}}]},"26":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":15},"end":{"line":365,"column":15}},{"start":{"line":365,"column":15},"end":{"line":365,"column":15}}]},"27":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":12},"end":{"line":367,"column":12}},{"start":{"line":367,"column":12},"end":{"line":367,"column":12}}]},"28":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":15},"end":{"line":376,"column":15}},{"start":{"line":376,"column":15},"end":{"line":376,"column":15}}]},"29":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":12},"end":{"line":377,"column":12}},{"start":{"line":377,"column":12},"end":{"line":377,"column":12}}]},"30":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":8},"end":{"line":382,"column":8}},{"start":{"line":382,"column":8},"end":{"line":382,"column":8}}]},"31":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":6},"end":{"line":398,"column":6}},{"start":{"line":398,"column":6},"end":{"line":398,"column":6}}]},"32":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":6},"end":{"line":399,"column":6}},{"start":{"line":399,"column":6},"end":{"line":399,"column":6}}]},"33":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":8},"end":{"line":400,"column":8}},{"start":{"line":400,"column":8},"end":{"line":400,"column":8}}]},"34":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":8},"end":{"line":402,"column":8}},{"start":{"line":402,"column":8},"end":{"line":402,"column":8}}]},"35":{"line":402,"type":"binary-expr","locations":[{"start":{"line":402,"column":12},"end":{"line":402,"column":38}},{"start":{"line":402,"column":42},"end":{"line":402,"column":58}}]},"36":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":8},"end":{"line":405,"column":8}},{"start":{"line":405,"column":8},"end":{"line":405,"column":8}}]},"37":{"line":405,"type":"binary-expr","locations":[{"start":{"line":405,"column":12},"end":{"line":405,"column":22}},{"start":{"line":405,"column":26},"end":{"line":405,"column":57}}]},"38":{"line":429,"type":"if","locations":[{"start":{"line":429,"column":6},"end":{"line":429,"column":6}},{"start":{"line":429,"column":6},"end":{"line":429,"column":6}}]},"39":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":6},"end":{"line":435,"column":6}},{"start":{"line":435,"column":6},"end":{"line":435,"column":6}}]},"40":{"line":450,"type":"if","locations":[{"start":{"line":450,"column":6},"end":{"line":450,"column":6}},{"start":{"line":450,"column":6},"end":{"line":450,"column":6}}]},"41":{"line":473,"type":"if","locations":[{"start":{"line":473,"column":6},"end":{"line":473,"column":6}},{"start":{"line":473,"column":6},"end":{"line":473,"column":6}}]},"42":{"line":479,"type":"if","locations":[{"start":{"line":479,"column":6},"end":{"line":479,"column":6}},{"start":{"line":479,"column":6},"end":{"line":479,"column":6}}]},"43":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":8},"end":{"line":493,"column":8}},{"start":{"line":493,"column":8},"end":{"line":493,"column":8}}]},"44":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":8},"end":{"line":494,"column":8}},{"start":{"line":494,"column":8},"end":{"line":494,"column":8}}]},"45":{"line":495,"type":"if","locations":[{"start":{"line":495,"column":12},"end":{"line":495,"column":12}},{"start":{"line":495,"column":12},"end":{"line":495,"column":12}}]},"46":{"line":495,"type":"binary-expr","locations":[{"start":{"line":495,"column":16},"end":{"line":495,"column":42}},{"start":{"line":495,"column":46},"end":{"line":495,"column":62}}]},"47":{"line":498,"type":"if","locations":[{"start":{"line":498,"column":12},"end":{"line":498,"column":12}},{"start":{"line":498,"column":12},"end":{"line":498,"column":12}}]},"48":{"line":498,"type":"binary-expr","locations":[{"start":{"line":498,"column":16},"end":{"line":498,"column":26}},{"start":{"line":498,"column":30},"end":{"line":498,"column":66}}]},"49":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":8},"end":{"line":502,"column":8}},{"start":{"line":502,"column":8},"end":{"line":502,"column":8}}]},"50":{"line":530,"type":"if","locations":[{"start":{"line":530,"column":8},"end":{"line":530,"column":8}},{"start":{"line":530,"column":8},"end":{"line":530,"column":8}}]},"51":{"line":531,"type":"if","locations":[{"start":{"line":531,"column":8},"end":{"line":531,"column":8}},{"start":{"line":531,"column":8},"end":{"line":531,"column":8}}]},"52":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":12},"end":{"line":532,"column":12}},{"start":{"line":532,"column":12},"end":{"line":532,"column":12}}]},"53":{"line":532,"type":"binary-expr","locations":[{"start":{"line":532,"column":16},"end":{"line":532,"column":41}},{"start":{"line":532,"column":45},"end":{"line":532,"column":60}}]},"54":{"line":535,"type":"if","locations":[{"start":{"line":535,"column":12},"end":{"line":535,"column":12}},{"start":{"line":535,"column":12},"end":{"line":535,"column":12}}]},"55":{"line":535,"type":"binary-expr","locations":[{"start":{"line":535,"column":16},"end":{"line":535,"column":42}},{"start":{"line":535,"column":46},"end":{"line":535,"column":62}}]},"56":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":12},"end":{"line":538,"column":12}},{"start":{"line":538,"column":12},"end":{"line":538,"column":12}}]},"57":{"line":538,"type":"binary-expr","locations":[{"start":{"line":538,"column":16},"end":{"line":538,"column":26}},{"start":{"line":538,"column":30},"end":{"line":538,"column":61}}]},"58":{"line":543,"type":"if","locations":[{"start":{"line":543,"column":8},"end":{"line":543,"column":8}},{"start":{"line":543,"column":8},"end":{"line":543,"column":8}}]},"59":{"line":544,"type":"cond-expr","locations":[{"start":{"line":544,"column":52},"end":{"line":544,"column":61}},{"start":{"line":544,"column":64},"end":{"line":544,"column":70}}]},"60":{"line":547,"type":"if","locations":[{"start":{"line":547,"column":8},"end":{"line":547,"column":8}},{"start":{"line":547,"column":8},"end":{"line":547,"column":8}}]},"61":{"line":569,"type":"if","locations":[{"start":{"line":569,"column":8},"end":{"line":569,"column":8}},{"start":{"line":569,"column":8},"end":{"line":569,"column":8}}]},"62":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":8},"end":{"line":570,"column":8}},{"start":{"line":570,"column":8},"end":{"line":570,"column":8}}]},"63":{"line":571,"type":"if","locations":[{"start":{"line":571,"column":12},"end":{"line":571,"column":12}},{"start":{"line":571,"column":12},"end":{"line":571,"column":12}}]},"64":{"line":571,"type":"binary-expr","locations":[{"start":{"line":571,"column":16},"end":{"line":571,"column":42}},{"start":{"line":571,"column":46},"end":{"line":571,"column":62}}]},"65":{"line":574,"type":"if","locations":[{"start":{"line":574,"column":12},"end":{"line":574,"column":12}},{"start":{"line":574,"column":12},"end":{"line":574,"column":12}}]},"66":{"line":574,"type":"binary-expr","locations":[{"start":{"line":574,"column":16},"end":{"line":574,"column":26}},{"start":{"line":574,"column":30},"end":{"line":574,"column":61}}]},"67":{"line":578,"type":"if","locations":[{"start":{"line":578,"column":8},"end":{"line":578,"column":8}},{"start":{"line":578,"column":8},"end":{"line":578,"column":8}}]},"68":{"line":579,"type":"if","locations":[{"start":{"line":579,"column":8},"end":{"line":579,"column":8}},{"start":{"line":579,"column":8},"end":{"line":579,"column":8}}]},"69":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":8},"end":{"line":601,"column":8}},{"start":{"line":601,"column":8},"end":{"line":601,"column":8}}]},"70":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":8},"end":{"line":602,"column":8}},{"start":{"line":602,"column":8},"end":{"line":602,"column":8}}]},"71":{"line":603,"type":"if","locations":[{"start":{"line":603,"column":12},"end":{"line":603,"column":12}},{"start":{"line":603,"column":12},"end":{"line":603,"column":12}}]},"72":{"line":603,"type":"binary-expr","locations":[{"start":{"line":603,"column":16},"end":{"line":603,"column":41}},{"start":{"line":603,"column":45},"end":{"line":603,"column":60}}]},"73":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":12},"end":{"line":606,"column":12}},{"start":{"line":606,"column":12},"end":{"line":606,"column":12}}]},"74":{"line":606,"type":"binary-expr","locations":[{"start":{"line":606,"column":16},"end":{"line":606,"column":42}},{"start":{"line":606,"column":46},"end":{"line":606,"column":62}}]},"75":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":12},"end":{"line":609,"column":12}},{"start":{"line":609,"column":12},"end":{"line":609,"column":12}}]},"76":{"line":609,"type":"binary-expr","locations":[{"start":{"line":609,"column":16},"end":{"line":609,"column":26}},{"start":{"line":609,"column":30},"end":{"line":609,"column":61}}]},"77":{"line":614,"type":"if","locations":[{"start":{"line":614,"column":8},"end":{"line":614,"column":8}},{"start":{"line":614,"column":8},"end":{"line":614,"column":8}}]},"78":{"line":615,"type":"cond-expr","locations":[{"start":{"line":615,"column":52},"end":{"line":615,"column":61}},{"start":{"line":615,"column":64},"end":{"line":615,"column":70}}]},"79":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":8},"end":{"line":618,"column":8}},{"start":{"line":618,"column":8},"end":{"line":618,"column":8}}]},"80":{"line":640,"type":"if","locations":[{"start":{"line":640,"column":8},"end":{"line":640,"column":8}},{"start":{"line":640,"column":8},"end":{"line":640,"column":8}}]},"81":{"line":641,"type":"if","locations":[{"start":{"line":641,"column":8},"end":{"line":641,"column":8}},{"start":{"line":641,"column":8},"end":{"line":641,"column":8}}]},"82":{"line":642,"type":"if","locations":[{"start":{"line":642,"column":12},"end":{"line":642,"column":12}},{"start":{"line":642,"column":12},"end":{"line":642,"column":12}}]},"83":{"line":642,"type":"binary-expr","locations":[{"start":{"line":642,"column":16},"end":{"line":642,"column":42}},{"start":{"line":642,"column":46},"end":{"line":642,"column":62}}]},"84":{"line":645,"type":"if","locations":[{"start":{"line":645,"column":12},"end":{"line":645,"column":12}},{"start":{"line":645,"column":12},"end":{"line":645,"column":12}}]},"85":{"line":645,"type":"binary-expr","locations":[{"start":{"line":645,"column":16},"end":{"line":645,"column":26}},{"start":{"line":645,"column":30},"end":{"line":645,"column":61}}]},"86":{"line":649,"type":"if","locations":[{"start":{"line":649,"column":8},"end":{"line":649,"column":8}},{"start":{"line":649,"column":8},"end":{"line":649,"column":8}}]},"87":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":8},"end":{"line":674,"column":8}},{"start":{"line":674,"column":8},"end":{"line":674,"column":8}}]},"88":{"line":675,"type":"if","locations":[{"start":{"line":675,"column":8},"end":{"line":675,"column":8}},{"start":{"line":675,"column":8},"end":{"line":675,"column":8}}]},"89":{"line":676,"type":"if","locations":[{"start":{"line":676,"column":12},"end":{"line":676,"column":12}},{"start":{"line":676,"column":12},"end":{"line":676,"column":12}}]},"90":{"line":676,"type":"binary-expr","locations":[{"start":{"line":676,"column":16},"end":{"line":676,"column":41}},{"start":{"line":676,"column":45},"end":{"line":676,"column":60}}]},"91":{"line":679,"type":"if","locations":[{"start":{"line":679,"column":12},"end":{"line":679,"column":12}},{"start":{"line":679,"column":12},"end":{"line":679,"column":12}}]},"92":{"line":679,"type":"binary-expr","locations":[{"start":{"line":679,"column":16},"end":{"line":679,"column":42}},{"start":{"line":679,"column":46},"end":{"line":679,"column":62}}]},"93":{"line":682,"type":"if","locations":[{"start":{"line":682,"column":12},"end":{"line":682,"column":12}},{"start":{"line":682,"column":12},"end":{"line":682,"column":12}}]},"94":{"line":682,"type":"binary-expr","locations":[{"start":{"line":682,"column":16},"end":{"line":682,"column":26}},{"start":{"line":682,"column":30},"end":{"line":682,"column":61}}]},"95":{"line":687,"type":"if","locations":[{"start":{"line":687,"column":8},"end":{"line":687,"column":8}},{"start":{"line":687,"column":8},"end":{"line":687,"column":8}}]},"96":{"line":688,"type":"cond-expr","locations":[{"start":{"line":688,"column":52},"end":{"line":688,"column":61}},{"start":{"line":688,"column":64},"end":{"line":688,"column":70}}]},"97":{"line":690,"type":"if","locations":[{"start":{"line":690,"column":8},"end":{"line":690,"column":8}},{"start":{"line":690,"column":8},"end":{"line":690,"column":8}}]},"98":{"line":697,"type":"if","locations":[{"start":{"line":697,"column":8},"end":{"line":697,"column":8}},{"start":{"line":697,"column":8},"end":{"line":697,"column":8}}]},"99":{"line":722,"type":"if","locations":[{"start":{"line":722,"column":8},"end":{"line":722,"column":8}},{"start":{"line":722,"column":8},"end":{"line":722,"column":8}}]},"100":{"line":723,"type":"if","locations":[{"start":{"line":723,"column":8},"end":{"line":723,"column":8}},{"start":{"line":723,"column":8},"end":{"line":723,"column":8}}]},"101":{"line":724,"type":"if","locations":[{"start":{"line":724,"column":12},"end":{"line":724,"column":12}},{"start":{"line":724,"column":12},"end":{"line":724,"column":12}}]},"102":{"line":724,"type":"binary-expr","locations":[{"start":{"line":724,"column":16},"end":{"line":724,"column":42}},{"start":{"line":724,"column":46},"end":{"line":724,"column":62}}]},"103":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":12},"end":{"line":727,"column":12}},{"start":{"line":727,"column":12},"end":{"line":727,"column":12}}]},"104":{"line":727,"type":"binary-expr","locations":[{"start":{"line":727,"column":16},"end":{"line":727,"column":26}},{"start":{"line":727,"column":30},"end":{"line":727,"column":61}}]},"105":{"line":731,"type":"if","locations":[{"start":{"line":731,"column":8},"end":{"line":731,"column":8}},{"start":{"line":731,"column":8},"end":{"line":731,"column":8}}]},"106":{"line":738,"type":"if","locations":[{"start":{"line":738,"column":8},"end":{"line":738,"column":8}},{"start":{"line":738,"column":8},"end":{"line":738,"column":8}}]},"107":{"line":739,"type":"if","locations":[{"start":{"line":739,"column":8},"end":{"line":739,"column":8}},{"start":{"line":739,"column":8},"end":{"line":739,"column":8}}]},"108":{"line":764,"type":"if","locations":[{"start":{"line":764,"column":8},"end":{"line":764,"column":8}},{"start":{"line":764,"column":8},"end":{"line":764,"column":8}}]},"109":{"line":765,"type":"if","locations":[{"start":{"line":765,"column":8},"end":{"line":765,"column":8}},{"start":{"line":765,"column":8},"end":{"line":765,"column":8}}]},"110":{"line":766,"type":"if","locations":[{"start":{"line":766,"column":12},"end":{"line":766,"column":12}},{"start":{"line":766,"column":12},"end":{"line":766,"column":12}}]},"111":{"line":766,"type":"binary-expr","locations":[{"start":{"line":766,"column":16},"end":{"line":766,"column":41}},{"start":{"line":766,"column":45},"end":{"line":766,"column":60}}]},"112":{"line":769,"type":"if","locations":[{"start":{"line":769,"column":12},"end":{"line":769,"column":12}},{"start":{"line":769,"column":12},"end":{"line":769,"column":12}}]},"113":{"line":769,"type":"binary-expr","locations":[{"start":{"line":769,"column":16},"end":{"line":769,"column":42}},{"start":{"line":769,"column":46},"end":{"line":769,"column":62}}]},"114":{"line":772,"type":"if","locations":[{"start":{"line":772,"column":12},"end":{"line":772,"column":12}},{"start":{"line":772,"column":12},"end":{"line":772,"column":12}}]},"115":{"line":772,"type":"binary-expr","locations":[{"start":{"line":772,"column":16},"end":{"line":772,"column":26}},{"start":{"line":772,"column":30},"end":{"line":772,"column":61}}]},"116":{"line":777,"type":"if","locations":[{"start":{"line":777,"column":8},"end":{"line":777,"column":8}},{"start":{"line":777,"column":8},"end":{"line":777,"column":8}}]},"117":{"line":778,"type":"cond-expr","locations":[{"start":{"line":778,"column":52},"end":{"line":778,"column":61}},{"start":{"line":778,"column":64},"end":{"line":778,"column":70}}]},"118":{"line":780,"type":"if","locations":[{"start":{"line":780,"column":8},"end":{"line":780,"column":8}},{"start":{"line":780,"column":8},"end":{"line":780,"column":8}}]},"119":{"line":787,"type":"if","locations":[{"start":{"line":787,"column":8},"end":{"line":787,"column":8}},{"start":{"line":787,"column":8},"end":{"line":787,"column":8}}]},"120":{"line":812,"type":"if","locations":[{"start":{"line":812,"column":8},"end":{"line":812,"column":8}},{"start":{"line":812,"column":8},"end":{"line":812,"column":8}}]},"121":{"line":813,"type":"if","locations":[{"start":{"line":813,"column":8},"end":{"line":813,"column":8}},{"start":{"line":813,"column":8},"end":{"line":813,"column":8}}]},"122":{"line":814,"type":"if","locations":[{"start":{"line":814,"column":12},"end":{"line":814,"column":12}},{"start":{"line":814,"column":12},"end":{"line":814,"column":12}}]},"123":{"line":814,"type":"binary-expr","locations":[{"start":{"line":814,"column":16},"end":{"line":814,"column":42}},{"start":{"line":814,"column":46},"end":{"line":814,"column":62}}]},"124":{"line":817,"type":"if","locations":[{"start":{"line":817,"column":12},"end":{"line":817,"column":12}},{"start":{"line":817,"column":12},"end":{"line":817,"column":12}}]},"125":{"line":817,"type":"binary-expr","locations":[{"start":{"line":817,"column":16},"end":{"line":817,"column":26}},{"start":{"line":817,"column":30},"end":{"line":817,"column":61}}]},"126":{"line":821,"type":"if","locations":[{"start":{"line":821,"column":8},"end":{"line":821,"column":8}},{"start":{"line":821,"column":8},"end":{"line":821,"column":8}}]},"127":{"line":828,"type":"if","locations":[{"start":{"line":828,"column":8},"end":{"line":828,"column":8}},{"start":{"line":828,"column":8},"end":{"line":828,"column":8}}]},"128":{"line":853,"type":"if","locations":[{"start":{"line":853,"column":8},"end":{"line":853,"column":8}},{"start":{"line":853,"column":8},"end":{"line":853,"column":8}}]},"129":{"line":854,"type":"if","locations":[{"start":{"line":854,"column":8},"end":{"line":854,"column":8}},{"start":{"line":854,"column":8},"end":{"line":854,"column":8}}]},"130":{"line":855,"type":"if","locations":[{"start":{"line":855,"column":12},"end":{"line":855,"column":12}},{"start":{"line":855,"column":12},"end":{"line":855,"column":12}}]},"131":{"line":855,"type":"binary-expr","locations":[{"start":{"line":855,"column":16},"end":{"line":855,"column":41}},{"start":{"line":855,"column":45},"end":{"line":855,"column":60}}]},"132":{"line":858,"type":"if","locations":[{"start":{"line":858,"column":12},"end":{"line":858,"column":12}},{"start":{"line":858,"column":12},"end":{"line":858,"column":12}}]},"133":{"line":858,"type":"binary-expr","locations":[{"start":{"line":858,"column":16},"end":{"line":858,"column":42}},{"start":{"line":858,"column":46},"end":{"line":858,"column":62}}]},"134":{"line":861,"type":"if","locations":[{"start":{"line":861,"column":12},"end":{"line":861,"column":12}},{"start":{"line":861,"column":12},"end":{"line":861,"column":12}}]},"135":{"line":861,"type":"binary-expr","locations":[{"start":{"line":861,"column":16},"end":{"line":861,"column":26}},{"start":{"line":861,"column":30},"end":{"line":861,"column":61}}]},"136":{"line":866,"type":"if","locations":[{"start":{"line":866,"column":8},"end":{"line":866,"column":8}},{"start":{"line":866,"column":8},"end":{"line":866,"column":8}}]},"137":{"line":867,"type":"cond-expr","locations":[{"start":{"line":867,"column":52},"end":{"line":867,"column":61}},{"start":{"line":867,"column":64},"end":{"line":867,"column":70}}]},"138":{"line":869,"type":"if","locations":[{"start":{"line":869,"column":8},"end":{"line":869,"column":8}},{"start":{"line":869,"column":8},"end":{"line":869,"column":8}}]},"139":{"line":880,"type":"if","locations":[{"start":{"line":880,"column":8},"end":{"line":880,"column":8}},{"start":{"line":880,"column":8},"end":{"line":880,"column":8}}]},"140":{"line":900,"type":"if","locations":[{"start":{"line":900,"column":8},"end":{"line":900,"column":8}},{"start":{"line":900,"column":8},"end":{"line":900,"column":8}}]},"141":{"line":901,"type":"if","locations":[{"start":{"line":901,"column":8},"end":{"line":901,"column":8}},{"start":{"line":901,"column":8},"end":{"line":901,"column":8}}]},"142":{"line":902,"type":"if","locations":[{"start":{"line":902,"column":12},"end":{"line":902,"column":12}},{"start":{"line":902,"column":12},"end":{"line":902,"column":12}}]},"143":{"line":902,"type":"binary-expr","locations":[{"start":{"line":902,"column":16},"end":{"line":902,"column":42}},{"start":{"line":902,"column":46},"end":{"line":902,"column":62}}]},"144":{"line":905,"type":"if","locations":[{"start":{"line":905,"column":12},"end":{"line":905,"column":12}},{"start":{"line":905,"column":12},"end":{"line":905,"column":12}}]},"145":{"line":905,"type":"binary-expr","locations":[{"start":{"line":905,"column":16},"end":{"line":905,"column":26}},{"start":{"line":905,"column":30},"end":{"line":905,"column":61}}]},"146":{"line":909,"type":"if","locations":[{"start":{"line":909,"column":8},"end":{"line":909,"column":8}},{"start":{"line":909,"column":8},"end":{"line":909,"column":8}}]},"147":{"line":921,"type":"if","locations":[{"start":{"line":921,"column":8},"end":{"line":921,"column":8}},{"start":{"line":921,"column":8},"end":{"line":921,"column":8}}]},"148":{"line":941,"type":"if","locations":[{"start":{"line":941,"column":8},"end":{"line":941,"column":8}},{"start":{"line":941,"column":8},"end":{"line":941,"column":8}}]},"149":{"line":942,"type":"if","locations":[{"start":{"line":942,"column":8},"end":{"line":942,"column":8}},{"start":{"line":942,"column":8},"end":{"line":942,"column":8}}]},"150":{"line":943,"type":"if","locations":[{"start":{"line":943,"column":12},"end":{"line":943,"column":12}},{"start":{"line":943,"column":12},"end":{"line":943,"column":12}}]},"151":{"line":943,"type":"binary-expr","locations":[{"start":{"line":943,"column":16},"end":{"line":943,"column":41}},{"start":{"line":943,"column":45},"end":{"line":943,"column":60}}]},"152":{"line":946,"type":"if","locations":[{"start":{"line":946,"column":12},"end":{"line":946,"column":12}},{"start":{"line":946,"column":12},"end":{"line":946,"column":12}}]},"153":{"line":946,"type":"binary-expr","locations":[{"start":{"line":946,"column":16},"end":{"line":946,"column":42}},{"start":{"line":946,"column":46},"end":{"line":946,"column":62}}]},"154":{"line":949,"type":"if","locations":[{"start":{"line":949,"column":12},"end":{"line":949,"column":12}},{"start":{"line":949,"column":12},"end":{"line":949,"column":12}}]},"155":{"line":949,"type":"binary-expr","locations":[{"start":{"line":949,"column":16},"end":{"line":949,"column":26}},{"start":{"line":949,"column":30},"end":{"line":949,"column":61}}]},"156":{"line":954,"type":"if","locations":[{"start":{"line":954,"column":8},"end":{"line":954,"column":8}},{"start":{"line":954,"column":8},"end":{"line":954,"column":8}}]},"157":{"line":955,"type":"cond-expr","locations":[{"start":{"line":955,"column":52},"end":{"line":955,"column":61}},{"start":{"line":955,"column":64},"end":{"line":955,"column":70}}]},"158":{"line":957,"type":"if","locations":[{"start":{"line":957,"column":8},"end":{"line":957,"column":8}},{"start":{"line":957,"column":8},"end":{"line":957,"column":8}}]},"159":{"line":968,"type":"if","locations":[{"start":{"line":968,"column":8},"end":{"line":968,"column":8}},{"start":{"line":968,"column":8},"end":{"line":968,"column":8}}]},"160":{"line":989,"type":"if","locations":[{"start":{"line":989,"column":8},"end":{"line":989,"column":8}},{"start":{"line":989,"column":8},"end":{"line":989,"column":8}}]},"161":{"line":990,"type":"if","locations":[{"start":{"line":990,"column":8},"end":{"line":990,"column":8}},{"start":{"line":990,"column":8},"end":{"line":990,"column":8}}]},"162":{"line":991,"type":"if","locations":[{"start":{"line":991,"column":12},"end":{"line":991,"column":12}},{"start":{"line":991,"column":12},"end":{"line":991,"column":12}}]},"163":{"line":991,"type":"binary-expr","locations":[{"start":{"line":991,"column":16},"end":{"line":991,"column":42}},{"start":{"line":991,"column":46},"end":{"line":991,"column":62}}]},"164":{"line":994,"type":"if","locations":[{"start":{"line":994,"column":12},"end":{"line":994,"column":12}},{"start":{"line":994,"column":12},"end":{"line":994,"column":12}}]},"165":{"line":994,"type":"binary-expr","locations":[{"start":{"line":994,"column":16},"end":{"line":994,"column":26}},{"start":{"line":994,"column":30},"end":{"line":994,"column":61}}]},"166":{"line":998,"type":"if","locations":[{"start":{"line":998,"column":8},"end":{"line":998,"column":8}},{"start":{"line":998,"column":8},"end":{"line":998,"column":8}}]},"167":{"line":1009,"type":"if","locations":[{"start":{"line":1009,"column":8},"end":{"line":1009,"column":8}},{"start":{"line":1009,"column":8},"end":{"line":1009,"column":8}}]},"168":{"line":1024,"type":"if","locations":[{"start":{"line":1024,"column":4},"end":{"line":1024,"column":4}},{"start":{"line":1024,"column":4},"end":{"line":1024,"column":4}}]},"169":{"line":1035,"type":"if","locations":[{"start":{"line":1035,"column":12},"end":{"line":1035,"column":12}},{"start":{"line":1035,"column":12},"end":{"line":1035,"column":12}}]},"170":{"line":1036,"type":"if","locations":[{"start":{"line":1036,"column":12},"end":{"line":1036,"column":12}},{"start":{"line":1036,"column":12},"end":{"line":1036,"column":12}}]},"171":{"line":1037,"type":"if","locations":[{"start":{"line":1037,"column":16},"end":{"line":1037,"column":16}},{"start":{"line":1037,"column":16},"end":{"line":1037,"column":16}}]},"172":{"line":1039,"type":"if","locations":[{"start":{"line":1039,"column":21},"end":{"line":1039,"column":21}},{"start":{"line":1039,"column":21},"end":{"line":1039,"column":21}}]},"173":{"line":1041,"type":"if","locations":[{"start":{"line":1041,"column":21},"end":{"line":1041,"column":21}},{"start":{"line":1041,"column":21},"end":{"line":1041,"column":21}}]},"174":{"line":1041,"type":"binary-expr","locations":[{"start":{"line":1041,"column":27},"end":{"line":1041,"column":32}},{"start":{"line":1041,"column":36},"end":{"line":1041,"column":57}}]},"175":{"line":1043,"type":"if","locations":[{"start":{"line":1043,"column":16},"end":{"line":1043,"column":16}},{"start":{"line":1043,"column":16},"end":{"line":1043,"column":16}}]},"176":{"line":1043,"type":"binary-expr","locations":[{"start":{"line":1043,"column":20},"end":{"line":1043,"column":46}},{"start":{"line":1043,"column":50},"end":{"line":1043,"column":66}}]},"177":{"line":1046,"type":"if","locations":[{"start":{"line":1046,"column":16},"end":{"line":1046,"column":16}},{"start":{"line":1046,"column":16},"end":{"line":1046,"column":16}}]},"178":{"line":1046,"type":"binary-expr","locations":[{"start":{"line":1046,"column":20},"end":{"line":1046,"column":30}},{"start":{"line":1046,"column":34},"end":{"line":1046,"column":65}}]},"179":{"line":1049,"type":"if","locations":[{"start":{"line":1049,"column":12},"end":{"line":1049,"column":12}},{"start":{"line":1049,"column":12},"end":{"line":1049,"column":12}}]},"180":{"line":1051,"type":"if","locations":[{"start":{"line":1051,"column":17},"end":{"line":1051,"column":17}},{"start":{"line":1051,"column":17},"end":{"line":1051,"column":17}}]},"181":{"line":1055,"type":"if","locations":[{"start":{"line":1055,"column":12},"end":{"line":1055,"column":12}},{"start":{"line":1055,"column":12},"end":{"line":1055,"column":12}}]},"182":{"line":1056,"type":"cond-expr","locations":[{"start":{"line":1056,"column":56},"end":{"line":1056,"column":65}},{"start":{"line":1056,"column":68},"end":{"line":1056,"column":74}}]},"183":{"line":1060,"type":"if","locations":[{"start":{"line":1060,"column":12},"end":{"line":1060,"column":12}},{"start":{"line":1060,"column":12},"end":{"line":1060,"column":12}}]},"184":{"line":1081,"type":"if","locations":[{"start":{"line":1081,"column":12},"end":{"line":1081,"column":12}},{"start":{"line":1081,"column":12},"end":{"line":1081,"column":12}}]},"185":{"line":1102,"type":"if","locations":[{"start":{"line":1102,"column":12},"end":{"line":1102,"column":12}},{"start":{"line":1102,"column":12},"end":{"line":1102,"column":12}}]},"186":{"line":1103,"type":"if","locations":[{"start":{"line":1103,"column":12},"end":{"line":1103,"column":12}},{"start":{"line":1103,"column":12},"end":{"line":1103,"column":12}}]},"187":{"line":1104,"type":"if","locations":[{"start":{"line":1104,"column":16},"end":{"line":1104,"column":16}},{"start":{"line":1104,"column":16},"end":{"line":1104,"column":16}}]},"188":{"line":1104,"type":"binary-expr","locations":[{"start":{"line":1104,"column":20},"end":{"line":1104,"column":46}},{"start":{"line":1104,"column":50},"end":{"line":1104,"column":66}}]},"189":{"line":1107,"type":"if","locations":[{"start":{"line":1107,"column":16},"end":{"line":1107,"column":16}},{"start":{"line":1107,"column":16},"end":{"line":1107,"column":16}}]},"190":{"line":1107,"type":"binary-expr","locations":[{"start":{"line":1107,"column":20},"end":{"line":1107,"column":30}},{"start":{"line":1107,"column":34},"end":{"line":1107,"column":65}}]},"191":{"line":1112,"type":"if","locations":[{"start":{"line":1112,"column":12},"end":{"line":1112,"column":12}},{"start":{"line":1112,"column":12},"end":{"line":1112,"column":12}}]},"192":{"line":1134,"type":"if","locations":[{"start":{"line":1134,"column":12},"end":{"line":1134,"column":12}},{"start":{"line":1134,"column":12},"end":{"line":1134,"column":12}}]},"193":{"line":1155,"type":"if","locations":[{"start":{"line":1155,"column":12},"end":{"line":1155,"column":12}},{"start":{"line":1155,"column":12},"end":{"line":1155,"column":12}}]},"194":{"line":1156,"type":"if","locations":[{"start":{"line":1156,"column":12},"end":{"line":1156,"column":12}},{"start":{"line":1156,"column":12},"end":{"line":1156,"column":12}}]},"195":{"line":1157,"type":"if","locations":[{"start":{"line":1157,"column":16},"end":{"line":1157,"column":16}},{"start":{"line":1157,"column":16},"end":{"line":1157,"column":16}}]},"196":{"line":1159,"type":"if","locations":[{"start":{"line":1159,"column":21},"end":{"line":1159,"column":21}},{"start":{"line":1159,"column":21},"end":{"line":1159,"column":21}}]},"197":{"line":1161,"type":"if","locations":[{"start":{"line":1161,"column":21},"end":{"line":1161,"column":21}},{"start":{"line":1161,"column":21},"end":{"line":1161,"column":21}}]},"198":{"line":1161,"type":"binary-expr","locations":[{"start":{"line":1161,"column":27},"end":{"line":1161,"column":32}},{"start":{"line":1161,"column":36},"end":{"line":1161,"column":57}}]},"199":{"line":1163,"type":"if","locations":[{"start":{"line":1163,"column":16},"end":{"line":1163,"column":16}},{"start":{"line":1163,"column":16},"end":{"line":1163,"column":16}}]},"200":{"line":1163,"type":"binary-expr","locations":[{"start":{"line":1163,"column":20},"end":{"line":1163,"column":46}},{"start":{"line":1163,"column":50},"end":{"line":1163,"column":66}}]},"201":{"line":1166,"type":"if","locations":[{"start":{"line":1166,"column":16},"end":{"line":1166,"column":16}},{"start":{"line":1166,"column":16},"end":{"line":1166,"column":16}}]},"202":{"line":1166,"type":"binary-expr","locations":[{"start":{"line":1166,"column":20},"end":{"line":1166,"column":30}},{"start":{"line":1166,"column":34},"end":{"line":1166,"column":65}}]},"203":{"line":1169,"type":"if","locations":[{"start":{"line":1169,"column":12},"end":{"line":1169,"column":12}},{"start":{"line":1169,"column":12},"end":{"line":1169,"column":12}}]},"204":{"line":1171,"type":"if","locations":[{"start":{"line":1171,"column":17},"end":{"line":1171,"column":17}},{"start":{"line":1171,"column":17},"end":{"line":1171,"column":17}}]},"205":{"line":1175,"type":"if","locations":[{"start":{"line":1175,"column":12},"end":{"line":1175,"column":12}},{"start":{"line":1175,"column":12},"end":{"line":1175,"column":12}}]},"206":{"line":1176,"type":"cond-expr","locations":[{"start":{"line":1176,"column":56},"end":{"line":1176,"column":65}},{"start":{"line":1176,"column":68},"end":{"line":1176,"column":74}}]},"207":{"line":1180,"type":"if","locations":[{"start":{"line":1180,"column":12},"end":{"line":1180,"column":12}},{"start":{"line":1180,"column":12},"end":{"line":1180,"column":12}}]},"208":{"line":1201,"type":"if","locations":[{"start":{"line":1201,"column":12},"end":{"line":1201,"column":12}},{"start":{"line":1201,"column":12},"end":{"line":1201,"column":12}}]},"209":{"line":1223,"type":"if","locations":[{"start":{"line":1223,"column":12},"end":{"line":1223,"column":12}},{"start":{"line":1223,"column":12},"end":{"line":1223,"column":12}}]},"210":{"line":1224,"type":"if","locations":[{"start":{"line":1224,"column":12},"end":{"line":1224,"column":12}},{"start":{"line":1224,"column":12},"end":{"line":1224,"column":12}}]},"211":{"line":1225,"type":"if","locations":[{"start":{"line":1225,"column":16},"end":{"line":1225,"column":16}},{"start":{"line":1225,"column":16},"end":{"line":1225,"column":16}}]},"212":{"line":1225,"type":"binary-expr","locations":[{"start":{"line":1225,"column":20},"end":{"line":1225,"column":46}},{"start":{"line":1225,"column":50},"end":{"line":1225,"column":66}}]},"213":{"line":1228,"type":"if","locations":[{"start":{"line":1228,"column":16},"end":{"line":1228,"column":16}},{"start":{"line":1228,"column":16},"end":{"line":1228,"column":16}}]},"214":{"line":1228,"type":"binary-expr","locations":[{"start":{"line":1228,"column":20},"end":{"line":1228,"column":30}},{"start":{"line":1228,"column":34},"end":{"line":1228,"column":65}}]},"215":{"line":1233,"type":"if","locations":[{"start":{"line":1233,"column":12},"end":{"line":1233,"column":12}},{"start":{"line":1233,"column":12},"end":{"line":1233,"column":12}}]},"216":{"line":1255,"type":"if","locations":[{"start":{"line":1255,"column":12},"end":{"line":1255,"column":12}},{"start":{"line":1255,"column":12},"end":{"line":1255,"column":12}}]},"217":{"line":1282,"type":"if","locations":[{"start":{"line":1282,"column":8},"end":{"line":1282,"column":8}},{"start":{"line":1282,"column":8},"end":{"line":1282,"column":8}}]},"218":{"line":1283,"type":"if","locations":[{"start":{"line":1283,"column":8},"end":{"line":1283,"column":8}},{"start":{"line":1283,"column":8},"end":{"line":1283,"column":8}}]},"219":{"line":1284,"type":"if","locations":[{"start":{"line":1284,"column":12},"end":{"line":1284,"column":12}},{"start":{"line":1284,"column":12},"end":{"line":1284,"column":12}}]},"220":{"line":1286,"type":"if","locations":[{"start":{"line":1286,"column":12},"end":{"line":1286,"column":12}},{"start":{"line":1286,"column":12},"end":{"line":1286,"column":12}}]},"221":{"line":1286,"type":"binary-expr","locations":[{"start":{"line":1286,"column":16},"end":{"line":1286,"column":42}},{"start":{"line":1286,"column":46},"end":{"line":1286,"column":62}}]},"222":{"line":1289,"type":"if","locations":[{"start":{"line":1289,"column":12},"end":{"line":1289,"column":12}},{"start":{"line":1289,"column":12},"end":{"line":1289,"column":12}}]},"223":{"line":1289,"type":"binary-expr","locations":[{"start":{"line":1289,"column":16},"end":{"line":1289,"column":26}},{"start":{"line":1289,"column":30},"end":{"line":1289,"column":61}}]},"224":{"line":1294,"type":"if","locations":[{"start":{"line":1294,"column":8},"end":{"line":1294,"column":8}},{"start":{"line":1294,"column":8},"end":{"line":1294,"column":8}}]},"225":{"line":1295,"type":"cond-expr","locations":[{"start":{"line":1295,"column":52},"end":{"line":1295,"column":61}},{"start":{"line":1295,"column":64},"end":{"line":1295,"column":70}}]},"226":{"line":1297,"type":"cond-expr","locations":[{"start":{"line":1298,"column":14},"end":{"line":1298,"column":59}},{"start":{"line":1299,"column":14},"end":{"line":1299,"column":59}}]},"227":{"line":1300,"type":"if","locations":[{"start":{"line":1300,"column":8},"end":{"line":1300,"column":8}},{"start":{"line":1300,"column":8},"end":{"line":1300,"column":8}}]},"228":{"line":1322,"type":"if","locations":[{"start":{"line":1322,"column":8},"end":{"line":1322,"column":8}},{"start":{"line":1322,"column":8},"end":{"line":1322,"column":8}}]},"229":{"line":1323,"type":"if","locations":[{"start":{"line":1323,"column":8},"end":{"line":1323,"column":8}},{"start":{"line":1323,"column":8},"end":{"line":1323,"column":8}}]},"230":{"line":1324,"type":"if","locations":[{"start":{"line":1324,"column":12},"end":{"line":1324,"column":12}},{"start":{"line":1324,"column":12},"end":{"line":1324,"column":12}}]},"231":{"line":1324,"type":"binary-expr","locations":[{"start":{"line":1324,"column":16},"end":{"line":1324,"column":42}},{"start":{"line":1324,"column":46},"end":{"line":1324,"column":62}}]},"232":{"line":1327,"type":"if","locations":[{"start":{"line":1327,"column":12},"end":{"line":1327,"column":12}},{"start":{"line":1327,"column":12},"end":{"line":1327,"column":12}}]},"233":{"line":1327,"type":"binary-expr","locations":[{"start":{"line":1327,"column":16},"end":{"line":1327,"column":26}},{"start":{"line":1327,"column":30},"end":{"line":1327,"column":61}}]},"234":{"line":1330,"type":"cond-expr","locations":[{"start":{"line":1331,"column":14},"end":{"line":1331,"column":51}},{"start":{"line":1332,"column":14},"end":{"line":1332,"column":51}}]},"235":{"line":1333,"type":"if","locations":[{"start":{"line":1333,"column":8},"end":{"line":1333,"column":8}},{"start":{"line":1333,"column":8},"end":{"line":1333,"column":8}}]},"236":{"line":1357,"type":"if","locations":[{"start":{"line":1357,"column":8},"end":{"line":1357,"column":8}},{"start":{"line":1357,"column":8},"end":{"line":1357,"column":8}}]},"237":{"line":1358,"type":"if","locations":[{"start":{"line":1358,"column":8},"end":{"line":1358,"column":8}},{"start":{"line":1358,"column":8},"end":{"line":1358,"column":8}}]},"238":{"line":1359,"type":"if","locations":[{"start":{"line":1359,"column":12},"end":{"line":1359,"column":12}},{"start":{"line":1359,"column":12},"end":{"line":1359,"column":12}}]},"239":{"line":1361,"type":"if","locations":[{"start":{"line":1361,"column":12},"end":{"line":1361,"column":12}},{"start":{"line":1361,"column":12},"end":{"line":1361,"column":12}}]},"240":{"line":1361,"type":"binary-expr","locations":[{"start":{"line":1361,"column":16},"end":{"line":1361,"column":42}},{"start":{"line":1361,"column":46},"end":{"line":1361,"column":62}}]},"241":{"line":1364,"type":"if","locations":[{"start":{"line":1364,"column":12},"end":{"line":1364,"column":12}},{"start":{"line":1364,"column":12},"end":{"line":1364,"column":12}}]},"242":{"line":1364,"type":"binary-expr","locations":[{"start":{"line":1364,"column":16},"end":{"line":1364,"column":26}},{"start":{"line":1364,"column":30},"end":{"line":1364,"column":61}}]},"243":{"line":1369,"type":"if","locations":[{"start":{"line":1369,"column":8},"end":{"line":1369,"column":8}},{"start":{"line":1369,"column":8},"end":{"line":1369,"column":8}}]},"244":{"line":1370,"type":"cond-expr","locations":[{"start":{"line":1370,"column":52},"end":{"line":1370,"column":61}},{"start":{"line":1370,"column":64},"end":{"line":1370,"column":70}}]},"245":{"line":1372,"type":"cond-expr","locations":[{"start":{"line":1373,"column":14},"end":{"line":1373,"column":60}},{"start":{"line":1374,"column":14},"end":{"line":1374,"column":60}}]},"246":{"line":1375,"type":"if","locations":[{"start":{"line":1375,"column":8},"end":{"line":1375,"column":8}},{"start":{"line":1375,"column":8},"end":{"line":1375,"column":8}}]},"247":{"line":1397,"type":"if","locations":[{"start":{"line":1397,"column":8},"end":{"line":1397,"column":8}},{"start":{"line":1397,"column":8},"end":{"line":1397,"column":8}}]},"248":{"line":1398,"type":"if","locations":[{"start":{"line":1398,"column":8},"end":{"line":1398,"column":8}},{"start":{"line":1398,"column":8},"end":{"line":1398,"column":8}}]},"249":{"line":1399,"type":"if","locations":[{"start":{"line":1399,"column":12},"end":{"line":1399,"column":12}},{"start":{"line":1399,"column":12},"end":{"line":1399,"column":12}}]},"250":{"line":1399,"type":"binary-expr","locations":[{"start":{"line":1399,"column":16},"end":{"line":1399,"column":42}},{"start":{"line":1399,"column":46},"end":{"line":1399,"column":62}}]},"251":{"line":1402,"type":"if","locations":[{"start":{"line":1402,"column":12},"end":{"line":1402,"column":12}},{"start":{"line":1402,"column":12},"end":{"line":1402,"column":12}}]},"252":{"line":1402,"type":"binary-expr","locations":[{"start":{"line":1402,"column":16},"end":{"line":1402,"column":26}},{"start":{"line":1402,"column":30},"end":{"line":1402,"column":61}}]},"253":{"line":1405,"type":"cond-expr","locations":[{"start":{"line":1406,"column":14},"end":{"line":1406,"column":52}},{"start":{"line":1407,"column":14},"end":{"line":1407,"column":52}}]},"254":{"line":1408,"type":"if","locations":[{"start":{"line":1408,"column":8},"end":{"line":1408,"column":8}},{"start":{"line":1408,"column":8},"end":{"line":1408,"column":8}}]},"255":{"line":1441,"type":"if","locations":[{"start":{"line":1441,"column":13},"end":{"line":1441,"column":13}},{"start":{"line":1441,"column":13},"end":{"line":1441,"column":13}}]},"256":{"line":1442,"type":"if","locations":[{"start":{"line":1442,"column":13},"end":{"line":1442,"column":13}},{"start":{"line":1442,"column":13},"end":{"line":1442,"column":13}}]},"257":{"line":1443,"type":"if","locations":[{"start":{"line":1443,"column":13},"end":{"line":1443,"column":13}},{"start":{"line":1443,"column":13},"end":{"line":1443,"column":13}}]},"258":{"line":1444,"type":"if","locations":[{"start":{"line":1444,"column":13},"end":{"line":1444,"column":13}},{"start":{"line":1444,"column":13},"end":{"line":1444,"column":13}}]},"259":{"line":1478,"type":"if","locations":[{"start":{"line":1478,"column":8},"end":{"line":1478,"column":8}},{"start":{"line":1478,"column":8},"end":{"line":1478,"column":8}}]},"260":{"line":1479,"type":"if","locations":[{"start":{"line":1479,"column":8},"end":{"line":1479,"column":8}},{"start":{"line":1479,"column":8},"end":{"line":1479,"column":8}}]},"261":{"line":1480,"type":"if","locations":[{"start":{"line":1480,"column":12},"end":{"line":1480,"column":12}},{"start":{"line":1480,"column":12},"end":{"line":1480,"column":12}}]},"262":{"line":1480,"type":"binary-expr","locations":[{"start":{"line":1480,"column":16},"end":{"line":1480,"column":41}},{"start":{"line":1480,"column":45},"end":{"line":1480,"column":60}}]},"263":{"line":1483,"type":"if","locations":[{"start":{"line":1483,"column":12},"end":{"line":1483,"column":12}},{"start":{"line":1483,"column":12},"end":{"line":1483,"column":12}}]},"264":{"line":1483,"type":"binary-expr","locations":[{"start":{"line":1483,"column":16},"end":{"line":1483,"column":42}},{"start":{"line":1483,"column":46},"end":{"line":1483,"column":62}}]},"265":{"line":1486,"type":"if","locations":[{"start":{"line":1486,"column":12},"end":{"line":1486,"column":12}},{"start":{"line":1486,"column":12},"end":{"line":1486,"column":12}}]},"266":{"line":1486,"type":"binary-expr","locations":[{"start":{"line":1486,"column":16},"end":{"line":1486,"column":26}},{"start":{"line":1486,"column":30},"end":{"line":1486,"column":61}}]},"267":{"line":1493,"type":"if","locations":[{"start":{"line":1493,"column":8},"end":{"line":1493,"column":8}},{"start":{"line":1493,"column":8},"end":{"line":1493,"column":8}}]},"268":{"line":1494,"type":"cond-expr","locations":[{"start":{"line":1494,"column":53},"end":{"line":1494,"column":63}},{"start":{"line":1494,"column":66},"end":{"line":1494,"column":72}}]},"269":{"line":1503,"type":"if","locations":[{"start":{"line":1503,"column":8},"end":{"line":1503,"column":8}},{"start":{"line":1503,"column":8},"end":{"line":1503,"column":8}}]},"270":{"line":1534,"type":"if","locations":[{"start":{"line":1534,"column":8},"end":{"line":1534,"column":8}},{"start":{"line":1534,"column":8},"end":{"line":1534,"column":8}}]},"271":{"line":1535,"type":"if","locations":[{"start":{"line":1535,"column":8},"end":{"line":1535,"column":8}},{"start":{"line":1535,"column":8},"end":{"line":1535,"column":8}}]},"272":{"line":1536,"type":"if","locations":[{"start":{"line":1536,"column":12},"end":{"line":1536,"column":12}},{"start":{"line":1536,"column":12},"end":{"line":1536,"column":12}}]},"273":{"line":1536,"type":"binary-expr","locations":[{"start":{"line":1536,"column":16},"end":{"line":1536,"column":42}},{"start":{"line":1536,"column":46},"end":{"line":1536,"column":62}}]},"274":{"line":1539,"type":"if","locations":[{"start":{"line":1539,"column":12},"end":{"line":1539,"column":12}},{"start":{"line":1539,"column":12},"end":{"line":1539,"column":12}}]},"275":{"line":1539,"type":"binary-expr","locations":[{"start":{"line":1539,"column":16},"end":{"line":1539,"column":26}},{"start":{"line":1539,"column":30},"end":{"line":1539,"column":61}}]},"276":{"line":1546,"type":"if","locations":[{"start":{"line":1546,"column":12},"end":{"line":1546,"column":12}},{"start":{"line":1546,"column":12},"end":{"line":1546,"column":12}}]},"277":{"line":1546,"type":"binary-expr","locations":[{"start":{"line":1546,"column":16},"end":{"line":1546,"column":30}},{"start":{"line":1546,"column":34},"end":{"line":1546,"column":53}}]},"278":{"line":1552,"type":"if","locations":[{"start":{"line":1552,"column":12},"end":{"line":1552,"column":12}},{"start":{"line":1552,"column":12},"end":{"line":1552,"column":12}}]},"279":{"line":1557,"type":"if","locations":[{"start":{"line":1557,"column":8},"end":{"line":1557,"column":8}},{"start":{"line":1557,"column":8},"end":{"line":1557,"column":8}}]},"280":{"line":1578,"type":"if","locations":[{"start":{"line":1578,"column":8},"end":{"line":1578,"column":8}},{"start":{"line":1578,"column":8},"end":{"line":1578,"column":8}}]},"281":{"line":1587,"type":"if","locations":[{"start":{"line":1587,"column":4},"end":{"line":1587,"column":4}},{"start":{"line":1587,"column":4},"end":{"line":1587,"column":4}}]},"282":{"line":1604,"type":"if","locations":[{"start":{"line":1604,"column":12},"end":{"line":1604,"column":12}},{"start":{"line":1604,"column":12},"end":{"line":1604,"column":12}}]},"283":{"line":1606,"type":"if","locations":[{"start":{"line":1606,"column":17},"end":{"line":1606,"column":17}},{"start":{"line":1606,"column":17},"end":{"line":1606,"column":17}}]},"284":{"line":1612,"type":"if","locations":[{"start":{"line":1612,"column":12},"end":{"line":1612,"column":12}},{"start":{"line":1612,"column":12},"end":{"line":1612,"column":12}}]},"285":{"line":1613,"type":"if","locations":[{"start":{"line":1613,"column":16},"end":{"line":1613,"column":16}},{"start":{"line":1613,"column":16},"end":{"line":1613,"column":16}}]},"286":{"line":1614,"type":"if","locations":[{"start":{"line":1614,"column":20},"end":{"line":1614,"column":20}},{"start":{"line":1614,"column":20},"end":{"line":1614,"column":20}}]},"287":{"line":1615,"type":"cond-expr","locations":[{"start":{"line":1615,"column":48},"end":{"line":1615,"column":49}},{"start":{"line":1615,"column":52},"end":{"line":1615,"column":53}}]},"288":{"line":1617,"type":"cond-expr","locations":[{"start":{"line":1617,"column":49},"end":{"line":1617,"column":50}},{"start":{"line":1617,"column":53},"end":{"line":1617,"column":54}}]},"289":{"line":1619,"type":"if","locations":[{"start":{"line":1619,"column":20},"end":{"line":1619,"column":20}},{"start":{"line":1619,"column":20},"end":{"line":1619,"column":20}}]},"290":{"line":1620,"type":"cond-expr","locations":[{"start":{"line":1620,"column":48},"end":{"line":1620,"column":49}},{"start":{"line":1620,"column":52},"end":{"line":1620,"column":53}}]},"291":{"line":1622,"type":"cond-expr","locations":[{"start":{"line":1622,"column":49},"end":{"line":1622,"column":50}},{"start":{"line":1622,"column":53},"end":{"line":1622,"column":54}}]},"292":{"line":1625,"type":"cond-expr","locations":[{"start":{"line":1625,"column":40},"end":{"line":1625,"column":41}},{"start":{"line":1625,"column":44},"end":{"line":1625,"column":46}}]},"293":{"line":1635,"type":"if","locations":[{"start":{"line":1635,"column":12},"end":{"line":1635,"column":12}},{"start":{"line":1635,"column":12},"end":{"line":1635,"column":12}}]},"294":{"line":1637,"type":"if","locations":[{"start":{"line":1637,"column":17},"end":{"line":1637,"column":17}},{"start":{"line":1637,"column":17},"end":{"line":1637,"column":17}}]},"295":{"line":1639,"type":"if","locations":[{"start":{"line":1639,"column":17},"end":{"line":1639,"column":17}},{"start":{"line":1639,"column":17},"end":{"line":1639,"column":17}}]},"296":{"line":1651,"type":"if","locations":[{"start":{"line":1651,"column":12},"end":{"line":1651,"column":12}},{"start":{"line":1651,"column":12},"end":{"line":1651,"column":12}}]},"297":{"line":1653,"type":"if","locations":[{"start":{"line":1653,"column":17},"end":{"line":1653,"column":17}},{"start":{"line":1653,"column":17},"end":{"line":1653,"column":17}}]},"298":{"line":1655,"type":"if","locations":[{"start":{"line":1655,"column":17},"end":{"line":1655,"column":17}},{"start":{"line":1655,"column":17},"end":{"line":1655,"column":17}}]},"299":{"line":1670,"type":"if","locations":[{"start":{"line":1670,"column":12},"end":{"line":1670,"column":12}},{"start":{"line":1670,"column":12},"end":{"line":1670,"column":12}}]},"300":{"line":1671,"type":"if","locations":[{"start":{"line":1671,"column":12},"end":{"line":1671,"column":12}},{"start":{"line":1671,"column":12},"end":{"line":1671,"column":12}}]},"301":{"line":1672,"type":"if","locations":[{"start":{"line":1672,"column":16},"end":{"line":1672,"column":16}},{"start":{"line":1672,"column":16},"end":{"line":1672,"column":16}}]},"302":{"line":1674,"type":"if","locations":[{"start":{"line":1674,"column":21},"end":{"line":1674,"column":21}},{"start":{"line":1674,"column":21},"end":{"line":1674,"column":21}}]},"303":{"line":1676,"type":"if","locations":[{"start":{"line":1676,"column":21},"end":{"line":1676,"column":21}},{"start":{"line":1676,"column":21},"end":{"line":1676,"column":21}}]},"304":{"line":1676,"type":"binary-expr","locations":[{"start":{"line":1676,"column":27},"end":{"line":1676,"column":32}},{"start":{"line":1676,"column":36},"end":{"line":1676,"column":57}}]},"305":{"line":1678,"type":"if","locations":[{"start":{"line":1678,"column":16},"end":{"line":1678,"column":16}},{"start":{"line":1678,"column":16},"end":{"line":1678,"column":16}}]},"306":{"line":1678,"type":"binary-expr","locations":[{"start":{"line":1678,"column":20},"end":{"line":1678,"column":46}},{"start":{"line":1678,"column":50},"end":{"line":1678,"column":66}}]},"307":{"line":1681,"type":"if","locations":[{"start":{"line":1681,"column":16},"end":{"line":1681,"column":16}},{"start":{"line":1681,"column":16},"end":{"line":1681,"column":16}}]},"308":{"line":1681,"type":"binary-expr","locations":[{"start":{"line":1681,"column":20},"end":{"line":1681,"column":30}},{"start":{"line":1681,"column":34},"end":{"line":1681,"column":65}}]},"309":{"line":1684,"type":"if","locations":[{"start":{"line":1684,"column":12},"end":{"line":1684,"column":12}},{"start":{"line":1684,"column":12},"end":{"line":1684,"column":12}}]},"310":{"line":1686,"type":"if","locations":[{"start":{"line":1686,"column":17},"end":{"line":1686,"column":17}},{"start":{"line":1686,"column":17},"end":{"line":1686,"column":17}}]},"311":{"line":1688,"type":"if","locations":[{"start":{"line":1688,"column":17},"end":{"line":1688,"column":17}},{"start":{"line":1688,"column":17},"end":{"line":1688,"column":17}}]},"312":{"line":1695,"type":"if","locations":[{"start":{"line":1695,"column":12},"end":{"line":1695,"column":12}},{"start":{"line":1695,"column":12},"end":{"line":1695,"column":12}}]},"313":{"line":1696,"type":"cond-expr","locations":[{"start":{"line":1696,"column":57},"end":{"line":1696,"column":67}},{"start":{"line":1696,"column":70},"end":{"line":1696,"column":76}}]},"314":{"line":1698,"type":"switch","locations":[{"start":{"line":1699,"column":16},"end":{"line":1699,"column":71}},{"start":{"line":1700,"column":16},"end":{"line":1700,"column":108}},{"start":{"line":1701,"column":16},"end":{"line":1701,"column":108}},{"start":{"line":1702,"column":16},"end":{"line":1702,"column":108}},{"start":{"line":1703,"column":16},"end":{"line":1703,"column":108}},{"start":{"line":1704,"column":16},"end":{"line":1704,"column":108}},{"start":{"line":1705,"column":16},"end":{"line":1705,"column":108}},{"start":{"line":1706,"column":16},"end":{"line":1706,"column":108}},{"start":{"line":1707,"column":16},"end":{"line":1707,"column":108}},{"start":{"line":1708,"column":16},"end":{"line":1708,"column":108}}]},"315":{"line":1700,"type":"cond-expr","locations":[{"start":{"line":1700,"column":62},"end":{"line":1700,"column":83}},{"start":{"line":1700,"column":86},"end":{"line":1700,"column":107}}]},"316":{"line":1701,"type":"cond-expr","locations":[{"start":{"line":1701,"column":62},"end":{"line":1701,"column":83}},{"start":{"line":1701,"column":86},"end":{"line":1701,"column":107}}]},"317":{"line":1702,"type":"cond-expr","locations":[{"start":{"line":1702,"column":62},"end":{"line":1702,"column":83}},{"start":{"line":1702,"column":86},"end":{"line":1702,"column":107}}]},"318":{"line":1703,"type":"cond-expr","locations":[{"start":{"line":1703,"column":62},"end":{"line":1703,"column":83}},{"start":{"line":1703,"column":86},"end":{"line":1703,"column":107}}]},"319":{"line":1704,"type":"cond-expr","locations":[{"start":{"line":1704,"column":62},"end":{"line":1704,"column":83}},{"start":{"line":1704,"column":86},"end":{"line":1704,"column":107}}]},"320":{"line":1705,"type":"cond-expr","locations":[{"start":{"line":1705,"column":62},"end":{"line":1705,"column":83}},{"start":{"line":1705,"column":86},"end":{"line":1705,"column":107}}]},"321":{"line":1706,"type":"cond-expr","locations":[{"start":{"line":1706,"column":62},"end":{"line":1706,"column":83}},{"start":{"line":1706,"column":86},"end":{"line":1706,"column":107}}]},"322":{"line":1707,"type":"cond-expr","locations":[{"start":{"line":1707,"column":62},"end":{"line":1707,"column":83}},{"start":{"line":1707,"column":86},"end":{"line":1707,"column":107}}]},"323":{"line":1708,"type":"cond-expr","locations":[{"start":{"line":1708,"column":62},"end":{"line":1708,"column":83}},{"start":{"line":1708,"column":86},"end":{"line":1708,"column":107}}]},"324":{"line":1710,"type":"if","locations":[{"start":{"line":1710,"column":12},"end":{"line":1710,"column":12}},{"start":{"line":1710,"column":12},"end":{"line":1710,"column":12}}]},"325":{"line":1741,"type":"if","locations":[{"start":{"line":1741,"column":12},"end":{"line":1741,"column":12}},{"start":{"line":1741,"column":12},"end":{"line":1741,"column":12}}]},"326":{"line":1742,"type":"if","locations":[{"start":{"line":1742,"column":12},"end":{"line":1742,"column":12}},{"start":{"line":1742,"column":12},"end":{"line":1742,"column":12}}]},"327":{"line":1743,"type":"if","locations":[{"start":{"line":1743,"column":16},"end":{"line":1743,"column":16}},{"start":{"line":1743,"column":16},"end":{"line":1743,"column":16}}]},"328":{"line":1743,"type":"binary-expr","locations":[{"start":{"line":1743,"column":20},"end":{"line":1743,"column":46}},{"start":{"line":1743,"column":50},"end":{"line":1743,"column":66}}]},"329":{"line":1746,"type":"if","locations":[{"start":{"line":1746,"column":16},"end":{"line":1746,"column":16}},{"start":{"line":1746,"column":16},"end":{"line":1746,"column":16}}]},"330":{"line":1746,"type":"binary-expr","locations":[{"start":{"line":1746,"column":20},"end":{"line":1746,"column":30}},{"start":{"line":1746,"column":34},"end":{"line":1746,"column":65}}]},"331":{"line":1755,"type":"if","locations":[{"start":{"line":1755,"column":66},"end":{"line":1755,"column":66}},{"start":{"line":1755,"column":66},"end":{"line":1755,"column":66}}]},"332":{"line":1756,"type":"if","locations":[{"start":{"line":1756,"column":66},"end":{"line":1756,"column":66}},{"start":{"line":1756,"column":66},"end":{"line":1756,"column":66}}]},"333":{"line":1756,"type":"binary-expr","locations":[{"start":{"line":1756,"column":71},"end":{"line":1756,"column":79}},{"start":{"line":1756,"column":85},"end":{"line":1756,"column":98}},{"start":{"line":1756,"column":102},"end":{"line":1756,"column":126}}]},"334":{"line":1757,"type":"if","locations":[{"start":{"line":1757,"column":66},"end":{"line":1757,"column":66}},{"start":{"line":1757,"column":66},"end":{"line":1757,"column":66}}]},"335":{"line":1757,"type":"binary-expr","locations":[{"start":{"line":1757,"column":71},"end":{"line":1757,"column":79}},{"start":{"line":1757,"column":85},"end":{"line":1757,"column":98}},{"start":{"line":1757,"column":102},"end":{"line":1757,"column":126}}]},"336":{"line":1758,"type":"if","locations":[{"start":{"line":1758,"column":66},"end":{"line":1758,"column":66}},{"start":{"line":1758,"column":66},"end":{"line":1758,"column":66}}]},"337":{"line":1758,"type":"binary-expr","locations":[{"start":{"line":1758,"column":71},"end":{"line":1758,"column":79}},{"start":{"line":1758,"column":85},"end":{"line":1758,"column":98}},{"start":{"line":1758,"column":102},"end":{"line":1758,"column":126}}]},"338":{"line":1759,"type":"if","locations":[{"start":{"line":1759,"column":66},"end":{"line":1759,"column":66}},{"start":{"line":1759,"column":66},"end":{"line":1759,"column":66}}]},"339":{"line":1759,"type":"binary-expr","locations":[{"start":{"line":1759,"column":71},"end":{"line":1759,"column":79}},{"start":{"line":1759,"column":85},"end":{"line":1759,"column":98}},{"start":{"line":1759,"column":102},"end":{"line":1759,"column":126}}]},"340":{"line":1760,"type":"if","locations":[{"start":{"line":1760,"column":66},"end":{"line":1760,"column":66}},{"start":{"line":1760,"column":66},"end":{"line":1760,"column":66}}]},"341":{"line":1760,"type":"binary-expr","locations":[{"start":{"line":1760,"column":71},"end":{"line":1760,"column":79}},{"start":{"line":1760,"column":85},"end":{"line":1760,"column":98}},{"start":{"line":1760,"column":102},"end":{"line":1760,"column":126}}]},"342":{"line":1761,"type":"if","locations":[{"start":{"line":1761,"column":66},"end":{"line":1761,"column":66}},{"start":{"line":1761,"column":66},"end":{"line":1761,"column":66}}]},"343":{"line":1761,"type":"binary-expr","locations":[{"start":{"line":1761,"column":71},"end":{"line":1761,"column":79}},{"start":{"line":1761,"column":85},"end":{"line":1761,"column":98}},{"start":{"line":1761,"column":102},"end":{"line":1761,"column":126}}]},"344":{"line":1762,"type":"if","locations":[{"start":{"line":1762,"column":66},"end":{"line":1762,"column":66}},{"start":{"line":1762,"column":66},"end":{"line":1762,"column":66}}]},"345":{"line":1762,"type":"binary-expr","locations":[{"start":{"line":1762,"column":71},"end":{"line":1762,"column":79}},{"start":{"line":1762,"column":85},"end":{"line":1762,"column":98}},{"start":{"line":1762,"column":102},"end":{"line":1762,"column":126}}]},"346":{"line":1763,"type":"if","locations":[{"start":{"line":1763,"column":66},"end":{"line":1763,"column":66}},{"start":{"line":1763,"column":66},"end":{"line":1763,"column":66}}]},"347":{"line":1763,"type":"binary-expr","locations":[{"start":{"line":1763,"column":71},"end":{"line":1763,"column":79}},{"start":{"line":1763,"column":85},"end":{"line":1763,"column":98}},{"start":{"line":1763,"column":102},"end":{"line":1763,"column":126}}]},"348":{"line":1764,"type":"if","locations":[{"start":{"line":1764,"column":66},"end":{"line":1764,"column":66}},{"start":{"line":1764,"column":66},"end":{"line":1764,"column":66}}]},"349":{"line":1764,"type":"binary-expr","locations":[{"start":{"line":1764,"column":71},"end":{"line":1764,"column":79}},{"start":{"line":1764,"column":85},"end":{"line":1764,"column":98}},{"start":{"line":1764,"column":102},"end":{"line":1764,"column":126}}]},"350":{"line":1767,"type":"if","locations":[{"start":{"line":1767,"column":12},"end":{"line":1767,"column":12}},{"start":{"line":1767,"column":12},"end":{"line":1767,"column":12}}]},"351":{"line":1789,"type":"if","locations":[{"start":{"line":1789,"column":12},"end":{"line":1789,"column":12}},{"start":{"line":1789,"column":12},"end":{"line":1789,"column":12}}]},"352":{"line":1789,"type":"binary-expr","locations":[{"start":{"line":1789,"column":16},"end":{"line":1789,"column":19}},{"start":{"line":1789,"column":23},"end":{"line":1789,"column":51}}]},"353":{"line":1812,"type":"if","locations":[{"start":{"line":1812,"column":8},"end":{"line":1812,"column":8}},{"start":{"line":1812,"column":8},"end":{"line":1812,"column":8}}]},"354":{"line":1815,"type":"if","locations":[{"start":{"line":1815,"column":8},"end":{"line":1815,"column":8}},{"start":{"line":1815,"column":8},"end":{"line":1815,"column":8}}]},"355":{"line":1816,"type":"if","locations":[{"start":{"line":1816,"column":12},"end":{"line":1816,"column":12}},{"start":{"line":1816,"column":12},"end":{"line":1816,"column":12}}]},"356":{"line":1819,"type":"if","locations":[{"start":{"line":1819,"column":16},"end":{"line":1819,"column":16}},{"start":{"line":1819,"column":16},"end":{"line":1819,"column":16}}]},"357":{"line":1822,"type":"if","locations":[{"start":{"line":1822,"column":12},"end":{"line":1822,"column":12}},{"start":{"line":1822,"column":12},"end":{"line":1822,"column":12}}]},"358":{"line":1822,"type":"binary-expr","locations":[{"start":{"line":1822,"column":16},"end":{"line":1822,"column":42}},{"start":{"line":1822,"column":46},"end":{"line":1822,"column":62}}]},"359":{"line":1825,"type":"if","locations":[{"start":{"line":1825,"column":12},"end":{"line":1825,"column":12}},{"start":{"line":1825,"column":12},"end":{"line":1825,"column":12}}]},"360":{"line":1825,"type":"binary-expr","locations":[{"start":{"line":1825,"column":16},"end":{"line":1825,"column":26}},{"start":{"line":1825,"column":30},"end":{"line":1825,"column":61}}]},"361":{"line":1832,"type":"if","locations":[{"start":{"line":1832,"column":8},"end":{"line":1832,"column":8}},{"start":{"line":1832,"column":8},"end":{"line":1832,"column":8}}]},"362":{"line":1833,"type":"cond-expr","locations":[{"start":{"line":1833,"column":53},"end":{"line":1833,"column":63}},{"start":{"line":1833,"column":66},"end":{"line":1833,"column":72}}]},"363":{"line":1837,"type":"if","locations":[{"start":{"line":1837,"column":8},"end":{"line":1837,"column":8}},{"start":{"line":1837,"column":8},"end":{"line":1837,"column":8}}]},"364":{"line":1855,"type":"if","locations":[{"start":{"line":1855,"column":8},"end":{"line":1855,"column":8}},{"start":{"line":1855,"column":8},"end":{"line":1855,"column":8}}]},"365":{"line":1856,"type":"if","locations":[{"start":{"line":1856,"column":8},"end":{"line":1856,"column":8}},{"start":{"line":1856,"column":8},"end":{"line":1856,"column":8}}]},"366":{"line":1857,"type":"if","locations":[{"start":{"line":1857,"column":12},"end":{"line":1857,"column":12}},{"start":{"line":1857,"column":12},"end":{"line":1857,"column":12}}]},"367":{"line":1857,"type":"binary-expr","locations":[{"start":{"line":1857,"column":16},"end":{"line":1857,"column":42}},{"start":{"line":1857,"column":46},"end":{"line":1857,"column":62}}]},"368":{"line":1860,"type":"if","locations":[{"start":{"line":1860,"column":12},"end":{"line":1860,"column":12}},{"start":{"line":1860,"column":12},"end":{"line":1860,"column":12}}]},"369":{"line":1860,"type":"binary-expr","locations":[{"start":{"line":1860,"column":16},"end":{"line":1860,"column":26}},{"start":{"line":1860,"column":30},"end":{"line":1860,"column":61}}]},"370":{"line":1867,"type":"if","locations":[{"start":{"line":1867,"column":12},"end":{"line":1867,"column":12}},{"start":{"line":1867,"column":12},"end":{"line":1867,"column":12}}]},"371":{"line":1872,"type":"if","locations":[{"start":{"line":1872,"column":8},"end":{"line":1872,"column":8}},{"start":{"line":1872,"column":8},"end":{"line":1872,"column":8}}]},"372":{"line":1896,"type":"if","locations":[{"start":{"line":1896,"column":8},"end":{"line":1896,"column":8}},{"start":{"line":1896,"column":8},"end":{"line":1896,"column":8}}]},"373":{"line":1897,"type":"if","locations":[{"start":{"line":1897,"column":8},"end":{"line":1897,"column":8}},{"start":{"line":1897,"column":8},"end":{"line":1897,"column":8}}]},"374":{"line":1898,"type":"if","locations":[{"start":{"line":1898,"column":12},"end":{"line":1898,"column":12}},{"start":{"line":1898,"column":12},"end":{"line":1898,"column":12}}]},"375":{"line":1900,"type":"if","locations":[{"start":{"line":1900,"column":12},"end":{"line":1900,"column":12}},{"start":{"line":1900,"column":12},"end":{"line":1900,"column":12}}]},"376":{"line":1900,"type":"binary-expr","locations":[{"start":{"line":1900,"column":16},"end":{"line":1900,"column":42}},{"start":{"line":1900,"column":46},"end":{"line":1900,"column":62}}]},"377":{"line":1903,"type":"if","locations":[{"start":{"line":1903,"column":12},"end":{"line":1903,"column":12}},{"start":{"line":1903,"column":12},"end":{"line":1903,"column":12}}]},"378":{"line":1903,"type":"binary-expr","locations":[{"start":{"line":1903,"column":16},"end":{"line":1903,"column":26}},{"start":{"line":1903,"column":30},"end":{"line":1903,"column":61}}]},"379":{"line":1911,"type":"if","locations":[{"start":{"line":1911,"column":8},"end":{"line":1911,"column":8}},{"start":{"line":1911,"column":8},"end":{"line":1911,"column":8}}]},"380":{"line":1912,"type":"cond-expr","locations":[{"start":{"line":1912,"column":53},"end":{"line":1912,"column":63}},{"start":{"line":1912,"column":66},"end":{"line":1912,"column":72}}]},"381":{"line":1914,"type":"if","locations":[{"start":{"line":1914,"column":8},"end":{"line":1914,"column":8}},{"start":{"line":1914,"column":8},"end":{"line":1914,"column":8}}]},"382":{"line":1927,"type":"if","locations":[{"start":{"line":1927,"column":8},"end":{"line":1927,"column":8}},{"start":{"line":1927,"column":8},"end":{"line":1927,"column":8}}]},"383":{"line":1945,"type":"if","locations":[{"start":{"line":1945,"column":8},"end":{"line":1945,"column":8}},{"start":{"line":1945,"column":8},"end":{"line":1945,"column":8}}]},"384":{"line":1946,"type":"if","locations":[{"start":{"line":1946,"column":8},"end":{"line":1946,"column":8}},{"start":{"line":1946,"column":8},"end":{"line":1946,"column":8}}]},"385":{"line":1947,"type":"if","locations":[{"start":{"line":1947,"column":12},"end":{"line":1947,"column":12}},{"start":{"line":1947,"column":12},"end":{"line":1947,"column":12}}]},"386":{"line":1947,"type":"binary-expr","locations":[{"start":{"line":1947,"column":16},"end":{"line":1947,"column":42}},{"start":{"line":1947,"column":46},"end":{"line":1947,"column":62}}]},"387":{"line":1950,"type":"if","locations":[{"start":{"line":1950,"column":12},"end":{"line":1950,"column":12}},{"start":{"line":1950,"column":12},"end":{"line":1950,"column":12}}]},"388":{"line":1950,"type":"binary-expr","locations":[{"start":{"line":1950,"column":16},"end":{"line":1950,"column":26}},{"start":{"line":1950,"column":30},"end":{"line":1950,"column":61}}]},"389":{"line":1957,"type":"if","locations":[{"start":{"line":1957,"column":8},"end":{"line":1957,"column":8}},{"start":{"line":1957,"column":8},"end":{"line":1957,"column":8}}]},"390":{"line":1995,"type":"if","locations":[{"start":{"line":1995,"column":8},"end":{"line":1995,"column":8}},{"start":{"line":1995,"column":8},"end":{"line":1995,"column":8}}]},"391":{"line":1996,"type":"if","locations":[{"start":{"line":1996,"column":8},"end":{"line":1996,"column":8}},{"start":{"line":1996,"column":8},"end":{"line":1996,"column":8}}]},"392":{"line":1997,"type":"if","locations":[{"start":{"line":1997,"column":12},"end":{"line":1997,"column":12}},{"start":{"line":1997,"column":12},"end":{"line":1997,"column":12}}]},"393":{"line":1997,"type":"binary-expr","locations":[{"start":{"line":1997,"column":16},"end":{"line":1997,"column":42}},{"start":{"line":1997,"column":46},"end":{"line":1997,"column":62}}]},"394":{"line":2000,"type":"if","locations":[{"start":{"line":2000,"column":12},"end":{"line":2000,"column":12}},{"start":{"line":2000,"column":12},"end":{"line":2000,"column":12}}]},"395":{"line":2000,"type":"binary-expr","locations":[{"start":{"line":2000,"column":16},"end":{"line":2000,"column":26}},{"start":{"line":2000,"column":30},"end":{"line":2000,"column":61}}]},"396":{"line":2007,"type":"if","locations":[{"start":{"line":2007,"column":8},"end":{"line":2007,"column":8}},{"start":{"line":2007,"column":8},"end":{"line":2007,"column":8}}]},"397":{"line":2008,"type":"cond-expr","locations":[{"start":{"line":2008,"column":53},"end":{"line":2008,"column":63}},{"start":{"line":2008,"column":66},"end":{"line":2008,"column":72}}]},"398":{"line":2011,"type":"if","locations":[{"start":{"line":2011,"column":8},"end":{"line":2011,"column":8}},{"start":{"line":2011,"column":8},"end":{"line":2011,"column":8}}]},"399":{"line":2046,"type":"if","locations":[{"start":{"line":2046,"column":8},"end":{"line":2046,"column":8}},{"start":{"line":2046,"column":8},"end":{"line":2046,"column":8}}]},"400":{"line":2072,"type":"if","locations":[{"start":{"line":2072,"column":8},"end":{"line":2072,"column":8}},{"start":{"line":2072,"column":8},"end":{"line":2072,"column":8}}]},"401":{"line":2077,"type":"if","locations":[{"start":{"line":2077,"column":8},"end":{"line":2077,"column":8}},{"start":{"line":2077,"column":8},"end":{"line":2077,"column":8}}]},"402":{"line":2078,"type":"if","locations":[{"start":{"line":2078,"column":8},"end":{"line":2078,"column":8}},{"start":{"line":2078,"column":8},"end":{"line":2078,"column":8}}]},"403":{"line":2079,"type":"if","locations":[{"start":{"line":2079,"column":8},"end":{"line":2079,"column":8}},{"start":{"line":2079,"column":8},"end":{"line":2079,"column":8}}]},"404":{"line":2080,"type":"if","locations":[{"start":{"line":2080,"column":12},"end":{"line":2080,"column":12}},{"start":{"line":2080,"column":12},"end":{"line":2080,"column":12}}]},"405":{"line":2080,"type":"binary-expr","locations":[{"start":{"line":2080,"column":16},"end":{"line":2080,"column":42}},{"start":{"line":2080,"column":46},"end":{"line":2080,"column":62}}]},"406":{"line":2083,"type":"if","locations":[{"start":{"line":2083,"column":12},"end":{"line":2083,"column":12}},{"start":{"line":2083,"column":12},"end":{"line":2083,"column":12}}]},"407":{"line":2083,"type":"binary-expr","locations":[{"start":{"line":2083,"column":16},"end":{"line":2083,"column":42}},{"start":{"line":2083,"column":46},"end":{"line":2083,"column":62}}]},"408":{"line":2086,"type":"if","locations":[{"start":{"line":2086,"column":12},"end":{"line":2086,"column":12}},{"start":{"line":2086,"column":12},"end":{"line":2086,"column":12}}]},"409":{"line":2086,"type":"binary-expr","locations":[{"start":{"line":2086,"column":16},"end":{"line":2086,"column":26}},{"start":{"line":2086,"column":30},"end":{"line":2086,"column":61}}]},"410":{"line":2093,"type":"if","locations":[{"start":{"line":2093,"column":8},"end":{"line":2093,"column":8}},{"start":{"line":2093,"column":8},"end":{"line":2093,"column":8}}]},"411":{"line":2096,"type":"cond-expr","locations":[{"start":{"line":2096,"column":59},"end":{"line":2096,"column":80}},{"start":{"line":2096,"column":83},"end":{"line":2096,"column":87}}]},"412":{"line":2096,"type":"binary-expr","locations":[{"start":{"line":2096,"column":23},"end":{"line":2096,"column":33}},{"start":{"line":2096,"column":37},"end":{"line":2096,"column":56}}]},"413":{"line":2100,"type":"if","locations":[{"start":{"line":2100,"column":12},"end":{"line":2100,"column":12}},{"start":{"line":2100,"column":12},"end":{"line":2100,"column":12}}]},"414":{"line":2102,"type":"if","locations":[{"start":{"line":2102,"column":12},"end":{"line":2102,"column":12}},{"start":{"line":2102,"column":12},"end":{"line":2102,"column":12}}]},"415":{"line":2111,"type":"if","locations":[{"start":{"line":2111,"column":15},"end":{"line":2111,"column":15}},{"start":{"line":2111,"column":15},"end":{"line":2111,"column":15}}]},"416":{"line":2112,"type":"if","locations":[{"start":{"line":2112,"column":12},"end":{"line":2112,"column":12}},{"start":{"line":2112,"column":12},"end":{"line":2112,"column":12}}]},"417":{"line":2113,"type":"if","locations":[{"start":{"line":2113,"column":16},"end":{"line":2113,"column":16}},{"start":{"line":2113,"column":16},"end":{"line":2113,"column":16}}]},"418":{"line":2113,"type":"binary-expr","locations":[{"start":{"line":2113,"column":20},"end":{"line":2113,"column":46}},{"start":{"line":2113,"column":50},"end":{"line":2113,"column":66}}]},"419":{"line":2116,"type":"if","locations":[{"start":{"line":2116,"column":16},"end":{"line":2116,"column":16}},{"start":{"line":2116,"column":16},"end":{"line":2116,"column":16}}]},"420":{"line":2116,"type":"binary-expr","locations":[{"start":{"line":2116,"column":20},"end":{"line":2116,"column":30}},{"start":{"line":2116,"column":34},"end":{"line":2116,"column":70}}]},"421":{"line":2120,"type":"if","locations":[{"start":{"line":2120,"column":12},"end":{"line":2120,"column":12}},{"start":{"line":2120,"column":12},"end":{"line":2120,"column":12}}]},"422":{"line":2160,"type":"if","locations":[{"start":{"line":2160,"column":8},"end":{"line":2160,"column":8}},{"start":{"line":2160,"column":8},"end":{"line":2160,"column":8}}]},"423":{"line":2161,"type":"if","locations":[{"start":{"line":2161,"column":8},"end":{"line":2161,"column":8}},{"start":{"line":2161,"column":8},"end":{"line":2161,"column":8}}]},"424":{"line":2162,"type":"if","locations":[{"start":{"line":2162,"column":12},"end":{"line":2162,"column":12}},{"start":{"line":2162,"column":12},"end":{"line":2162,"column":12}}]},"425":{"line":2164,"type":"if","locations":[{"start":{"line":2164,"column":12},"end":{"line":2164,"column":12}},{"start":{"line":2164,"column":12},"end":{"line":2164,"column":12}}]},"426":{"line":2164,"type":"binary-expr","locations":[{"start":{"line":2164,"column":16},"end":{"line":2164,"column":42}},{"start":{"line":2164,"column":46},"end":{"line":2164,"column":62}}]},"427":{"line":2167,"type":"if","locations":[{"start":{"line":2167,"column":12},"end":{"line":2167,"column":12}},{"start":{"line":2167,"column":12},"end":{"line":2167,"column":12}}]},"428":{"line":2167,"type":"binary-expr","locations":[{"start":{"line":2167,"column":16},"end":{"line":2167,"column":26}},{"start":{"line":2167,"column":30},"end":{"line":2167,"column":61}}]},"429":{"line":2176,"type":"if","locations":[{"start":{"line":2176,"column":8},"end":{"line":2176,"column":8}},{"start":{"line":2176,"column":8},"end":{"line":2176,"column":8}}]},"430":{"line":2177,"type":"cond-expr","locations":[{"start":{"line":2177,"column":53},"end":{"line":2177,"column":63}},{"start":{"line":2177,"column":66},"end":{"line":2177,"column":72}}]},"431":{"line":2181,"type":"if","locations":[{"start":{"line":2181,"column":8},"end":{"line":2181,"column":8}},{"start":{"line":2181,"column":8},"end":{"line":2181,"column":8}}]},"432":{"line":2199,"type":"if","locations":[{"start":{"line":2199,"column":8},"end":{"line":2199,"column":8}},{"start":{"line":2199,"column":8},"end":{"line":2199,"column":8}}]},"433":{"line":2200,"type":"if","locations":[{"start":{"line":2200,"column":8},"end":{"line":2200,"column":8}},{"start":{"line":2200,"column":8},"end":{"line":2200,"column":8}}]},"434":{"line":2201,"type":"if","locations":[{"start":{"line":2201,"column":12},"end":{"line":2201,"column":12}},{"start":{"line":2201,"column":12},"end":{"line":2201,"column":12}}]},"435":{"line":2201,"type":"binary-expr","locations":[{"start":{"line":2201,"column":16},"end":{"line":2201,"column":42}},{"start":{"line":2201,"column":46},"end":{"line":2201,"column":62}}]},"436":{"line":2204,"type":"if","locations":[{"start":{"line":2204,"column":12},"end":{"line":2204,"column":12}},{"start":{"line":2204,"column":12},"end":{"line":2204,"column":12}}]},"437":{"line":2204,"type":"binary-expr","locations":[{"start":{"line":2204,"column":16},"end":{"line":2204,"column":26}},{"start":{"line":2204,"column":30},"end":{"line":2204,"column":61}}]},"438":{"line":2211,"type":"if","locations":[{"start":{"line":2211,"column":8},"end":{"line":2211,"column":8}},{"start":{"line":2211,"column":8},"end":{"line":2211,"column":8}}]},"439":{"line":2237,"type":"if","locations":[{"start":{"line":2237,"column":8},"end":{"line":2237,"column":8}},{"start":{"line":2237,"column":8},"end":{"line":2237,"column":8}}]},"440":{"line":2237,"type":"binary-expr","locations":[{"start":{"line":2237,"column":12},"end":{"line":2237,"column":40}},{"start":{"line":2237,"column":44},"end":{"line":2237,"column":72}}]},"441":{"line":2242,"type":"if","locations":[{"start":{"line":2242,"column":8},"end":{"line":2242,"column":8}},{"start":{"line":2242,"column":8},"end":{"line":2242,"column":8}}]},"442":{"line":2243,"type":"if","locations":[{"start":{"line":2243,"column":8},"end":{"line":2243,"column":8}},{"start":{"line":2243,"column":8},"end":{"line":2243,"column":8}}]},"443":{"line":2244,"type":"if","locations":[{"start":{"line":2244,"column":12},"end":{"line":2244,"column":12}},{"start":{"line":2244,"column":12},"end":{"line":2244,"column":12}}]},"444":{"line":2244,"type":"binary-expr","locations":[{"start":{"line":2244,"column":16},"end":{"line":2244,"column":42}},{"start":{"line":2244,"column":46},"end":{"line":2244,"column":62}}]},"445":{"line":2247,"type":"if","locations":[{"start":{"line":2247,"column":12},"end":{"line":2247,"column":12}},{"start":{"line":2247,"column":12},"end":{"line":2247,"column":12}}]},"446":{"line":2247,"type":"binary-expr","locations":[{"start":{"line":2247,"column":16},"end":{"line":2247,"column":26}},{"start":{"line":2247,"column":30},"end":{"line":2247,"column":61}}]},"447":{"line":2250,"type":"if","locations":[{"start":{"line":2250,"column":8},"end":{"line":2250,"column":8}},{"start":{"line":2250,"column":8},"end":{"line":2250,"column":8}}]},"448":{"line":2253,"type":"if","locations":[{"start":{"line":2253,"column":8},"end":{"line":2253,"column":8}},{"start":{"line":2253,"column":8},"end":{"line":2253,"column":8}}]},"449":{"line":2256,"type":"if","locations":[{"start":{"line":2256,"column":8},"end":{"line":2256,"column":8}},{"start":{"line":2256,"column":8},"end":{"line":2256,"column":8}}]},"450":{"line":2257,"type":"cond-expr","locations":[{"start":{"line":2257,"column":53},"end":{"line":2257,"column":63}},{"start":{"line":2257,"column":66},"end":{"line":2257,"column":72}}]},"451":{"line":2261,"type":"if","locations":[{"start":{"line":2261,"column":8},"end":{"line":2261,"column":8}},{"start":{"line":2261,"column":8},"end":{"line":2261,"column":8}}]},"452":{"line":2322,"type":"if","locations":[{"start":{"line":2322,"column":8},"end":{"line":2322,"column":8}},{"start":{"line":2322,"column":8},"end":{"line":2322,"column":8}}]},"453":{"line":2345,"type":"if","locations":[{"start":{"line":2345,"column":8},"end":{"line":2345,"column":8}},{"start":{"line":2345,"column":8},"end":{"line":2345,"column":8}}]},"454":{"line":2346,"type":"if","locations":[{"start":{"line":2346,"column":8},"end":{"line":2346,"column":8}},{"start":{"line":2346,"column":8},"end":{"line":2346,"column":8}}]},"455":{"line":2347,"type":"if","locations":[{"start":{"line":2347,"column":8},"end":{"line":2347,"column":8}},{"start":{"line":2347,"column":8},"end":{"line":2347,"column":8}}]},"456":{"line":2348,"type":"if","locations":[{"start":{"line":2348,"column":12},"end":{"line":2348,"column":12}},{"start":{"line":2348,"column":12},"end":{"line":2348,"column":12}}]},"457":{"line":2348,"type":"binary-expr","locations":[{"start":{"line":2348,"column":16},"end":{"line":2348,"column":41}},{"start":{"line":2348,"column":45},"end":{"line":2348,"column":60}}]},"458":{"line":2351,"type":"if","locations":[{"start":{"line":2351,"column":12},"end":{"line":2351,"column":12}},{"start":{"line":2351,"column":12},"end":{"line":2351,"column":12}}]},"459":{"line":2351,"type":"binary-expr","locations":[{"start":{"line":2351,"column":16},"end":{"line":2351,"column":39}},{"start":{"line":2351,"column":43},"end":{"line":2351,"column":56}}]},"460":{"line":2354,"type":"if","locations":[{"start":{"line":2354,"column":12},"end":{"line":2354,"column":12}},{"start":{"line":2354,"column":12},"end":{"line":2354,"column":12}}]},"461":{"line":2354,"type":"binary-expr","locations":[{"start":{"line":2354,"column":16},"end":{"line":2354,"column":25}},{"start":{"line":2354,"column":29},"end":{"line":2354,"column":40}},{"start":{"line":2354,"column":44},"end":{"line":2354,"column":68}}]},"462":{"line":2357,"type":"if","locations":[{"start":{"line":2357,"column":8},"end":{"line":2357,"column":8}},{"start":{"line":2357,"column":8},"end":{"line":2357,"column":8}}]},"463":{"line":2357,"type":"binary-expr","locations":[{"start":{"line":2357,"column":12},"end":{"line":2357,"column":23}},{"start":{"line":2357,"column":27},"end":{"line":2357,"column":53}}]},"464":{"line":2360,"type":"if","locations":[{"start":{"line":2360,"column":8},"end":{"line":2360,"column":8}},{"start":{"line":2360,"column":8},"end":{"line":2360,"column":8}}]},"465":{"line":2362,"type":"if","locations":[{"start":{"line":2362,"column":12},"end":{"line":2362,"column":12}},{"start":{"line":2362,"column":12},"end":{"line":2362,"column":12}}]},"466":{"line":2370,"type":"if","locations":[{"start":{"line":2370,"column":8},"end":{"line":2370,"column":8}},{"start":{"line":2370,"column":8},"end":{"line":2370,"column":8}}]},"467":{"line":2385,"type":"if","locations":[{"start":{"line":2385,"column":8},"end":{"line":2385,"column":8}},{"start":{"line":2385,"column":8},"end":{"line":2385,"column":8}}]},"468":{"line":2386,"type":"if","locations":[{"start":{"line":2386,"column":8},"end":{"line":2386,"column":8}},{"start":{"line":2386,"column":8},"end":{"line":2386,"column":8}}]},"469":{"line":2387,"type":"if","locations":[{"start":{"line":2387,"column":8},"end":{"line":2387,"column":8}},{"start":{"line":2387,"column":8},"end":{"line":2387,"column":8}}]},"470":{"line":2388,"type":"if","locations":[{"start":{"line":2388,"column":12},"end":{"line":2388,"column":12}},{"start":{"line":2388,"column":12},"end":{"line":2388,"column":12}}]},"471":{"line":2388,"type":"binary-expr","locations":[{"start":{"line":2388,"column":16},"end":{"line":2388,"column":41}},{"start":{"line":2388,"column":45},"end":{"line":2388,"column":60}}]},"472":{"line":2391,"type":"if","locations":[{"start":{"line":2391,"column":12},"end":{"line":2391,"column":12}},{"start":{"line":2391,"column":12},"end":{"line":2391,"column":12}}]},"473":{"line":2391,"type":"binary-expr","locations":[{"start":{"line":2391,"column":16},"end":{"line":2391,"column":39}},{"start":{"line":2391,"column":43},"end":{"line":2391,"column":56}}]},"474":{"line":2394,"type":"if","locations":[{"start":{"line":2394,"column":12},"end":{"line":2394,"column":12}},{"start":{"line":2394,"column":12},"end":{"line":2394,"column":12}}]},"475":{"line":2394,"type":"binary-expr","locations":[{"start":{"line":2394,"column":16},"end":{"line":2394,"column":25}},{"start":{"line":2394,"column":29},"end":{"line":2394,"column":40}},{"start":{"line":2394,"column":44},"end":{"line":2394,"column":68}}]},"476":{"line":2397,"type":"if","locations":[{"start":{"line":2397,"column":8},"end":{"line":2397,"column":8}},{"start":{"line":2397,"column":8},"end":{"line":2397,"column":8}}]},"477":{"line":2403,"type":"if","locations":[{"start":{"line":2403,"column":8},"end":{"line":2403,"column":8}},{"start":{"line":2403,"column":8},"end":{"line":2403,"column":8}}]},"478":{"line":2423,"type":"if","locations":[{"start":{"line":2423,"column":8},"end":{"line":2423,"column":8}},{"start":{"line":2423,"column":8},"end":{"line":2423,"column":8}}]},"479":{"line":2424,"type":"if","locations":[{"start":{"line":2424,"column":12},"end":{"line":2424,"column":12}},{"start":{"line":2424,"column":12},"end":{"line":2424,"column":12}}]},"480":{"line":2427,"type":"cond-expr","locations":[{"start":{"line":2427,"column":80},"end":{"line":2427,"column":93}},{"start":{"line":2427,"column":96},"end":{"line":2427,"column":112}}]},"481":{"line":2428,"type":"cond-expr","locations":[{"start":{"line":2428,"column":74},"end":{"line":2428,"column":85}},{"start":{"line":2428,"column":88},"end":{"line":2428,"column":104}}]},"482":{"line":2429,"type":"cond-expr","locations":[{"start":{"line":2429,"column":59},"end":{"line":2429,"column":69}},{"start":{"line":2429,"column":72},"end":{"line":2429,"column":87}}]},"483":{"line":2431,"type":"if","locations":[{"start":{"line":2431,"column":8},"end":{"line":2431,"column":8}},{"start":{"line":2431,"column":8},"end":{"line":2431,"column":8}}]},"484":{"line":2431,"type":"binary-expr","locations":[{"start":{"line":2431,"column":12},"end":{"line":2431,"column":28}},{"start":{"line":2431,"column":32},"end":{"line":2431,"column":67}}]},"485":{"line":2433,"type":"if","locations":[{"start":{"line":2433,"column":8},"end":{"line":2433,"column":8}},{"start":{"line":2433,"column":8},"end":{"line":2433,"column":8}}]},"486":{"line":2433,"type":"binary-expr","locations":[{"start":{"line":2433,"column":12},"end":{"line":2433,"column":28}},{"start":{"line":2433,"column":32},"end":{"line":2433,"column":64}}]},"487":{"line":2437,"type":"if","locations":[{"start":{"line":2437,"column":8},"end":{"line":2437,"column":8}},{"start":{"line":2437,"column":8},"end":{"line":2437,"column":8}}]},"488":{"line":2444,"type":"if","locations":[{"start":{"line":2444,"column":8},"end":{"line":2444,"column":8}},{"start":{"line":2444,"column":8},"end":{"line":2444,"column":8}}]},"489":{"line":2445,"type":"if","locations":[{"start":{"line":2445,"column":8},"end":{"line":2445,"column":8}},{"start":{"line":2445,"column":8},"end":{"line":2445,"column":8}}]},"490":{"line":2460,"type":"if","locations":[{"start":{"line":2460,"column":8},"end":{"line":2460,"column":8}},{"start":{"line":2460,"column":8},"end":{"line":2460,"column":8}}]},"491":{"line":2461,"type":"cond-expr","locations":[{"start":{"line":2461,"column":59},"end":{"line":2461,"column":66}},{"start":{"line":2461,"column":69},"end":{"line":2461,"column":77}}]},"492":{"line":2478,"type":"if","locations":[{"start":{"line":2478,"column":8},"end":{"line":2478,"column":8}},{"start":{"line":2478,"column":8},"end":{"line":2478,"column":8}}]},"493":{"line":2479,"type":"if","locations":[{"start":{"line":2479,"column":8},"end":{"line":2479,"column":8}},{"start":{"line":2479,"column":8},"end":{"line":2479,"column":8}}]},"494":{"line":2479,"type":"binary-expr","locations":[{"start":{"line":2479,"column":12},"end":{"line":2479,"column":37}},{"start":{"line":2479,"column":41},"end":{"line":2479,"column":57}}]},"495":{"line":2481,"type":"if","locations":[{"start":{"line":2481,"column":8},"end":{"line":2481,"column":8}},{"start":{"line":2481,"column":8},"end":{"line":2481,"column":8}}]},"496":{"line":2482,"type":"if","locations":[{"start":{"line":2482,"column":8},"end":{"line":2482,"column":8}},{"start":{"line":2482,"column":8},"end":{"line":2482,"column":8}}]},"497":{"line":2483,"type":"if","locations":[{"start":{"line":2483,"column":8},"end":{"line":2483,"column":8}},{"start":{"line":2483,"column":8},"end":{"line":2483,"column":8}}]},"498":{"line":2484,"type":"if","locations":[{"start":{"line":2484,"column":12},"end":{"line":2484,"column":12}},{"start":{"line":2484,"column":12},"end":{"line":2484,"column":12}}]},"499":{"line":2484,"type":"binary-expr","locations":[{"start":{"line":2484,"column":16},"end":{"line":2484,"column":41}},{"start":{"line":2484,"column":45},"end":{"line":2484,"column":60}}]},"500":{"line":2487,"type":"if","locations":[{"start":{"line":2487,"column":12},"end":{"line":2487,"column":12}},{"start":{"line":2487,"column":12},"end":{"line":2487,"column":12}}]},"501":{"line":2487,"type":"binary-expr","locations":[{"start":{"line":2487,"column":16},"end":{"line":2487,"column":41}},{"start":{"line":2487,"column":45},"end":{"line":2487,"column":60}}]},"502":{"line":2490,"type":"if","locations":[{"start":{"line":2490,"column":12},"end":{"line":2490,"column":12}},{"start":{"line":2490,"column":12},"end":{"line":2490,"column":12}}]},"503":{"line":2490,"type":"binary-expr","locations":[{"start":{"line":2490,"column":16},"end":{"line":2490,"column":39}},{"start":{"line":2490,"column":43},"end":{"line":2490,"column":56}}]},"504":{"line":2493,"type":"if","locations":[{"start":{"line":2493,"column":12},"end":{"line":2493,"column":12}},{"start":{"line":2493,"column":12},"end":{"line":2493,"column":12}}]},"505":{"line":2493,"type":"binary-expr","locations":[{"start":{"line":2493,"column":16},"end":{"line":2493,"column":25}},{"start":{"line":2493,"column":29},"end":{"line":2493,"column":40}},{"start":{"line":2493,"column":44},"end":{"line":2493,"column":68}}]},"506":{"line":2496,"type":"if","locations":[{"start":{"line":2496,"column":8},"end":{"line":2496,"column":8}},{"start":{"line":2496,"column":8},"end":{"line":2496,"column":8}}]},"507":{"line":2500,"type":"if","locations":[{"start":{"line":2500,"column":8},"end":{"line":2500,"column":8}},{"start":{"line":2500,"column":8},"end":{"line":2500,"column":8}}]},"508":{"line":2525,"type":"cond-expr","locations":[{"start":{"line":2525,"column":49},"end":{"line":2525,"column":60}},{"start":{"line":2525,"column":63},"end":{"line":2525,"column":69}}]},"509":{"line":2526,"type":"if","locations":[{"start":{"line":2526,"column":8},"end":{"line":2526,"column":8}},{"start":{"line":2526,"column":8},"end":{"line":2526,"column":8}}]},"510":{"line":2527,"type":"if","locations":[{"start":{"line":2527,"column":12},"end":{"line":2527,"column":12}},{"start":{"line":2527,"column":12},"end":{"line":2527,"column":12}}]},"511":{"line":2527,"type":"binary-expr","locations":[{"start":{"line":2527,"column":16},"end":{"line":2527,"column":42}},{"start":{"line":2527,"column":46},"end":{"line":2527,"column":62}}]},"512":{"line":2530,"type":"if","locations":[{"start":{"line":2530,"column":12},"end":{"line":2530,"column":12}},{"start":{"line":2530,"column":12},"end":{"line":2530,"column":12}}]},"513":{"line":2530,"type":"binary-expr","locations":[{"start":{"line":2530,"column":16},"end":{"line":2530,"column":26}},{"start":{"line":2530,"column":30},"end":{"line":2530,"column":61}}]},"514":{"line":2543,"type":"if","locations":[{"start":{"line":2543,"column":8},"end":{"line":2543,"column":8}},{"start":{"line":2543,"column":8},"end":{"line":2543,"column":8}}]},"515":{"line":2544,"type":"if","locations":[{"start":{"line":2544,"column":12},"end":{"line":2544,"column":12}},{"start":{"line":2544,"column":12},"end":{"line":2544,"column":12}}]},"516":{"line":2558,"type":"cond-expr","locations":[{"start":{"line":2558,"column":66},"end":{"line":2558,"column":80}},{"start":{"line":2558,"column":83},"end":{"line":2558,"column":87}}]},"517":{"line":2569,"type":"cond-expr","locations":[{"start":{"line":2569,"column":63},"end":{"line":2569,"column":73}},{"start":{"line":2569,"column":76},"end":{"line":2569,"column":81}}]},"518":{"line":2587,"type":"if","locations":[{"start":{"line":2587,"column":8},"end":{"line":2587,"column":8}},{"start":{"line":2587,"column":8},"end":{"line":2587,"column":8}}]},"519":{"line":2587,"type":"binary-expr","locations":[{"start":{"line":2587,"column":12},"end":{"line":2587,"column":40}},{"start":{"line":2587,"column":44},"end":{"line":2587,"column":72}}]},"520":{"line":2592,"type":"if","locations":[{"start":{"line":2592,"column":8},"end":{"line":2592,"column":8}},{"start":{"line":2592,"column":8},"end":{"line":2592,"column":8}}]},"521":{"line":2593,"type":"if","locations":[{"start":{"line":2593,"column":8},"end":{"line":2593,"column":8}},{"start":{"line":2593,"column":8},"end":{"line":2593,"column":8}}]},"522":{"line":2594,"type":"if","locations":[{"start":{"line":2594,"column":12},"end":{"line":2594,"column":12}},{"start":{"line":2594,"column":12},"end":{"line":2594,"column":12}}]},"523":{"line":2594,"type":"binary-expr","locations":[{"start":{"line":2594,"column":16},"end":{"line":2594,"column":42}},{"start":{"line":2594,"column":46},"end":{"line":2594,"column":62}}]},"524":{"line":2597,"type":"if","locations":[{"start":{"line":2597,"column":12},"end":{"line":2597,"column":12}},{"start":{"line":2597,"column":12},"end":{"line":2597,"column":12}}]},"525":{"line":2597,"type":"binary-expr","locations":[{"start":{"line":2597,"column":16},"end":{"line":2597,"column":26}},{"start":{"line":2597,"column":30},"end":{"line":2597,"column":61}}]},"526":{"line":2600,"type":"if","locations":[{"start":{"line":2600,"column":8},"end":{"line":2600,"column":8}},{"start":{"line":2600,"column":8},"end":{"line":2600,"column":8}}]},"527":{"line":2603,"type":"if","locations":[{"start":{"line":2603,"column":8},"end":{"line":2603,"column":8}},{"start":{"line":2603,"column":8},"end":{"line":2603,"column":8}}]},"528":{"line":2605,"type":"if","locations":[{"start":{"line":2605,"column":8},"end":{"line":2605,"column":8}},{"start":{"line":2605,"column":8},"end":{"line":2605,"column":8}}]},"529":{"line":2610,"type":"if","locations":[{"start":{"line":2610,"column":12},"end":{"line":2610,"column":12}},{"start":{"line":2610,"column":12},"end":{"line":2610,"column":12}}]},"530":{"line":2616,"type":"if","locations":[{"start":{"line":2616,"column":8},"end":{"line":2616,"column":8}},{"start":{"line":2616,"column":8},"end":{"line":2616,"column":8}}]},"531":{"line":2642,"type":"if","locations":[{"start":{"line":2642,"column":8},"end":{"line":2642,"column":8}},{"start":{"line":2642,"column":8},"end":{"line":2642,"column":8}}]},"532":{"line":2668,"type":"if","locations":[{"start":{"line":2668,"column":8},"end":{"line":2668,"column":8}},{"start":{"line":2668,"column":8},"end":{"line":2668,"column":8}}]},"533":{"line":2686,"type":"if","locations":[{"start":{"line":2686,"column":8},"end":{"line":2686,"column":8}},{"start":{"line":2686,"column":8},"end":{"line":2686,"column":8}}]},"534":{"line":2687,"type":"if","locations":[{"start":{"line":2687,"column":12},"end":{"line":2687,"column":12}},{"start":{"line":2687,"column":12},"end":{"line":2687,"column":12}}]},"535":{"line":2687,"type":"binary-expr","locations":[{"start":{"line":2687,"column":16},"end":{"line":2687,"column":44}},{"start":{"line":2687,"column":48},"end":{"line":2687,"column":66}}]},"536":{"line":2690,"type":"if","locations":[{"start":{"line":2690,"column":12},"end":{"line":2690,"column":12}},{"start":{"line":2690,"column":12},"end":{"line":2690,"column":12}}]},"537":{"line":2693,"type":"if","locations":[{"start":{"line":2693,"column":8},"end":{"line":2693,"column":8}},{"start":{"line":2693,"column":8},"end":{"line":2693,"column":8}}]},"538":{"line":2708,"type":"if","locations":[{"start":{"line":2708,"column":8},"end":{"line":2708,"column":8}},{"start":{"line":2708,"column":8},"end":{"line":2708,"column":8}}]},"539":{"line":2709,"type":"if","locations":[{"start":{"line":2709,"column":8},"end":{"line":2709,"column":8}},{"start":{"line":2709,"column":8},"end":{"line":2709,"column":8}}]},"540":{"line":2710,"type":"if","locations":[{"start":{"line":2710,"column":8},"end":{"line":2710,"column":8}},{"start":{"line":2710,"column":8},"end":{"line":2710,"column":8}}]},"541":{"line":2711,"type":"if","locations":[{"start":{"line":2711,"column":12},"end":{"line":2711,"column":12}},{"start":{"line":2711,"column":12},"end":{"line":2711,"column":12}}]},"542":{"line":2711,"type":"binary-expr","locations":[{"start":{"line":2711,"column":16},"end":{"line":2711,"column":41}},{"start":{"line":2711,"column":45},"end":{"line":2711,"column":60}}]},"543":{"line":2714,"type":"if","locations":[{"start":{"line":2714,"column":12},"end":{"line":2714,"column":12}},{"start":{"line":2714,"column":12},"end":{"line":2714,"column":12}}]},"544":{"line":2714,"type":"binary-expr","locations":[{"start":{"line":2714,"column":16},"end":{"line":2714,"column":39}},{"start":{"line":2714,"column":43},"end":{"line":2714,"column":56}}]},"545":{"line":2717,"type":"if","locations":[{"start":{"line":2717,"column":12},"end":{"line":2717,"column":12}},{"start":{"line":2717,"column":12},"end":{"line":2717,"column":12}}]},"546":{"line":2717,"type":"binary-expr","locations":[{"start":{"line":2717,"column":16},"end":{"line":2717,"column":25}},{"start":{"line":2717,"column":29},"end":{"line":2717,"column":40}},{"start":{"line":2717,"column":44},"end":{"line":2717,"column":68}}]},"547":{"line":2720,"type":"if","locations":[{"start":{"line":2720,"column":8},"end":{"line":2720,"column":8}},{"start":{"line":2720,"column":8},"end":{"line":2720,"column":8}}]},"548":{"line":2732,"type":"if","locations":[{"start":{"line":2732,"column":8},"end":{"line":2732,"column":8}},{"start":{"line":2732,"column":8},"end":{"line":2732,"column":8}}]},"549":{"line":2733,"type":"if","locations":[{"start":{"line":2733,"column":12},"end":{"line":2733,"column":12}},{"start":{"line":2733,"column":12},"end":{"line":2733,"column":12}}]},"550":{"line":2733,"type":"binary-expr","locations":[{"start":{"line":2733,"column":16},"end":{"line":2733,"column":42}},{"start":{"line":2733,"column":46},"end":{"line":2733,"column":62}}]},"551":{"line":2738,"type":"if","locations":[{"start":{"line":2738,"column":8},"end":{"line":2738,"column":8}},{"start":{"line":2738,"column":8},"end":{"line":2738,"column":8}}]},"552":{"line":2739,"type":"if","locations":[{"start":{"line":2739,"column":12},"end":{"line":2739,"column":12}},{"start":{"line":2739,"column":12},"end":{"line":2739,"column":12}}]},"553":{"line":2739,"type":"binary-expr","locations":[{"start":{"line":2739,"column":16},"end":{"line":2739,"column":26}},{"start":{"line":2739,"column":30},"end":{"line":2739,"column":57}}]},"554":{"line":2754,"type":"if","locations":[{"start":{"line":2754,"column":8},"end":{"line":2754,"column":8}},{"start":{"line":2754,"column":8},"end":{"line":2754,"column":8}}]},"555":{"line":2755,"type":"if","locations":[{"start":{"line":2755,"column":8},"end":{"line":2755,"column":8}},{"start":{"line":2755,"column":8},"end":{"line":2755,"column":8}}]},"556":{"line":2756,"type":"if","locations":[{"start":{"line":2756,"column":8},"end":{"line":2756,"column":8}},{"start":{"line":2756,"column":8},"end":{"line":2756,"column":8}}]},"557":{"line":2757,"type":"if","locations":[{"start":{"line":2757,"column":12},"end":{"line":2757,"column":12}},{"start":{"line":2757,"column":12},"end":{"line":2757,"column":12}}]},"558":{"line":2757,"type":"binary-expr","locations":[{"start":{"line":2757,"column":16},"end":{"line":2757,"column":41}},{"start":{"line":2757,"column":45},"end":{"line":2757,"column":60}}]},"559":{"line":2760,"type":"if","locations":[{"start":{"line":2760,"column":12},"end":{"line":2760,"column":12}},{"start":{"line":2760,"column":12},"end":{"line":2760,"column":12}}]},"560":{"line":2760,"type":"binary-expr","locations":[{"start":{"line":2760,"column":16},"end":{"line":2760,"column":39}},{"start":{"line":2760,"column":43},"end":{"line":2760,"column":56}}]},"561":{"line":2763,"type":"if","locations":[{"start":{"line":2763,"column":12},"end":{"line":2763,"column":12}},{"start":{"line":2763,"column":12},"end":{"line":2763,"column":12}}]},"562":{"line":2763,"type":"binary-expr","locations":[{"start":{"line":2763,"column":16},"end":{"line":2763,"column":25}},{"start":{"line":2763,"column":29},"end":{"line":2763,"column":40}},{"start":{"line":2763,"column":44},"end":{"line":2763,"column":68}}]},"563":{"line":2782,"type":"if","locations":[{"start":{"line":2782,"column":8},"end":{"line":2782,"column":8}},{"start":{"line":2782,"column":8},"end":{"line":2782,"column":8}}]},"564":{"line":2783,"type":"if","locations":[{"start":{"line":2783,"column":12},"end":{"line":2783,"column":12}},{"start":{"line":2783,"column":12},"end":{"line":2783,"column":12}}]},"565":{"line":2783,"type":"binary-expr","locations":[{"start":{"line":2783,"column":16},"end":{"line":2783,"column":42}},{"start":{"line":2783,"column":46},"end":{"line":2783,"column":62}}]},"566":{"line":2786,"type":"if","locations":[{"start":{"line":2786,"column":12},"end":{"line":2786,"column":12}},{"start":{"line":2786,"column":12},"end":{"line":2786,"column":12}}]},"567":{"line":2786,"type":"binary-expr","locations":[{"start":{"line":2786,"column":16},"end":{"line":2786,"column":41}},{"start":{"line":2786,"column":45},"end":{"line":2786,"column":60}}]},"568":{"line":2789,"type":"if","locations":[{"start":{"line":2789,"column":12},"end":{"line":2789,"column":12}},{"start":{"line":2789,"column":12},"end":{"line":2789,"column":12}}]},"569":{"line":2789,"type":"binary-expr","locations":[{"start":{"line":2789,"column":16},"end":{"line":2789,"column":26}},{"start":{"line":2789,"column":30},"end":{"line":2789,"column":44}},{"start":{"line":2789,"column":48},"end":{"line":2789,"column":74}}]},"570":{"line":2792,"type":"if","locations":[{"start":{"line":2792,"column":8},"end":{"line":2792,"column":8}},{"start":{"line":2792,"column":8},"end":{"line":2792,"column":8}}]},"571":{"line":2797,"type":"if","locations":[{"start":{"line":2797,"column":12},"end":{"line":2797,"column":12}},{"start":{"line":2797,"column":12},"end":{"line":2797,"column":12}}]},"572":{"line":2797,"type":"binary-expr","locations":[{"start":{"line":2797,"column":16},"end":{"line":2797,"column":28}},{"start":{"line":2797,"column":32},"end":{"line":2797,"column":60}}]},"573":{"line":2812,"type":"if","locations":[{"start":{"line":2812,"column":8},"end":{"line":2812,"column":8}},{"start":{"line":2812,"column":8},"end":{"line":2812,"column":8}}]},"574":{"line":2813,"type":"if","locations":[{"start":{"line":2813,"column":12},"end":{"line":2813,"column":12}},{"start":{"line":2813,"column":12},"end":{"line":2813,"column":12}}]},"575":{"line":2813,"type":"binary-expr","locations":[{"start":{"line":2813,"column":16},"end":{"line":2813,"column":42}},{"start":{"line":2813,"column":46},"end":{"line":2813,"column":62}}]},"576":{"line":2816,"type":"if","locations":[{"start":{"line":2816,"column":12},"end":{"line":2816,"column":12}},{"start":{"line":2816,"column":12},"end":{"line":2816,"column":12}}]},"577":{"line":2816,"type":"binary-expr","locations":[{"start":{"line":2816,"column":16},"end":{"line":2816,"column":41}},{"start":{"line":2816,"column":45},"end":{"line":2816,"column":60}}]},"578":{"line":2819,"type":"if","locations":[{"start":{"line":2819,"column":12},"end":{"line":2819,"column":12}},{"start":{"line":2819,"column":12},"end":{"line":2819,"column":12}}]},"579":{"line":2819,"type":"binary-expr","locations":[{"start":{"line":2819,"column":16},"end":{"line":2819,"column":26}},{"start":{"line":2819,"column":30},"end":{"line":2819,"column":44}},{"start":{"line":2819,"column":48},"end":{"line":2819,"column":74}}]},"580":{"line":2823,"type":"if","locations":[{"start":{"line":2823,"column":8},"end":{"line":2823,"column":8}},{"start":{"line":2823,"column":8},"end":{"line":2823,"column":8}}]},"581":{"line":2845,"type":"if","locations":[{"start":{"line":2845,"column":8},"end":{"line":2845,"column":8}},{"start":{"line":2845,"column":8},"end":{"line":2845,"column":8}}]},"582":{"line":2847,"type":"if","locations":[{"start":{"line":2847,"column":8},"end":{"line":2847,"column":8}},{"start":{"line":2847,"column":8},"end":{"line":2847,"column":8}}]},"583":{"line":2851,"type":"switch","locations":[{"start":{"line":2852,"column":12},"end":{"line":2853,"column":47}},{"start":{"line":2854,"column":12},"end":{"line":2855,"column":49}},{"start":{"line":2856,"column":12},"end":{"line":2857,"column":46}},{"start":{"line":2858,"column":12},"end":{"line":2859,"column":49}},{"start":{"line":2860,"column":12},"end":{"line":2861,"column":38}},{"start":{"line":2862,"column":12},"end":{"line":2863,"column":40}},{"start":{"line":2864,"column":12},"end":{"line":2865,"column":63}}]},"584":{"line":2880,"type":"if","locations":[{"start":{"line":2880,"column":8},"end":{"line":2880,"column":8}},{"start":{"line":2880,"column":8},"end":{"line":2880,"column":8}}]},"585":{"line":2882,"type":"if","locations":[{"start":{"line":2882,"column":8},"end":{"line":2882,"column":8}},{"start":{"line":2882,"column":8},"end":{"line":2882,"column":8}}]},"586":{"line":2885,"type":"if","locations":[{"start":{"line":2885,"column":8},"end":{"line":2885,"column":8}},{"start":{"line":2885,"column":8},"end":{"line":2885,"column":8}}]},"587":{"line":2885,"type":"binary-expr","locations":[{"start":{"line":2885,"column":12},"end":{"line":2885,"column":21}},{"start":{"line":2885,"column":25},"end":{"line":2885,"column":44}},{"start":{"line":2885,"column":48},"end":{"line":2885,"column":59}}]},"588":{"line":2936,"type":"if","locations":[{"start":{"line":2936,"column":8},"end":{"line":2936,"column":8}},{"start":{"line":2936,"column":8},"end":{"line":2936,"column":8}}]},"589":{"line":2938,"type":"if","locations":[{"start":{"line":2938,"column":8},"end":{"line":2938,"column":8}},{"start":{"line":2938,"column":8},"end":{"line":2938,"column":8}}]},"590":{"line":2941,"type":"if","locations":[{"start":{"line":2941,"column":8},"end":{"line":2941,"column":8}},{"start":{"line":2941,"column":8},"end":{"line":2941,"column":8}}]},"591":{"line":2941,"type":"binary-expr","locations":[{"start":{"line":2941,"column":12},"end":{"line":2941,"column":21}},{"start":{"line":2941,"column":25},"end":{"line":2941,"column":46}},{"start":{"line":2941,"column":50},"end":{"line":2941,"column":61}}]},"592":{"line":2986,"type":"if","locations":[{"start":{"line":2986,"column":12},"end":{"line":2986,"column":12}},{"start":{"line":2986,"column":12},"end":{"line":2986,"column":12}}]},"593":{"line":2988,"type":"if","locations":[{"start":{"line":2988,"column":16},"end":{"line":2988,"column":16}},{"start":{"line":2988,"column":16},"end":{"line":2988,"column":16}}]},"594":{"line":2990,"type":"if","locations":[{"start":{"line":2990,"column":16},"end":{"line":2990,"column":16}},{"start":{"line":2990,"column":16},"end":{"line":2990,"column":16}}]},"595":{"line":2991,"type":"cond-expr","locations":[{"start":{"line":2991,"column":47},"end":{"line":2991,"column":69}},{"start":{"line":2991,"column":72},"end":{"line":2991,"column":75}}]},"596":{"line":2991,"type":"binary-expr","locations":[{"start":{"line":2991,"column":27},"end":{"line":2991,"column":33}},{"start":{"line":2991,"column":37},"end":{"line":2991,"column":44}}]},"597":{"line":2994,"type":"if","locations":[{"start":{"line":2994,"column":12},"end":{"line":2994,"column":12}},{"start":{"line":2994,"column":12},"end":{"line":2994,"column":12}}]},"598":{"line":2995,"type":"if","locations":[{"start":{"line":2995,"column":16},"end":{"line":2995,"column":16}},{"start":{"line":2995,"column":16},"end":{"line":2995,"column":16}}]},"599":{"line":2995,"type":"binary-expr","locations":[{"start":{"line":2995,"column":20},"end":{"line":2995,"column":25}},{"start":{"line":2995,"column":29},"end":{"line":2995,"column":41}},{"start":{"line":2995,"column":45},"end":{"line":2995,"column":52}}]},"600":{"line":3001,"type":"if","locations":[{"start":{"line":3001,"column":12},"end":{"line":3001,"column":12}},{"start":{"line":3001,"column":12},"end":{"line":3001,"column":12}}]},"601":{"line":3001,"type":"binary-expr","locations":[{"start":{"line":3001,"column":16},"end":{"line":3001,"column":33}},{"start":{"line":3001,"column":37},"end":{"line":3001,"column":53}}]},"602":{"line":3002,"type":"cond-expr","locations":[{"start":{"line":3002,"column":49},"end":{"line":3002,"column":52}},{"start":{"line":3002,"column":55},"end":{"line":3002,"column":58}}]},"603":{"line":3003,"type":"if","locations":[{"start":{"line":3003,"column":17},"end":{"line":3003,"column":17}},{"start":{"line":3003,"column":17},"end":{"line":3003,"column":17}}]},"604":{"line":3004,"type":"cond-expr","locations":[{"start":{"line":3004,"column":49},"end":{"line":3004,"column":52}},{"start":{"line":3004,"column":55},"end":{"line":3004,"column":58}}]},"605":{"line":3005,"type":"if","locations":[{"start":{"line":3005,"column":17},"end":{"line":3005,"column":17}},{"start":{"line":3005,"column":17},"end":{"line":3005,"column":17}}]},"606":{"line":3006,"type":"cond-expr","locations":[{"start":{"line":3006,"column":49},"end":{"line":3006,"column":52}},{"start":{"line":3006,"column":55},"end":{"line":3006,"column":58}}]},"607":{"line":3008,"type":"cond-expr","locations":[{"start":{"line":3008,"column":49},"end":{"line":3008,"column":52}},{"start":{"line":3008,"column":56},"end":{"line":3008,"column":98}}]},"608":{"line":3008,"type":"cond-expr","locations":[{"start":{"line":3008,"column":90},"end":{"line":3008,"column":93}},{"start":{"line":3008,"column":96},"end":{"line":3008,"column":98}}]},"609":{"line":3008,"type":"binary-expr","locations":[{"start":{"line":3008,"column":56},"end":{"line":3008,"column":63}},{"start":{"line":3008,"column":68},"end":{"line":3008,"column":75}},{"start":{"line":3008,"column":79},"end":{"line":3008,"column":86}}]},"610":{"line":3010,"type":"if","locations":[{"start":{"line":3010,"column":8},"end":{"line":3010,"column":8}},{"start":{"line":3010,"column":8},"end":{"line":3010,"column":8}}]},"611":{"line":3010,"type":"binary-expr","locations":[{"start":{"line":3010,"column":12},"end":{"line":3010,"column":19}},{"start":{"line":3010,"column":23},"end":{"line":3010,"column":34}}]},"612":{"line":3015,"type":"cond-expr","locations":[{"start":{"line":3015,"column":25},"end":{"line":3015,"column":28}},{"start":{"line":3015,"column":31},"end":{"line":3015,"column":34}}]},"613":{"line":3037,"type":"switch","locations":[{"start":{"line":3038,"column":16},"end":{"line":3048,"column":26}},{"start":{"line":3049,"column":16},"end":{"line":3059,"column":26}},{"start":{"line":3060,"column":16},"end":{"line":3070,"column":26}},{"start":{"line":3071,"column":16},"end":{"line":3081,"column":26}},{"start":{"line":3082,"column":16},"end":{"line":3092,"column":26}},{"start":{"line":3093,"column":16},"end":{"line":3103,"column":26}},{"start":{"line":3104,"column":16},"end":{"line":3114,"column":26}},{"start":{"line":3115,"column":16},"end":{"line":3117,"column":26}},{"start":{"line":3118,"column":16},"end":{"line":3131,"column":30}}]},"614":{"line":3039,"type":"if","locations":[{"start":{"line":3039,"column":20},"end":{"line":3039,"column":20}},{"start":{"line":3039,"column":20},"end":{"line":3039,"column":20}}]},"615":{"line":3040,"type":"if","locations":[{"start":{"line":3040,"column":24},"end":{"line":3040,"column":24}},{"start":{"line":3040,"column":24},"end":{"line":3040,"column":24}}]},"616":{"line":3040,"type":"binary-expr","locations":[{"start":{"line":3040,"column":28},"end":{"line":3040,"column":30}},{"start":{"line":3040,"column":34},"end":{"line":3040,"column":36}},{"start":{"line":3040,"column":40},"end":{"line":3040,"column":42}}]},"617":{"line":3050,"type":"if","locations":[{"start":{"line":3050,"column":20},"end":{"line":3050,"column":20}},{"start":{"line":3050,"column":20},"end":{"line":3050,"column":20}}]},"618":{"line":3051,"type":"if","locations":[{"start":{"line":3051,"column":24},"end":{"line":3051,"column":24}},{"start":{"line":3051,"column":24},"end":{"line":3051,"column":24}}]},"619":{"line":3051,"type":"binary-expr","locations":[{"start":{"line":3051,"column":28},"end":{"line":3051,"column":30}},{"start":{"line":3051,"column":34},"end":{"line":3051,"column":36}}]},"620":{"line":3061,"type":"if","locations":[{"start":{"line":3061,"column":20},"end":{"line":3061,"column":20}},{"start":{"line":3061,"column":20},"end":{"line":3061,"column":20}}]},"621":{"line":3062,"type":"if","locations":[{"start":{"line":3062,"column":24},"end":{"line":3062,"column":24}},{"start":{"line":3062,"column":24},"end":{"line":3062,"column":24}}]},"622":{"line":3062,"type":"binary-expr","locations":[{"start":{"line":3062,"column":28},"end":{"line":3062,"column":30}},{"start":{"line":3062,"column":34},"end":{"line":3062,"column":36}}]},"623":{"line":3072,"type":"if","locations":[{"start":{"line":3072,"column":20},"end":{"line":3072,"column":20}},{"start":{"line":3072,"column":20},"end":{"line":3072,"column":20}}]},"624":{"line":3073,"type":"if","locations":[{"start":{"line":3073,"column":24},"end":{"line":3073,"column":24}},{"start":{"line":3073,"column":24},"end":{"line":3073,"column":24}}]},"625":{"line":3083,"type":"if","locations":[{"start":{"line":3083,"column":20},"end":{"line":3083,"column":20}},{"start":{"line":3083,"column":20},"end":{"line":3083,"column":20}}]},"626":{"line":3084,"type":"if","locations":[{"start":{"line":3084,"column":24},"end":{"line":3084,"column":24}},{"start":{"line":3084,"column":24},"end":{"line":3084,"column":24}}]},"627":{"line":3084,"type":"binary-expr","locations":[{"start":{"line":3084,"column":28},"end":{"line":3084,"column":30}},{"start":{"line":3084,"column":34},"end":{"line":3084,"column":36}}]},"628":{"line":3094,"type":"if","locations":[{"start":{"line":3094,"column":20},"end":{"line":3094,"column":20}},{"start":{"line":3094,"column":20},"end":{"line":3094,"column":20}}]},"629":{"line":3095,"type":"if","locations":[{"start":{"line":3095,"column":24},"end":{"line":3095,"column":24}},{"start":{"line":3095,"column":24},"end":{"line":3095,"column":24}}]},"630":{"line":3105,"type":"if","locations":[{"start":{"line":3105,"column":20},"end":{"line":3105,"column":20}},{"start":{"line":3105,"column":20},"end":{"line":3105,"column":20}}]},"631":{"line":3106,"type":"if","locations":[{"start":{"line":3106,"column":24},"end":{"line":3106,"column":24}},{"start":{"line":3106,"column":24},"end":{"line":3106,"column":24}}]},"632":{"line":3119,"type":"if","locations":[{"start":{"line":3119,"column":20},"end":{"line":3119,"column":20}},{"start":{"line":3119,"column":20},"end":{"line":3119,"column":20}}]},"633":{"line":3120,"type":"if","locations":[{"start":{"line":3120,"column":24},"end":{"line":3120,"column":24}},{"start":{"line":3120,"column":24},"end":{"line":3120,"column":24}}]},"634":{"line":3126,"type":"if","locations":[{"start":{"line":3126,"column":20},"end":{"line":3126,"column":20}},{"start":{"line":3126,"column":20},"end":{"line":3126,"column":20}}]},"635":{"line":3127,"type":"if","locations":[{"start":{"line":3127,"column":24},"end":{"line":3127,"column":24}},{"start":{"line":3127,"column":24},"end":{"line":3127,"column":24}}]},"636":{"line":3127,"type":"binary-expr","locations":[{"start":{"line":3127,"column":28},"end":{"line":3127,"column":36}},{"start":{"line":3127,"column":40},"end":{"line":3127,"column":45}},{"start":{"line":3127,"column":49},"end":{"line":3127,"column":56}}]},"637":{"line":3133,"type":"if","locations":[{"start":{"line":3133,"column":12},"end":{"line":3133,"column":12}},{"start":{"line":3133,"column":12},"end":{"line":3133,"column":12}}]},"638":{"line":3136,"type":"if","locations":[{"start":{"line":3136,"column":8},"end":{"line":3136,"column":8}},{"start":{"line":3136,"column":8},"end":{"line":3136,"column":8}}]},"639":{"line":3137,"type":"if","locations":[{"start":{"line":3137,"column":12},"end":{"line":3137,"column":12}},{"start":{"line":3137,"column":12},"end":{"line":3137,"column":12}}]},"640":{"line":3137,"type":"binary-expr","locations":[{"start":{"line":3137,"column":16},"end":{"line":3137,"column":19}},{"start":{"line":3137,"column":23},"end":{"line":3137,"column":26}}]},"641":{"line":3139,"type":"if","locations":[{"start":{"line":3139,"column":12},"end":{"line":3139,"column":12}},{"start":{"line":3139,"column":12},"end":{"line":3139,"column":12}}]},"642":{"line":3155,"type":"cond-expr","locations":[{"start":{"line":3155,"column":47},"end":{"line":3155,"column":58}},{"start":{"line":3155,"column":61},"end":{"line":3155,"column":66}}]},"643":{"line":3156,"type":"cond-expr","locations":[{"start":{"line":3156,"column":43},"end":{"line":3156,"column":53}},{"start":{"line":3156,"column":56},"end":{"line":3156,"column":59}}]},"644":{"line":3157,"type":"if","locations":[{"start":{"line":3157,"column":8},"end":{"line":3157,"column":8}},{"start":{"line":3157,"column":8},"end":{"line":3157,"column":8}}]},"645":{"line":3158,"type":"if","locations":[{"start":{"line":3158,"column":12},"end":{"line":3158,"column":12}},{"start":{"line":3158,"column":12},"end":{"line":3158,"column":12}}]},"646":{"line":3158,"type":"binary-expr","locations":[{"start":{"line":3158,"column":16},"end":{"line":3158,"column":41}},{"start":{"line":3158,"column":45},"end":{"line":3158,"column":60}}]},"647":{"line":3161,"type":"if","locations":[{"start":{"line":3161,"column":12},"end":{"line":3161,"column":12}},{"start":{"line":3161,"column":12},"end":{"line":3161,"column":12}}]},"648":{"line":3161,"type":"binary-expr","locations":[{"start":{"line":3161,"column":16},"end":{"line":3161,"column":39}},{"start":{"line":3161,"column":43},"end":{"line":3161,"column":56}}]},"649":{"line":3164,"type":"if","locations":[{"start":{"line":3164,"column":12},"end":{"line":3164,"column":12}},{"start":{"line":3164,"column":12},"end":{"line":3164,"column":12}}]},"650":{"line":3164,"type":"binary-expr","locations":[{"start":{"line":3164,"column":16},"end":{"line":3164,"column":25}},{"start":{"line":3164,"column":29},"end":{"line":3164,"column":40}},{"start":{"line":3164,"column":44},"end":{"line":3164,"column":68}}]},"651":{"line":3181,"type":"if","locations":[{"start":{"line":3181,"column":8},"end":{"line":3181,"column":8}},{"start":{"line":3181,"column":8},"end":{"line":3181,"column":8}}]},"652":{"line":3182,"type":"if","locations":[{"start":{"line":3182,"column":12},"end":{"line":3182,"column":12}},{"start":{"line":3182,"column":12},"end":{"line":3182,"column":12}}]},"653":{"line":3184,"type":"if","locations":[{"start":{"line":3184,"column":12},"end":{"line":3184,"column":12}},{"start":{"line":3184,"column":12},"end":{"line":3184,"column":12}}]},"654":{"line":3225,"type":"if","locations":[{"start":{"line":3225,"column":12},"end":{"line":3225,"column":12}},{"start":{"line":3225,"column":12},"end":{"line":3225,"column":12}}]},"655":{"line":3228,"type":"binary-expr","locations":[{"start":{"line":3228,"column":19},"end":{"line":3228,"column":30}},{"start":{"line":3228,"column":34},"end":{"line":3228,"column":55}}]},"656":{"line":3229,"type":"if","locations":[{"start":{"line":3229,"column":16},"end":{"line":3229,"column":16}},{"start":{"line":3229,"column":16},"end":{"line":3229,"column":16}}]},"657":{"line":3231,"type":"if","locations":[{"start":{"line":3231,"column":21},"end":{"line":3231,"column":21}},{"start":{"line":3231,"column":21},"end":{"line":3231,"column":21}}]},"658":{"line":3234,"type":"if","locations":[{"start":{"line":3234,"column":21},"end":{"line":3234,"column":21}},{"start":{"line":3234,"column":21},"end":{"line":3234,"column":21}}]},"659":{"line":3265,"type":"if","locations":[{"start":{"line":3265,"column":16},"end":{"line":3265,"column":16}},{"start":{"line":3265,"column":16},"end":{"line":3265,"column":16}}]},"660":{"line":3267,"type":"if","locations":[{"start":{"line":3267,"column":21},"end":{"line":3267,"column":21}},{"start":{"line":3267,"column":21},"end":{"line":3267,"column":21}}]},"661":{"line":3268,"type":"binary-expr","locations":[{"start":{"line":3268,"column":21},"end":{"line":3268,"column":41}},{"start":{"line":3268,"column":46},"end":{"line":3268,"column":58}}]},"662":{"line":3270,"type":"if","locations":[{"start":{"line":3270,"column":21},"end":{"line":3270,"column":21}},{"start":{"line":3270,"column":21},"end":{"line":3270,"column":21}}]},"663":{"line":3271,"type":"binary-expr","locations":[{"start":{"line":3271,"column":21},"end":{"line":3271,"column":39}},{"start":{"line":3271,"column":43},"end":{"line":3271,"column":61}},{"start":{"line":3271,"column":66},"end":{"line":3271,"column":81}}]},"664":{"line":3273,"type":"if","locations":[{"start":{"line":3273,"column":21},"end":{"line":3273,"column":21}},{"start":{"line":3273,"column":21},"end":{"line":3273,"column":21}}]},"665":{"line":3274,"type":"binary-expr","locations":[{"start":{"line":3274,"column":21},"end":{"line":3274,"column":39}},{"start":{"line":3274,"column":43},"end":{"line":3274,"column":61}},{"start":{"line":3274,"column":65},"end":{"line":3274,"column":83}},{"start":{"line":3274,"column":88},"end":{"line":3274,"column":106}}]},"666":{"line":3290,"type":"if","locations":[{"start":{"line":3290,"column":16},"end":{"line":3290,"column":16}},{"start":{"line":3290,"column":16},"end":{"line":3290,"column":16}}]},"667":{"line":3290,"type":"cond-expr","locations":[{"start":{"line":3290,"column":40},"end":{"line":3290,"column":42}},{"start":{"line":3290,"column":45},"end":{"line":3290,"column":50}}]},"668":{"line":3292,"type":"if","locations":[{"start":{"line":3292,"column":16},"end":{"line":3292,"column":16}},{"start":{"line":3292,"column":16},"end":{"line":3292,"column":16}}]},"669":{"line":3292,"type":"binary-expr","locations":[{"start":{"line":3292,"column":20},"end":{"line":3292,"column":32}},{"start":{"line":3292,"column":36},"end":{"line":3292,"column":48}}]},"670":{"line":3293,"type":"if","locations":[{"start":{"line":3293,"column":20},"end":{"line":3293,"column":20}},{"start":{"line":3293,"column":20},"end":{"line":3293,"column":20}}]},"671":{"line":3294,"type":"if","locations":[{"start":{"line":3294,"column":24},"end":{"line":3294,"column":24}},{"start":{"line":3294,"column":24},"end":{"line":3294,"column":24}}]},"672":{"line":3294,"type":"binary-expr","locations":[{"start":{"line":3294,"column":28},"end":{"line":3294,"column":40}},{"start":{"line":3294,"column":44},"end":{"line":3294,"column":56}}]},"673":{"line":3302,"type":"if","locations":[{"start":{"line":3302,"column":12},"end":{"line":3302,"column":12}},{"start":{"line":3302,"column":12},"end":{"line":3302,"column":12}}]},"674":{"line":3314,"type":"if","locations":[{"start":{"line":3314,"column":12},"end":{"line":3314,"column":12}},{"start":{"line":3314,"column":12},"end":{"line":3314,"column":12}}]},"675":{"line":3316,"type":"binary-expr","locations":[{"start":{"line":3316,"column":19},"end":{"line":3316,"column":30}},{"start":{"line":3316,"column":34},"end":{"line":3316,"column":55}}]},"676":{"line":3317,"type":"if","locations":[{"start":{"line":3317,"column":16},"end":{"line":3317,"column":16}},{"start":{"line":3317,"column":16},"end":{"line":3317,"column":16}}]},"677":{"line":3359,"type":"cond-expr","locations":[{"start":{"line":3359,"column":33},"end":{"line":3359,"column":34}},{"start":{"line":3359,"column":37},"end":{"line":3359,"column":78}}]},"678":{"line":3359,"type":"cond-expr","locations":[{"start":{"line":3359,"column":52},"end":{"line":3359,"column":53}},{"start":{"line":3359,"column":56},"end":{"line":3359,"column":78}}]},"679":{"line":3359,"type":"cond-expr","locations":[{"start":{"line":3359,"column":73},"end":{"line":3359,"column":74}},{"start":{"line":3359,"column":77},"end":{"line":3359,"column":78}}]},"680":{"line":3371,"type":"cond-expr","locations":[{"start":{"line":3371,"column":35},"end":{"line":3371,"column":36}},{"start":{"line":3371,"column":39},"end":{"line":3371,"column":80}}]},"681":{"line":3371,"type":"cond-expr","locations":[{"start":{"line":3371,"column":54},"end":{"line":3371,"column":55}},{"start":{"line":3371,"column":58},"end":{"line":3371,"column":80}}]},"682":{"line":3371,"type":"cond-expr","locations":[{"start":{"line":3371,"column":75},"end":{"line":3371,"column":76}},{"start":{"line":3371,"column":79},"end":{"line":3371,"column":80}}]},"683":{"line":3384,"type":"cond-expr","locations":[{"start":{"line":3384,"column":40},"end":{"line":3384,"column":41}},{"start":{"line":3384,"column":44},"end":{"line":3384,"column":85}}]},"684":{"line":3384,"type":"cond-expr","locations":[{"start":{"line":3384,"column":59},"end":{"line":3384,"column":60}},{"start":{"line":3384,"column":63},"end":{"line":3384,"column":85}}]},"685":{"line":3384,"type":"cond-expr","locations":[{"start":{"line":3384,"column":80},"end":{"line":3384,"column":81}},{"start":{"line":3384,"column":84},"end":{"line":3384,"column":85}}]},"686":{"line":3402,"type":"if","locations":[{"start":{"line":3402,"column":8},"end":{"line":3402,"column":8}},{"start":{"line":3402,"column":8},"end":{"line":3402,"column":8}}]},"687":{"line":3403,"type":"if","locations":[{"start":{"line":3403,"column":8},"end":{"line":3403,"column":8}},{"start":{"line":3403,"column":8},"end":{"line":3403,"column":8}}]},"688":{"line":3404,"type":"if","locations":[{"start":{"line":3404,"column":8},"end":{"line":3404,"column":8}},{"start":{"line":3404,"column":8},"end":{"line":3404,"column":8}}]},"689":{"line":3405,"type":"if","locations":[{"start":{"line":3405,"column":12},"end":{"line":3405,"column":12}},{"start":{"line":3405,"column":12},"end":{"line":3405,"column":12}}]},"690":{"line":3405,"type":"binary-expr","locations":[{"start":{"line":3405,"column":16},"end":{"line":3405,"column":41}},{"start":{"line":3405,"column":45},"end":{"line":3405,"column":60}}]},"691":{"line":3408,"type":"if","locations":[{"start":{"line":3408,"column":12},"end":{"line":3408,"column":12}},{"start":{"line":3408,"column":12},"end":{"line":3408,"column":12}}]},"692":{"line":3408,"type":"binary-expr","locations":[{"start":{"line":3408,"column":16},"end":{"line":3408,"column":39}},{"start":{"line":3408,"column":43},"end":{"line":3408,"column":56}}]},"693":{"line":3411,"type":"if","locations":[{"start":{"line":3411,"column":12},"end":{"line":3411,"column":12}},{"start":{"line":3411,"column":12},"end":{"line":3411,"column":12}}]},"694":{"line":3411,"type":"binary-expr","locations":[{"start":{"line":3411,"column":16},"end":{"line":3411,"column":25}},{"start":{"line":3411,"column":29},"end":{"line":3411,"column":40}},{"start":{"line":3411,"column":44},"end":{"line":3411,"column":68}}]},"695":{"line":3428,"type":"if","locations":[{"start":{"line":3428,"column":8},"end":{"line":3428,"column":8}},{"start":{"line":3428,"column":8},"end":{"line":3428,"column":8}}]},"696":{"line":3429,"type":"if","locations":[{"start":{"line":3429,"column":12},"end":{"line":3429,"column":12}},{"start":{"line":3429,"column":12},"end":{"line":3429,"column":12}}]}},"code":["/*"," Copyright 2013-2014 Daniel Wirtz <dcode@dcode.io>",""," Licensed under the Apache License, Version 2.0 (the \"License\");"," you may not use this file except in compliance with the License."," You may obtain a copy of the License at",""," http://www.apache.org/licenses/LICENSE-2.0",""," Unless required by applicable law or agreed to in writing, software"," distributed under the License is distributed on an \"AS IS\" BASIS,"," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."," See the License for the specific language governing permissions and"," limitations under the License."," */","","/**"," * @license bytebuffer.js (c) 2015 Daniel Wirtz <dcode@dcode.io>"," * Backing buffer / Accessor: node Buffer"," * Released under the Apache License, Version 2.0"," * see: https://github.com/dcodeIO/bytebuffer.js for details"," */","module.exports = (function() {","    \"use strict\";","","    var buffer = require(\"buffer\"),","        Buffer = buffer[\"Buffer\"],","        Long = require(\"long\"),","        memcpy = null; try { memcpy = require(\"memcpy\"); } catch (e) {}","","    /**","     * Constructs a new ByteBuffer.","     * @class The swiss army knife for binary data in JavaScript.","     * @exports ByteBuffer","     * @constructor","     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.","     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to","     *  {@link ByteBuffer.DEFAULT_ENDIAN}.","     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to","     *  {@link ByteBuffer.DEFAULT_NOASSERT}.","     * @expose","     */","    var ByteBuffer = function(capacity, littleEndian, noAssert) {","        if (typeof capacity === 'undefined')","            capacity = ByteBuffer.DEFAULT_CAPACITY;","        if (typeof littleEndian === 'undefined')","            littleEndian = ByteBuffer.DEFAULT_ENDIAN;","        if (typeof noAssert === 'undefined')","            noAssert = ByteBuffer.DEFAULT_NOASSERT;","        if (!noAssert) {","            capacity = capacity | 0;","            if (capacity < 0)","                throw RangeError(\"Illegal capacity\");","            littleEndian = !!littleEndian;","            noAssert = !!noAssert;","        }","","        /**","         * Backing node Buffer.","         * @type {!Buffer}","         * @expose","         */","        this.buffer = capacity === 0 ? EMPTY_BUFFER : new Buffer(capacity);","","        /**","         * Absolute read/write offset.","         * @type {number}","         * @expose","         * @see ByteBuffer#flip","         * @see ByteBuffer#clear","         */","        this.offset = 0;","","        /**","         * Marked offset.","         * @type {number}","         * @expose","         * @see ByteBuffer#mark","         * @see ByteBuffer#reset","         */","        this.markedOffset = -1;","","        /**","         * Absolute limit of the contained data. Set to the backing buffer's capacity upon allocation.","         * @type {number}","         * @expose","         * @see ByteBuffer#flip","         * @see ByteBuffer#clear","         */","        this.limit = capacity;","","        /**","         * Whether to use little endian byte order, defaults to `false` for big endian.","         * @type {boolean}","         * @expose","         */","        this.littleEndian = littleEndian;","","        /**","         * Whether to skip assertions of offsets and values, defaults to `false`.","         * @type {boolean}","         * @expose","         */","        this.noAssert = noAssert;","    };","","    /**","     * ByteBuffer version.","     * @type {string}","     * @const","     * @expose","     */","    ByteBuffer.VERSION = \"5.0.1\";","","    /**","     * Little endian constant that can be used instead of its boolean value. Evaluates to `true`.","     * @type {boolean}","     * @const","     * @expose","     */","    ByteBuffer.LITTLE_ENDIAN = true;","","    /**","     * Big endian constant that can be used instead of its boolean value. Evaluates to `false`.","     * @type {boolean}","     * @const","     * @expose","     */","    ByteBuffer.BIG_ENDIAN = false;","","    /**","     * Default initial capacity of `16`.","     * @type {number}","     * @expose","     */","    ByteBuffer.DEFAULT_CAPACITY = 16;","","    /**","     * Default endianess of `false` for big endian.","     * @type {boolean}","     * @expose","     */","    ByteBuffer.DEFAULT_ENDIAN = ByteBuffer.BIG_ENDIAN;","","    /**","     * Default no assertions flag of `false`.","     * @type {boolean}","     * @expose","     */","    ByteBuffer.DEFAULT_NOASSERT = false;","","    /**","     * A `Long` class for representing a 64-bit two's-complement integer value.","     * @type {!Long}","     * @const","     * @see https://npmjs.org/package/long","     * @expose","     */","    ByteBuffer.Long = Long;","","    /**","     * @alias ByteBuffer.prototype","     * @inner","     */","    var ByteBufferPrototype = ByteBuffer.prototype;","","    /**","     * An indicator used to reliably determine if an object is a ByteBuffer or not.","     * @type {boolean}","     * @const","     * @expose","     * @private","     */","    ByteBufferPrototype.__isByteBuffer__;","","    Object.defineProperty(ByteBufferPrototype, \"__isByteBuffer__\", {","        value: true,","        enumerable: false,","        configurable: false","    });","","    // helpers","","    /**","     * @type {!Buffer}","     * @inner","     */","    var EMPTY_BUFFER = new Buffer(0);","","    /**","     * String.fromCharCode reference for compile-time renaming.","     * @type {function(...number):string}","     * @inner","     */","    var stringFromCharCode = String.fromCharCode;","","    /**","     * Creates a source function for a string.","     * @param {string} s String to read from","     * @returns {function():number|null} Source function returning the next char code respectively `null` if there are","     *  no more characters left.","     * @throws {TypeError} If the argument is invalid","     * @inner","     */","    function stringSource(s) {","        var i=0; return function() {","            return i < s.length ? s.charCodeAt(i++) : null;","        };","    }","","    /**","     * Creates a destination function for a string.","     * @returns {function(number=):undefined|string} Destination function successively called with the next char code.","     *  Returns the final string when called without arguments.","     * @inner","     */","    function stringDestination() {","        var cs = [], ps = []; return function() {","            if (arguments.length === 0)","                return ps.join('')+stringFromCharCode.apply(String, cs);","            if (cs.length + arguments.length > 1024)","                ps.push(stringFromCharCode.apply(String, cs)),","                    cs.length = 0;","            Array.prototype.push.apply(cs, arguments);","        };","    }","","    /**","     * Gets the accessor type.","     * @returns {Function} `Buffer` under node.js, `Uint8Array` respectively `DataView` in the browser (classes)","     * @expose","     */","    ByteBuffer.accessor = function() {","        return Buffer;","    };","    /**","     * Allocates a new ByteBuffer backed by a buffer of the specified capacity.","     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.","     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to","     *  {@link ByteBuffer.DEFAULT_ENDIAN}.","     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to","     *  {@link ByteBuffer.DEFAULT_NOASSERT}.","     * @returns {!ByteBuffer}","     * @expose","     */","    ByteBuffer.allocate = function(capacity, littleEndian, noAssert) {","        return new ByteBuffer(capacity, littleEndian, noAssert);","    };","","    /**","     * Concatenates multiple ByteBuffers into one.","     * @param {!Array.<!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string>} buffers Buffers to concatenate","     * @param {(string|boolean)=} encoding String encoding if `buffers` contains a string (\"base64\", \"hex\", \"binary\",","     *  defaults to \"utf8\")","     * @param {boolean=} littleEndian Whether to use little or big endian byte order for the resulting ByteBuffer. Defaults","     *  to {@link ByteBuffer.DEFAULT_ENDIAN}.","     * @param {boolean=} noAssert Whether to skip assertions of offsets and values for the resulting ByteBuffer. Defaults to","     *  {@link ByteBuffer.DEFAULT_NOASSERT}.","     * @returns {!ByteBuffer} Concatenated ByteBuffer","     * @expose","     */","    ByteBuffer.concat = function(buffers, encoding, littleEndian, noAssert) {","        if (typeof encoding === 'boolean' || typeof encoding !== 'string') {","            noAssert = littleEndian;","            littleEndian = encoding;","            encoding = undefined;","        }","        var capacity = 0;","        for (var i=0, k=buffers.length, length; i<k; ++i) {","            if (!ByteBuffer.isByteBuffer(buffers[i]))","                buffers[i] = ByteBuffer.wrap(buffers[i], encoding);","            length = buffers[i].limit - buffers[i].offset;","            if (length > 0) capacity += length;","        }","        if (capacity === 0)","            return new ByteBuffer(0, littleEndian, noAssert);","        var bb = new ByteBuffer(capacity, littleEndian, noAssert),","            bi;","        i=0; while (i<k) {","            bi = buffers[i++];","            length = bi.limit - bi.offset;","            if (length <= 0) continue;","            bi.buffer.copy(bb.buffer, bb.offset, bi.offset, bi.limit);","            bb.offset += length;","        }","        bb.limit = bb.offset;","        bb.offset = 0;","        return bb;","    };","","    /**","     * Tests if the specified type is a ByteBuffer.","     * @param {*} bb ByteBuffer to test","     * @returns {boolean} `true` if it is a ByteBuffer, otherwise `false`","     * @expose","     */","    ByteBuffer.isByteBuffer = function(bb) {","        return (bb && bb[\"__isByteBuffer__\"]) === true;","    };","    /**","     * Gets the backing buffer type.","     * @returns {Function} `Buffer` under node.js, `ArrayBuffer` in the browser (classes)","     * @expose","     */","    ByteBuffer.type = function() {","        return Buffer;","    };","    /**","     * Wraps a buffer or a string. Sets the allocated ByteBuffer's {@link ByteBuffer#offset} to `0` and its","     *  {@link ByteBuffer#limit} to the length of the wrapped data.","     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string|!Array.<number>} buffer Anything that can be wrapped","     * @param {(string|boolean)=} encoding String encoding if `buffer` is a string (\"base64\", \"hex\", \"binary\", defaults to","     *  \"utf8\")","     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to","     *  {@link ByteBuffer.DEFAULT_ENDIAN}.","     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to","     *  {@link ByteBuffer.DEFAULT_NOASSERT}.","     * @returns {!ByteBuffer} A ByteBuffer wrapping `buffer`","     * @expose","     */","    ByteBuffer.wrap = function(buffer, encoding, littleEndian, noAssert) {","        if (typeof encoding !== 'string') {","            noAssert = littleEndian;","            littleEndian = encoding;","            encoding = undefined;","        }","        if (typeof buffer === 'string') {","            if (typeof encoding === 'undefined')","                encoding = \"utf8\";","            switch (encoding) {","                case \"base64\":","                    return ByteBuffer.fromBase64(buffer, littleEndian);","                case \"hex\":","                    return ByteBuffer.fromHex(buffer, littleEndian);","                case \"binary\":","                    return ByteBuffer.fromBinary(buffer, littleEndian);","                case \"utf8\":","                    return ByteBuffer.fromUTF8(buffer, littleEndian);","                case \"debug\":","                    return ByteBuffer.fromDebug(buffer, littleEndian);","                default:","                    throw Error(\"Unsupported encoding: \"+encoding);","            }","        }","        if (buffer === null || typeof buffer !== 'object')","            throw TypeError(\"Illegal buffer\");","        var bb;","        if (ByteBuffer.isByteBuffer(buffer)) {","            bb = ByteBufferPrototype.clone.call(buffer);","            bb.markedOffset = -1;","            return bb;","        }","        var i = 0,","            k = 0,","            b;","        if (buffer instanceof Uint8Array) { // Extract bytes from Uint8Array","            b = new Buffer(buffer.length);","            if (memcpy) { // Fast","                memcpy(b, 0, buffer.buffer, buffer.byteOffset, buffer.byteOffset + buffer.length);","            } else { // Slow","                for (i=0, k=buffer.length; i<k; ++i)","                    b[i] = buffer[i];","            }","            buffer = b;","        } else if (buffer instanceof ArrayBuffer) { // Convert ArrayBuffer to Buffer","            b = new Buffer(buffer.byteLength);","            if (memcpy) { // Fast","                memcpy(b, 0, buffer, 0, buffer.byteLength);","            } else { // Slow","                buffer = new Uint8Array(buffer);","                for (i=0, k=buffer.length; i<k; ++i) {","                    b[i] = buffer[i];","                }","            }","            buffer = b;","        } else if (!(buffer instanceof Buffer)) { // Create from octets if it is an error, otherwise fail","            if (Object.prototype.toString.call(buffer) !== \"[object Array]\")","                throw TypeError(\"Illegal buffer\");","            buffer = new Buffer(buffer);","        }","        bb = new ByteBuffer(0, littleEndian, noAssert);","        if (buffer.length > 0) { // Avoid references to more than one EMPTY_BUFFER","            bb.buffer = buffer;","            bb.limit = buffer.length;","        }","        return bb;","    };","","    /**","     * Writes the array as a bitset.","     * @param {Array<boolean>} value Array of booleans to write","     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.","     * @returns {!ByteBuffer}","     * @expose","     */","    ByteBufferPrototype.writeBitSet = function(value, offset) {","      var relative = typeof offset === 'undefined';","      if (relative) offset = this.offset;","      if (!this.noAssert) {","        if (!(value instanceof Array))","          throw TypeError(\"Illegal BitSet: Not an array\");","        if (typeof offset !== 'number' || offset % 1 !== 0)","            throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","        offset >>>= 0;","        if (offset < 0 || offset + 0 > this.buffer.length)","            throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","      }","","      var start = offset,","          bits = value.length,","          bytes = (bits >> 3),","          bit = 0,","          k;","","      offset += this.writeVarint32(bits,offset);","","      while(bytes--) {","        k = (!!value[bit++] & 1) |","            ((!!value[bit++] & 1) << 1) |","            ((!!value[bit++] & 1) << 2) |","            ((!!value[bit++] & 1) << 3) |","            ((!!value[bit++] & 1) << 4) |","            ((!!value[bit++] & 1) << 5) |","            ((!!value[bit++] & 1) << 6) |","            ((!!value[bit++] & 1) << 7);","        this.writeByte(k,offset++);","      }","","      if(bit < bits) {","        var m = 0; k = 0;","        while(bit < bits) k = k | ((!!value[bit++] & 1) << (m++));","        this.writeByte(k,offset++);","      }","","      if (relative) {","        this.offset = offset;","        return this;","      }","      return offset - start;","    }","","    /**","     * Reads a BitSet as an array of booleans.","     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.","     * @returns {Array<boolean>","     * @expose","     */","    ByteBufferPrototype.readBitSet = function(offset) {","      var relative = typeof offset === 'undefined';","      if (relative) offset = this.offset;","","      var ret = this.readVarint32(offset),","          bits = ret.value,","          bytes = (bits >> 3),","          bit = 0,","          value = [],","          k;","","      offset += ret.length;","","      while(bytes--) {","        k = this.readByte(offset++);","        value[bit++] = !!(k & 0x01);","        value[bit++] = !!(k & 0x02);","        value[bit++] = !!(k & 0x04);","        value[bit++] = !!(k & 0x08);","        value[bit++] = !!(k & 0x10);","        value[bit++] = !!(k & 0x20);","        value[bit++] = !!(k & 0x40);","        value[bit++] = !!(k & 0x80);","      }","","      if(bit < bits) {","        var m = 0;","        k = this.readByte(offset++);","        while(bit < bits) value[bit++] = !!((k >> (m++)) & 1);","      }","","      if (relative) {","        this.offset = offset;","      }","      return value;","    }","    /**","     * Reads the specified number of bytes.","     * @param {number} length Number of bytes to read","     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.","     * @returns {!ByteBuffer}","     * @expose","     */","    ByteBufferPrototype.readBytes = function(length, offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + length > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.length);","        }","        var slice = this.slice(offset, offset + length);","        if (relative) this.offset += length;","        return slice;","    };","","    /**","     * Writes a payload of bytes. This is an alias of {@link ByteBuffer#append}.","     * @function","     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string} source Data to write. If `source` is a ByteBuffer, its","     * offsets will be modified according to the performed read operation.","     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")","     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes","     *  written if omitted.","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.writeBytes = ByteBufferPrototype.append;","","    // types/ints/int8","","    /**","     * Writes an 8bit signed integer.","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.writeInt8 = function(value, offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof value !== 'number' || value % 1 !== 0)","                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");","            value |= 0;","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 0 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","        }","        offset += 1;","        var capacity0 = this.buffer.length;","        if (offset > capacity0)","            this.resize((capacity0 *= 2) > offset ? capacity0 : offset);","        offset -= 1;","        this.buffer[offset] = value;","        if (relative) this.offset += 1;","        return this;","    };","","    /**","     * Writes an 8bit signed integer. This is an alias of {@link ByteBuffer#writeInt8}.","     * @function","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.writeByte = ByteBufferPrototype.writeInt8;","","    /**","     * Reads an 8bit signed integer.","     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.","     * @returns {number} Value read","     * @expose","     */","    ByteBufferPrototype.readInt8 = function(offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 1 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);","        }","        var value = this.buffer[offset];","        if ((value & 0x80) === 0x80) value = -(0xFF - value + 1); // Cast to signed","        if (relative) this.offset += 1;","        return value;","    };","","    /**","     * Reads an 8bit signed integer. This is an alias of {@link ByteBuffer#readInt8}.","     * @function","     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.","     * @returns {number} Value read","     * @expose","     */","    ByteBufferPrototype.readByte = ByteBufferPrototype.readInt8;","","    /**","     * Writes an 8bit unsigned integer.","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.writeUint8 = function(value, offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof value !== 'number' || value % 1 !== 0)","                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");","            value >>>= 0;","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 0 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","        }","        offset += 1;","        var capacity1 = this.buffer.length;","        if (offset > capacity1)","            this.resize((capacity1 *= 2) > offset ? capacity1 : offset);","        offset -= 1;","        this.buffer[offset] = value;","        if (relative) this.offset += 1;","        return this;","    };","","    /**","     * Writes an 8bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint8}.","     * @function","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.writeUInt8 = ByteBufferPrototype.writeUint8;","","    /**","     * Reads an 8bit unsigned integer.","     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.","     * @returns {number} Value read","     * @expose","     */","    ByteBufferPrototype.readUint8 = function(offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 1 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);","        }","        var value = this.buffer[offset];","        if (relative) this.offset += 1;","        return value;","    };","","    /**","     * Reads an 8bit unsigned integer. This is an alias of {@link ByteBuffer#readUint8}.","     * @function","     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.","     * @returns {number} Value read","     * @expose","     */","    ByteBufferPrototype.readUInt8 = ByteBufferPrototype.readUint8;","","    // types/ints/int16","","    /**","     * Writes a 16bit signed integer.","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.","     * @throws {TypeError} If `offset` or `value` is not a valid number","     * @throws {RangeError} If `offset` is out of bounds","     * @expose","     */","    ByteBufferPrototype.writeInt16 = function(value, offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof value !== 'number' || value % 1 !== 0)","                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");","            value |= 0;","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 0 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","        }","        offset += 2;","        var capacity2 = this.buffer.length;","        if (offset > capacity2)","            this.resize((capacity2 *= 2) > offset ? capacity2 : offset);","        offset -= 2;","        if (this.littleEndian) {","            this.buffer[offset+1] = (value & 0xFF00) >>> 8;","            this.buffer[offset  ] =  value & 0x00FF;","        } else {","            this.buffer[offset]   = (value & 0xFF00) >>> 8;","            this.buffer[offset+1] =  value & 0x00FF;","        }","        if (relative) this.offset += 2;","        return this;","    };","","    /**","     * Writes a 16bit signed integer. This is an alias of {@link ByteBuffer#writeInt16}.","     * @function","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.","     * @throws {TypeError} If `offset` or `value` is not a valid number","     * @throws {RangeError} If `offset` is out of bounds","     * @expose","     */","    ByteBufferPrototype.writeShort = ByteBufferPrototype.writeInt16;","","    /**","     * Reads a 16bit signed integer.","     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.","     * @returns {number} Value read","     * @throws {TypeError} If `offset` is not a valid number","     * @throws {RangeError} If `offset` is out of bounds","     * @expose","     */","    ByteBufferPrototype.readInt16 = function(offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 2 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.length);","        }","        var value = 0;","        if (this.littleEndian) {","            value  = this.buffer[offset  ];","            value |= this.buffer[offset+1] << 8;","        } else {","            value  = this.buffer[offset  ] << 8;","            value |= this.buffer[offset+1];","        }","        if ((value & 0x8000) === 0x8000) value = -(0xFFFF - value + 1); // Cast to signed","        if (relative) this.offset += 2;","        return value;","    };","","    /**","     * Reads a 16bit signed integer. This is an alias of {@link ByteBuffer#readInt16}.","     * @function","     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.","     * @returns {number} Value read","     * @throws {TypeError} If `offset` is not a valid number","     * @throws {RangeError} If `offset` is out of bounds","     * @expose","     */","    ByteBufferPrototype.readShort = ByteBufferPrototype.readInt16;","","    /**","     * Writes a 16bit unsigned integer.","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.","     * @throws {TypeError} If `offset` or `value` is not a valid number","     * @throws {RangeError} If `offset` is out of bounds","     * @expose","     */","    ByteBufferPrototype.writeUint16 = function(value, offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof value !== 'number' || value % 1 !== 0)","                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");","            value >>>= 0;","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 0 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","        }","        offset += 2;","        var capacity3 = this.buffer.length;","        if (offset > capacity3)","            this.resize((capacity3 *= 2) > offset ? capacity3 : offset);","        offset -= 2;","        if (this.littleEndian) {","            this.buffer[offset+1] = (value & 0xFF00) >>> 8;","            this.buffer[offset  ] =  value & 0x00FF;","        } else {","            this.buffer[offset]   = (value & 0xFF00) >>> 8;","            this.buffer[offset+1] =  value & 0x00FF;","        }","        if (relative) this.offset += 2;","        return this;","    };","","    /**","     * Writes a 16bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint16}.","     * @function","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.","     * @throws {TypeError} If `offset` or `value` is not a valid number","     * @throws {RangeError} If `offset` is out of bounds","     * @expose","     */","    ByteBufferPrototype.writeUInt16 = ByteBufferPrototype.writeUint16;","","    /**","     * Reads a 16bit unsigned integer.","     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.","     * @returns {number} Value read","     * @throws {TypeError} If `offset` is not a valid number","     * @throws {RangeError} If `offset` is out of bounds","     * @expose","     */","    ByteBufferPrototype.readUint16 = function(offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 2 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.length);","        }","        var value = 0;","        if (this.littleEndian) {","            value  = this.buffer[offset  ];","            value |= this.buffer[offset+1] << 8;","        } else {","            value  = this.buffer[offset  ] << 8;","            value |= this.buffer[offset+1];","        }","        if (relative) this.offset += 2;","        return value;","    };","","    /**","     * Reads a 16bit unsigned integer. This is an alias of {@link ByteBuffer#readUint16}.","     * @function","     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.","     * @returns {number} Value read","     * @throws {TypeError} If `offset` is not a valid number","     * @throws {RangeError} If `offset` is out of bounds","     * @expose","     */","    ByteBufferPrototype.readUInt16 = ByteBufferPrototype.readUint16;","","    // types/ints/int32","","    /**","     * Writes a 32bit signed integer.","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.","     * @expose","     */","    ByteBufferPrototype.writeInt32 = function(value, offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof value !== 'number' || value % 1 !== 0)","                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");","            value |= 0;","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 0 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","        }","        offset += 4;","        var capacity4 = this.buffer.length;","        if (offset > capacity4)","            this.resize((capacity4 *= 2) > offset ? capacity4 : offset);","        offset -= 4;","        if (this.littleEndian) {","            this.buffer[offset+3] = (value >>> 24) & 0xFF;","            this.buffer[offset+2] = (value >>> 16) & 0xFF;","            this.buffer[offset+1] = (value >>>  8) & 0xFF;","            this.buffer[offset  ] =  value         & 0xFF;","        } else {","            this.buffer[offset  ] = (value >>> 24) & 0xFF;","            this.buffer[offset+1] = (value >>> 16) & 0xFF;","            this.buffer[offset+2] = (value >>>  8) & 0xFF;","            this.buffer[offset+3] =  value         & 0xFF;","        }","        if (relative) this.offset += 4;","        return this;","    };","","    /**","     * Writes a 32bit signed integer. This is an alias of {@link ByteBuffer#writeInt32}.","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.","     * @expose","     */","    ByteBufferPrototype.writeInt = ByteBufferPrototype.writeInt32;","","    /**","     * Reads a 32bit signed integer.","     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.","     * @returns {number} Value read","     * @expose","     */","    ByteBufferPrototype.readInt32 = function(offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 4 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);","        }","        var value = 0;","        if (this.littleEndian) {","            value  = this.buffer[offset+2] << 16;","            value |= this.buffer[offset+1] <<  8;","            value |= this.buffer[offset  ];","            value += this.buffer[offset+3] << 24 >>> 0;","        } else {","            value  = this.buffer[offset+1] << 16;","            value |= this.buffer[offset+2] <<  8;","            value |= this.buffer[offset+3];","            value += this.buffer[offset  ] << 24 >>> 0;","        }","        value |= 0; // Cast to signed","        if (relative) this.offset += 4;","        return value;","    };","","    /**","     * Reads a 32bit signed integer. This is an alias of {@link ByteBuffer#readInt32}.","     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `4` if omitted.","     * @returns {number} Value read","     * @expose","     */","    ByteBufferPrototype.readInt = ByteBufferPrototype.readInt32;","","    /**","     * Writes a 32bit unsigned integer.","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.","     * @expose","     */","    ByteBufferPrototype.writeUint32 = function(value, offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof value !== 'number' || value % 1 !== 0)","                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");","            value >>>= 0;","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 0 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","        }","        offset += 4;","        var capacity5 = this.buffer.length;","        if (offset > capacity5)","            this.resize((capacity5 *= 2) > offset ? capacity5 : offset);","        offset -= 4;","        if (this.littleEndian) {","            this.buffer[offset+3] = (value >>> 24) & 0xFF;","            this.buffer[offset+2] = (value >>> 16) & 0xFF;","            this.buffer[offset+1] = (value >>>  8) & 0xFF;","            this.buffer[offset  ] =  value         & 0xFF;","        } else {","            this.buffer[offset  ] = (value >>> 24) & 0xFF;","            this.buffer[offset+1] = (value >>> 16) & 0xFF;","            this.buffer[offset+2] = (value >>>  8) & 0xFF;","            this.buffer[offset+3] =  value         & 0xFF;","        }","        if (relative) this.offset += 4;","        return this;","    };","","    /**","     * Writes a 32bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint32}.","     * @function","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.","     * @expose","     */","    ByteBufferPrototype.writeUInt32 = ByteBufferPrototype.writeUint32;","","    /**","     * Reads a 32bit unsigned integer.","     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.","     * @returns {number} Value read","     * @expose","     */","    ByteBufferPrototype.readUint32 = function(offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 4 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);","        }","        var value = 0;","        if (this.littleEndian) {","            value  = this.buffer[offset+2] << 16;","            value |= this.buffer[offset+1] <<  8;","            value |= this.buffer[offset  ];","            value += this.buffer[offset+3] << 24 >>> 0;","        } else {","            value  = this.buffer[offset+1] << 16;","            value |= this.buffer[offset+2] <<  8;","            value |= this.buffer[offset+3];","            value += this.buffer[offset  ] << 24 >>> 0;","        }","        if (relative) this.offset += 4;","        return value;","    };","","    /**","     * Reads a 32bit unsigned integer. This is an alias of {@link ByteBuffer#readUint32}.","     * @function","     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.","     * @returns {number} Value read","     * @expose","     */","    ByteBufferPrototype.readUInt32 = ByteBufferPrototype.readUint32;","","    // types/ints/int64","","    if (Long) {","","        /**","         * Writes a 64bit signed integer.","         * @param {number|!Long} value Value to write","         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.","         * @returns {!ByteBuffer} this","         * @expose","         */","        ByteBufferPrototype.writeInt64 = function(value, offset) {","            var relative = typeof offset === 'undefined';","            if (relative) offset = this.offset;","            if (!this.noAssert) {","                if (typeof value === 'number')","                    value = Long.fromNumber(value);","                else if (typeof value === 'string')","                    value = Long.fromString(value);","                else if (!(value && value instanceof Long))","                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");","                if (typeof offset !== 'number' || offset % 1 !== 0)","                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","                offset >>>= 0;","                if (offset < 0 || offset + 0 > this.buffer.length)","                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","            }","            if (typeof value === 'number')","                value = Long.fromNumber(value);","            else if (typeof value === 'string')","                value = Long.fromString(value);","            offset += 8;","            var capacity6 = this.buffer.length;","            if (offset > capacity6)","                this.resize((capacity6 *= 2) > offset ? capacity6 : offset);","            offset -= 8;","            var lo = value.low,","                hi = value.high;","            if (this.littleEndian) {","                this.buffer[offset+3] = (lo >>> 24) & 0xFF;","                this.buffer[offset+2] = (lo >>> 16) & 0xFF;","                this.buffer[offset+1] = (lo >>>  8) & 0xFF;","                this.buffer[offset  ] =  lo         & 0xFF;","                offset += 4;","                this.buffer[offset+3] = (hi >>> 24) & 0xFF;","                this.buffer[offset+2] = (hi >>> 16) & 0xFF;","                this.buffer[offset+1] = (hi >>>  8) & 0xFF;","                this.buffer[offset  ] =  hi         & 0xFF;","            } else {","                this.buffer[offset  ] = (hi >>> 24) & 0xFF;","                this.buffer[offset+1] = (hi >>> 16) & 0xFF;","                this.buffer[offset+2] = (hi >>>  8) & 0xFF;","                this.buffer[offset+3] =  hi         & 0xFF;","                offset += 4;","                this.buffer[offset  ] = (lo >>> 24) & 0xFF;","                this.buffer[offset+1] = (lo >>> 16) & 0xFF;","                this.buffer[offset+2] = (lo >>>  8) & 0xFF;","                this.buffer[offset+3] =  lo         & 0xFF;","            }","            if (relative) this.offset += 8;","            return this;","        };","","        /**","         * Writes a 64bit signed integer. This is an alias of {@link ByteBuffer#writeInt64}.","         * @param {number|!Long} value Value to write","         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.","         * @returns {!ByteBuffer} this","         * @expose","         */","        ByteBufferPrototype.writeLong = ByteBufferPrototype.writeInt64;","","        /**","         * Reads a 64bit signed integer.","         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.","         * @returns {!Long}","         * @expose","         */","        ByteBufferPrototype.readInt64 = function(offset) {","            var relative = typeof offset === 'undefined';","            if (relative) offset = this.offset;","            if (!this.noAssert) {","                if (typeof offset !== 'number' || offset % 1 !== 0)","                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","                offset >>>= 0;","                if (offset < 0 || offset + 8 > this.buffer.length)","                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.length);","            }","            var lo = 0,","                hi = 0;","            if (this.littleEndian) {","                lo  = this.buffer[offset+2] << 16;","                lo |= this.buffer[offset+1] <<  8;","                lo |= this.buffer[offset  ];","                lo += this.buffer[offset+3] << 24 >>> 0;","                offset += 4;","                hi  = this.buffer[offset+2] << 16;","                hi |= this.buffer[offset+1] <<  8;","                hi |= this.buffer[offset  ];","                hi += this.buffer[offset+3] << 24 >>> 0;","            } else {","                hi  = this.buffer[offset+1] << 16;","                hi |= this.buffer[offset+2] <<  8;","                hi |= this.buffer[offset+3];","                hi += this.buffer[offset  ] << 24 >>> 0;","                offset += 4;","                lo  = this.buffer[offset+1] << 16;","                lo |= this.buffer[offset+2] <<  8;","                lo |= this.buffer[offset+3];","                lo += this.buffer[offset  ] << 24 >>> 0;","            }","            var value = new Long(lo, hi, false);","            if (relative) this.offset += 8;","            return value;","        };","","        /**","         * Reads a 64bit signed integer. This is an alias of {@link ByteBuffer#readInt64}.","         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.","         * @returns {!Long}","         * @expose","         */","        ByteBufferPrototype.readLong = ByteBufferPrototype.readInt64;","","        /**","         * Writes a 64bit unsigned integer.","         * @param {number|!Long} value Value to write","         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.","         * @returns {!ByteBuffer} this","         * @expose","         */","        ByteBufferPrototype.writeUint64 = function(value, offset) {","            var relative = typeof offset === 'undefined';","            if (relative) offset = this.offset;","            if (!this.noAssert) {","                if (typeof value === 'number')","                    value = Long.fromNumber(value);","                else if (typeof value === 'string')","                    value = Long.fromString(value);","                else if (!(value && value instanceof Long))","                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");","                if (typeof offset !== 'number' || offset % 1 !== 0)","                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","                offset >>>= 0;","                if (offset < 0 || offset + 0 > this.buffer.length)","                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","            }","            if (typeof value === 'number')","                value = Long.fromNumber(value);","            else if (typeof value === 'string')","                value = Long.fromString(value);","            offset += 8;","            var capacity7 = this.buffer.length;","            if (offset > capacity7)","                this.resize((capacity7 *= 2) > offset ? capacity7 : offset);","            offset -= 8;","            var lo = value.low,","                hi = value.high;","            if (this.littleEndian) {","                this.buffer[offset+3] = (lo >>> 24) & 0xFF;","                this.buffer[offset+2] = (lo >>> 16) & 0xFF;","                this.buffer[offset+1] = (lo >>>  8) & 0xFF;","                this.buffer[offset  ] =  lo         & 0xFF;","                offset += 4;","                this.buffer[offset+3] = (hi >>> 24) & 0xFF;","                this.buffer[offset+2] = (hi >>> 16) & 0xFF;","                this.buffer[offset+1] = (hi >>>  8) & 0xFF;","                this.buffer[offset  ] =  hi         & 0xFF;","            } else {","                this.buffer[offset  ] = (hi >>> 24) & 0xFF;","                this.buffer[offset+1] = (hi >>> 16) & 0xFF;","                this.buffer[offset+2] = (hi >>>  8) & 0xFF;","                this.buffer[offset+3] =  hi         & 0xFF;","                offset += 4;","                this.buffer[offset  ] = (lo >>> 24) & 0xFF;","                this.buffer[offset+1] = (lo >>> 16) & 0xFF;","                this.buffer[offset+2] = (lo >>>  8) & 0xFF;","                this.buffer[offset+3] =  lo         & 0xFF;","            }","            if (relative) this.offset += 8;","            return this;","        };","","        /**","         * Writes a 64bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint64}.","         * @function","         * @param {number|!Long} value Value to write","         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.","         * @returns {!ByteBuffer} this","         * @expose","         */","        ByteBufferPrototype.writeUInt64 = ByteBufferPrototype.writeUint64;","","        /**","         * Reads a 64bit unsigned integer.","         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.","         * @returns {!Long}","         * @expose","         */","        ByteBufferPrototype.readUint64 = function(offset) {","            var relative = typeof offset === 'undefined';","            if (relative) offset = this.offset;","            if (!this.noAssert) {","                if (typeof offset !== 'number' || offset % 1 !== 0)","                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","                offset >>>= 0;","                if (offset < 0 || offset + 8 > this.buffer.length)","                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.length);","            }","            var lo = 0,","                hi = 0;","            if (this.littleEndian) {","                lo  = this.buffer[offset+2] << 16;","                lo |= this.buffer[offset+1] <<  8;","                lo |= this.buffer[offset  ];","                lo += this.buffer[offset+3] << 24 >>> 0;","                offset += 4;","                hi  = this.buffer[offset+2] << 16;","                hi |= this.buffer[offset+1] <<  8;","                hi |= this.buffer[offset  ];","                hi += this.buffer[offset+3] << 24 >>> 0;","            } else {","                hi  = this.buffer[offset+1] << 16;","                hi |= this.buffer[offset+2] <<  8;","                hi |= this.buffer[offset+3];","                hi += this.buffer[offset  ] << 24 >>> 0;","                offset += 4;","                lo  = this.buffer[offset+1] << 16;","                lo |= this.buffer[offset+2] <<  8;","                lo |= this.buffer[offset+3];","                lo += this.buffer[offset  ] << 24 >>> 0;","            }","            var value = new Long(lo, hi, true);","            if (relative) this.offset += 8;","            return value;","        };","","        /**","         * Reads a 64bit unsigned integer. This is an alias of {@link ByteBuffer#readUint64}.","         * @function","         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.","         * @returns {!Long}","         * @expose","         */","        ByteBufferPrototype.readUInt64 = ByteBufferPrototype.readUint64;","","    } // Long","","","    // types/floats/float32","","    /**","     * Writes a 32bit float.","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.writeFloat32 = function(value, offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof value !== 'number')","                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 0 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","        }","        offset += 4;","        var capacity8 = this.buffer.length;","        if (offset > capacity8)","            this.resize((capacity8 *= 2) > offset ? capacity8 : offset);","        offset -= 4;","        this.littleEndian","            ? this.buffer.writeFloatLE(value, offset, true)","            : this.buffer.writeFloatBE(value, offset, true);","        if (relative) this.offset += 4;","        return this;","    };","","    /**","     * Writes a 32bit float. This is an alias of {@link ByteBuffer#writeFloat32}.","     * @function","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.writeFloat = ByteBufferPrototype.writeFloat32;","","    /**","     * Reads a 32bit float.","     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.","     * @returns {number}","     * @expose","     */","    ByteBufferPrototype.readFloat32 = function(offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 4 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);","        }","        var value = this.littleEndian","            ? this.buffer.readFloatLE(offset, true)","            : this.buffer.readFloatBE(offset, true);","        if (relative) this.offset += 4;","        return value;","    };","","    /**","     * Reads a 32bit float. This is an alias of {@link ByteBuffer#readFloat32}.","     * @function","     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.","     * @returns {number}","     * @expose","     */","    ByteBufferPrototype.readFloat = ByteBufferPrototype.readFloat32;","","    // types/floats/float64","","    /**","     * Writes a 64bit float.","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.writeFloat64 = function(value, offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof value !== 'number')","                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 0 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","        }","        offset += 8;","        var capacity9 = this.buffer.length;","        if (offset > capacity9)","            this.resize((capacity9 *= 2) > offset ? capacity9 : offset);","        offset -= 8;","        this.littleEndian","            ? this.buffer.writeDoubleLE(value, offset, true)","            : this.buffer.writeDoubleBE(value, offset, true);","        if (relative) this.offset += 8;","        return this;","    };","","    /**","     * Writes a 64bit float. This is an alias of {@link ByteBuffer#writeFloat64}.","     * @function","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.writeDouble = ByteBufferPrototype.writeFloat64;","","    /**","     * Reads a 64bit float.","     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.","     * @returns {number}","     * @expose","     */","    ByteBufferPrototype.readFloat64 = function(offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 8 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.length);","        }","        var value = this.littleEndian","            ? this.buffer.readDoubleLE(offset, true)","            : this.buffer.readDoubleBE(offset, true);","        if (relative) this.offset += 8;","        return value;","    };","","    /**","     * Reads a 64bit float. This is an alias of {@link ByteBuffer#readFloat64}.","     * @function","     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.","     * @returns {number}","     * @expose","     */","    ByteBufferPrototype.readDouble = ByteBufferPrototype.readFloat64;","","","    // types/varints/varint32","","    /**","     * Maximum number of bytes required to store a 32bit base 128 variable-length integer.","     * @type {number}","     * @const","     * @expose","     */","    ByteBuffer.MAX_VARINT32_BYTES = 5;","","    /**","     * Calculates the actual number of bytes required to store a 32bit base 128 variable-length integer.","     * @param {number} value Value to encode","     * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT32_BYTES}","     * @expose","     */","    ByteBuffer.calculateVarint32 = function(value) {","        // ref: src/google/protobuf/io/coded_stream.cc","        value = value >>> 0;","             if (value < 1 << 7 ) return 1;","        else if (value < 1 << 14) return 2;","        else if (value < 1 << 21) return 3;","        else if (value < 1 << 28) return 4;","        else                      return 5;","    };","","    /**","     * Zigzag encodes a signed 32bit integer so that it can be effectively used with varint encoding.","     * @param {number} n Signed 32bit integer","     * @returns {number} Unsigned zigzag encoded 32bit integer","     * @expose","     */","    ByteBuffer.zigZagEncode32 = function(n) {","        return (((n |= 0) << 1) ^ (n >> 31)) >>> 0; // ref: src/google/protobuf/wire_format_lite.h","    };","","    /**","     * Decodes a zigzag encoded signed 32bit integer.","     * @param {number} n Unsigned zigzag encoded 32bit integer","     * @returns {number} Signed 32bit integer","     * @expose","     */","    ByteBuffer.zigZagDecode32 = function(n) {","        return ((n >>> 1) ^ -(n & 1)) | 0; // // ref: src/google/protobuf/wire_format_lite.h","    };","","    /**","     * Writes a 32bit base 128 variable-length integer.","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes","     *  written if omitted.","     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written","     * @expose","     */","    ByteBufferPrototype.writeVarint32 = function(value, offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof value !== 'number' || value % 1 !== 0)","                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");","            value |= 0;","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 0 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","        }","        var size = ByteBuffer.calculateVarint32(value),","            b;","        offset += size;","        var capacity10 = this.buffer.length;","        if (offset > capacity10)","            this.resize((capacity10 *= 2) > offset ? capacity10 : offset);","        offset -= size;","        value >>>= 0;","        while (value >= 0x80) {","            b = (value & 0x7f) | 0x80;","            this.buffer[offset++] = b;","            value >>>= 7;","        }","        this.buffer[offset++] = value;","        if (relative) {","            this.offset = offset;","            return this;","        }","        return size;","    };","","    /**","     * Writes a zig-zag encoded (signed) 32bit base 128 variable-length integer.","     * @param {number} value Value to write","     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes","     *  written if omitted.","     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written","     * @expose","     */","    ByteBufferPrototype.writeVarint32ZigZag = function(value, offset) {","        return this.writeVarint32(ByteBuffer.zigZagEncode32(value), offset);","    };","","    /**","     * Reads a 32bit base 128 variable-length integer.","     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes","     *  written if omitted.","     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read","     *  and the actual number of bytes read.","     * @throws {Error} If it's not a valid varint. Has a property `truncated = true` if there is not enough data available","     *  to fully decode the varint.","     * @expose","     */","    ByteBufferPrototype.readVarint32 = function(offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 1 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);","        }","        var c = 0,","            value = 0 >>> 0,","            b;","        do {","            if (!this.noAssert && offset > this.limit) {","                var err = Error(\"Truncated\");","                err['truncated'] = true;","                throw err;","            }","            b = this.buffer[offset++];","            if (c < 5)","                value |= (b & 0x7f) << (7*c);","            ++c;","        } while ((b & 0x80) !== 0);","        value |= 0;","        if (relative) {","            this.offset = offset;","            return value;","        }","        return {","            \"value\": value,","            \"length\": c","        };","    };","","    /**","     * Reads a zig-zag encoded (signed) 32bit base 128 variable-length integer.","     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes","     *  written if omitted.","     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read","     *  and the actual number of bytes read.","     * @throws {Error} If it's not a valid varint","     * @expose","     */","    ByteBufferPrototype.readVarint32ZigZag = function(offset) {","        var val = this.readVarint32(offset);","        if (typeof val === 'object')","            val[\"value\"] = ByteBuffer.zigZagDecode32(val[\"value\"]);","        else","            val = ByteBuffer.zigZagDecode32(val);","        return val;","    };","","    // types/varints/varint64","","    if (Long) {","","        /**","         * Maximum number of bytes required to store a 64bit base 128 variable-length integer.","         * @type {number}","         * @const","         * @expose","         */","        ByteBuffer.MAX_VARINT64_BYTES = 10;","","        /**","         * Calculates the actual number of bytes required to store a 64bit base 128 variable-length integer.","         * @param {number|!Long} value Value to encode","         * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT64_BYTES}","         * @expose","         */","        ByteBuffer.calculateVarint64 = function(value) {","            if (typeof value === 'number')","                value = Long.fromNumber(value);","            else if (typeof value === 'string')","                value = Long.fromString(value);","            // ref: src/google/protobuf/io/coded_stream.cc","            var part0 = value.toInt() >>> 0,","                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,","                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;","            if (part2 == 0) {","                if (part1 == 0) {","                    if (part0 < 1 << 14)","                        return part0 < 1 << 7 ? 1 : 2;","                    else","                        return part0 < 1 << 21 ? 3 : 4;","                } else {","                    if (part1 < 1 << 14)","                        return part1 < 1 << 7 ? 5 : 6;","                    else","                        return part1 < 1 << 21 ? 7 : 8;","                }","            } else","                return part2 < 1 << 7 ? 9 : 10;","        };","","        /**","         * Zigzag encodes a signed 64bit integer so that it can be effectively used with varint encoding.","         * @param {number|!Long} value Signed long","         * @returns {!Long} Unsigned zigzag encoded long","         * @expose","         */","        ByteBuffer.zigZagEncode64 = function(value) {","            if (typeof value === 'number')","                value = Long.fromNumber(value, false);","            else if (typeof value === 'string')","                value = Long.fromString(value, false);","            else if (value.unsigned !== false) value = value.toSigned();","            // ref: src/google/protobuf/wire_format_lite.h","            return value.shiftLeft(1).xor(value.shiftRight(63)).toUnsigned();","        };","","        /**","         * Decodes a zigzag encoded signed 64bit integer.","         * @param {!Long|number} value Unsigned zigzag encoded long or JavaScript number","         * @returns {!Long} Signed long","         * @expose","         */","        ByteBuffer.zigZagDecode64 = function(value) {","            if (typeof value === 'number')","                value = Long.fromNumber(value, false);","            else if (typeof value === 'string')","                value = Long.fromString(value, false);","            else if (value.unsigned !== false) value = value.toSigned();","            // ref: src/google/protobuf/wire_format_lite.h","            return value.shiftRightUnsigned(1).xor(value.and(Long.ONE).toSigned().negate()).toSigned();","        };","","        /**","         * Writes a 64bit base 128 variable-length integer.","         * @param {number|Long} value Value to write","         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes","         *  written if omitted.","         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.","         * @expose","         */","        ByteBufferPrototype.writeVarint64 = function(value, offset) {","            var relative = typeof offset === 'undefined';","            if (relative) offset = this.offset;","            if (!this.noAssert) {","                if (typeof value === 'number')","                    value = Long.fromNumber(value);","                else if (typeof value === 'string')","                    value = Long.fromString(value);","                else if (!(value && value instanceof Long))","                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");","                if (typeof offset !== 'number' || offset % 1 !== 0)","                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","                offset >>>= 0;","                if (offset < 0 || offset + 0 > this.buffer.length)","                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","            }","            if (typeof value === 'number')","                value = Long.fromNumber(value, false);","            else if (typeof value === 'string')","                value = Long.fromString(value, false);","            else if (value.unsigned !== false) value = value.toSigned();","            var size = ByteBuffer.calculateVarint64(value),","                part0 = value.toInt() >>> 0,","                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,","                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;","            offset += size;","            var capacity11 = this.buffer.length;","            if (offset > capacity11)","                this.resize((capacity11 *= 2) > offset ? capacity11 : offset);","            offset -= size;","            switch (size) {","                case 10: this.buffer[offset+9] = (part2 >>>  7) & 0x01;","                case 9 : this.buffer[offset+8] = size !== 9 ? (part2       ) | 0x80 : (part2       ) & 0x7F;","                case 8 : this.buffer[offset+7] = size !== 8 ? (part1 >>> 21) | 0x80 : (part1 >>> 21) & 0x7F;","                case 7 : this.buffer[offset+6] = size !== 7 ? (part1 >>> 14) | 0x80 : (part1 >>> 14) & 0x7F;","                case 6 : this.buffer[offset+5] = size !== 6 ? (part1 >>>  7) | 0x80 : (part1 >>>  7) & 0x7F;","                case 5 : this.buffer[offset+4] = size !== 5 ? (part1       ) | 0x80 : (part1       ) & 0x7F;","                case 4 : this.buffer[offset+3] = size !== 4 ? (part0 >>> 21) | 0x80 : (part0 >>> 21) & 0x7F;","                case 3 : this.buffer[offset+2] = size !== 3 ? (part0 >>> 14) | 0x80 : (part0 >>> 14) & 0x7F;","                case 2 : this.buffer[offset+1] = size !== 2 ? (part0 >>>  7) | 0x80 : (part0 >>>  7) & 0x7F;","                case 1 : this.buffer[offset  ] = size !== 1 ? (part0       ) | 0x80 : (part0       ) & 0x7F;","            }","            if (relative) {","                this.offset += size;","                return this;","            } else {","                return size;","            }","        };","","        /**","         * Writes a zig-zag encoded 64bit base 128 variable-length integer.","         * @param {number|Long} value Value to write","         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes","         *  written if omitted.","         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.","         * @expose","         */","        ByteBufferPrototype.writeVarint64ZigZag = function(value, offset) {","            return this.writeVarint64(ByteBuffer.zigZagEncode64(value), offset);","        };","","        /**","         * Reads a 64bit base 128 variable-length integer. Requires Long.js.","         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes","         *  read if omitted.","         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and","         *  the actual number of bytes read.","         * @throws {Error} If it's not a valid varint","         * @expose","         */","        ByteBufferPrototype.readVarint64 = function(offset) {","            var relative = typeof offset === 'undefined';","            if (relative) offset = this.offset;","            if (!this.noAssert) {","                if (typeof offset !== 'number' || offset % 1 !== 0)","                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","                offset >>>= 0;","                if (offset < 0 || offset + 1 > this.buffer.length)","                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);","            }","            // ref: src/google/protobuf/io/coded_stream.cc","            var start = offset,","                part0 = 0,","                part1 = 0,","                part2 = 0,","                b  = 0;","            b = this.buffer[offset++]; part0  = (b & 0x7F)      ; if ( b & 0x80                                                   ) {","            b = this.buffer[offset++]; part0 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {","            b = this.buffer[offset++]; part0 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {","            b = this.buffer[offset++]; part0 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {","            b = this.buffer[offset++]; part1  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {","            b = this.buffer[offset++]; part1 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {","            b = this.buffer[offset++]; part1 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {","            b = this.buffer[offset++]; part1 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {","            b = this.buffer[offset++]; part2  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {","            b = this.buffer[offset++]; part2 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {","            throw Error(\"Buffer overrun\"); }}}}}}}}}}","            var value = Long.fromBits(part0 | (part1 << 28), (part1 >>> 4) | (part2) << 24, false);","            if (relative) {","                this.offset = offset;","                return value;","            } else {","                return {","                    'value': value,","                    'length': offset-start","                };","            }","        };","","        /**","         * Reads a zig-zag encoded 64bit base 128 variable-length integer. Requires Long.js.","         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes","         *  read if omitted.","         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and","         *  the actual number of bytes read.","         * @throws {Error} If it's not a valid varint","         * @expose","         */","        ByteBufferPrototype.readVarint64ZigZag = function(offset) {","            var val = this.readVarint64(offset);","            if (val && val['value'] instanceof Long)","                val[\"value\"] = ByteBuffer.zigZagDecode64(val[\"value\"]);","            else","                val = ByteBuffer.zigZagDecode64(val);","            return val;","        };","","    } // Long","","","    // types/strings/cstring","","    /**","     * Writes a NULL-terminated UTF8 encoded string. For this to work the specified string must not contain any NULL","     *  characters itself.","     * @param {string} str String to write","     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes","     *  contained in `str` + 1 if omitted.","     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written","     * @expose","     */","    ByteBufferPrototype.writeCString = function(str, offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        var i,","            k = str.length;","        if (!this.noAssert) {","            if (typeof str !== 'string')","                throw TypeError(\"Illegal str: Not a string\");","            for (i=0; i<k; ++i) {","                if (str.charCodeAt(i) === 0)","                    throw RangeError(\"Illegal str: Contains NULL-characters\");","            }","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 0 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","        }","        // UTF8 strings do not contain zero bytes in between except for the zero character, so:","        k = Buffer.byteLength(str, \"utf8\");","        offset += k+1;","        var capacity12 = this.buffer.length;","        if (offset > capacity12)","            this.resize((capacity12 *= 2) > offset ? capacity12 : offset);","        offset -= k+1;","        offset += this.buffer.write(str, offset, k, \"utf8\");","        this.buffer[offset++] = 0;","        if (relative) {","            this.offset = offset;","            return this;","        }","        return k;","    };","","    /**","     * Reads a NULL-terminated UTF8 encoded string. For this to work the string read must not contain any NULL characters","     *  itself.","     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes","     *  read if omitted.","     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string","     *  read and the actual number of bytes read.","     * @expose","     */","    ByteBufferPrototype.readCString = function(offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 1 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);","        }","        var start = offset,","            temp;","        // UTF8 strings do not contain zero bytes in between except for the zero character itself, so:","        do {","            if (offset >= this.buffer.length)","                throw RangeError(\"Index out of range: \"+offset+\" <= \"+this.buffer.length);","            temp = this.buffer[offset++];","        } while (temp !== 0);","        var str = this.buffer.toString(\"utf8\", start, offset-1);","        if (relative) {","            this.offset = offset;","            return str;","        } else {","            return {","                \"string\": str,","                \"length\": offset - start","            };","        }","    };","","    // types/strings/istring","","    /**","     * Writes a length as uint32 prefixed UTF8 encoded string.","     * @param {string} str String to write","     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes","     *  written if omitted.","     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written","     * @expose","     * @see ByteBuffer#writeVarint32","     */","    ByteBufferPrototype.writeIString = function(str, offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof str !== 'string')","                throw TypeError(\"Illegal str: Not a string\");","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 0 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","        }","        var start = offset,","            k;","        k = Buffer.byteLength(str, \"utf8\");","        offset += 4+k;","        var capacity13 = this.buffer.length;","        if (offset > capacity13)","            this.resize((capacity13 *= 2) > offset ? capacity13 : offset);","        offset -= 4+k;","        if (this.littleEndian) {","            this.buffer[offset+3] = (k >>> 24) & 0xFF;","            this.buffer[offset+2] = (k >>> 16) & 0xFF;","            this.buffer[offset+1] = (k >>>  8) & 0xFF;","            this.buffer[offset  ] =  k         & 0xFF;","        } else {","            this.buffer[offset  ] = (k >>> 24) & 0xFF;","            this.buffer[offset+1] = (k >>> 16) & 0xFF;","            this.buffer[offset+2] = (k >>>  8) & 0xFF;","            this.buffer[offset+3] =  k         & 0xFF;","        }","        offset += 4;","        offset += this.buffer.write(str, offset, k, \"utf8\");","        if (relative) {","            this.offset = offset;","            return this;","        }","        return offset - start;","    };","","    /**","     * Reads a length as uint32 prefixed UTF8 encoded string.","     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes","     *  read if omitted.","     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string","     *  read and the actual number of bytes read.","     * @expose","     * @see ByteBuffer#readVarint32","     */","    ByteBufferPrototype.readIString = function(offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 4 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);","        }","        var start = offset;","        var len = this.readUint32(offset);","        var str = this.readUTF8String(len, ByteBuffer.METRICS_BYTES, offset += 4);","        offset += str['length'];","        if (relative) {","            this.offset = offset;","            return str['string'];","        } else {","            return {","                'string': str['string'],","                'length': offset - start","            };","        }","    };","","    // types/strings/utf8string","","    /**","     * Metrics representing number of UTF8 characters. Evaluates to `c`.","     * @type {string}","     * @const","     * @expose","     */","    ByteBuffer.METRICS_CHARS = 'c';","","    /**","     * Metrics representing number of bytes. Evaluates to `b`.","     * @type {string}","     * @const","     * @expose","     */","    ByteBuffer.METRICS_BYTES = 'b';","","    /**","     * Writes an UTF8 encoded string.","     * @param {string} str String to write","     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.","     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.","     * @expose","     */","    ByteBufferPrototype.writeUTF8String = function(str, offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 0 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","        }","        var k;","        k = Buffer.byteLength(str, \"utf8\");","        offset += k;","        var capacity14 = this.buffer.length;","        if (offset > capacity14)","            this.resize((capacity14 *= 2) > offset ? capacity14 : offset);","        offset -= k;","        offset += this.buffer.write(str, offset, k, \"utf8\");","        if (relative) {","            this.offset = offset;","            return this;","        }","        return k;","    };","","    /**","     * Writes an UTF8 encoded string. This is an alias of {@link ByteBuffer#writeUTF8String}.","     * @function","     * @param {string} str String to write","     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.","     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.","     * @expose","     */","    ByteBufferPrototype.writeString = ByteBufferPrototype.writeUTF8String;","","    /**","     * Calculates the number of UTF8 characters of a string. JavaScript itself uses UTF-16, so that a string's","     *  `length` property does not reflect its actual UTF8 size if it contains code points larger than 0xFFFF.","     * @param {string} str String to calculate","     * @returns {number} Number of UTF8 characters","     * @expose","     */","    ByteBuffer.calculateUTF8Chars = function(str) {","        return utfx.calculateUTF16asUTF8(stringSource(str))[0];","    };","","    /**","     * Calculates the number of UTF8 bytes of a string.","     * @param {string} str String to calculate","     * @returns {number} Number of UTF8 bytes","     * @expose","     */","    ByteBuffer.calculateUTF8Bytes = function(str) {","        if (typeof str !== 'string')","            throw TypeError(\"Illegal argument: \"+(typeof str));","        return Buffer.byteLength(str, \"utf8\");","    };","","    /**","     * Calculates the number of UTF8 bytes of a string. This is an alias of {@link ByteBuffer.calculateUTF8Bytes}.","     * @function","     * @param {string} str String to calculate","     * @returns {number} Number of UTF8 bytes","     * @expose","     */","    ByteBuffer.calculateString = ByteBuffer.calculateUTF8Bytes;","","    /**","     * Reads an UTF8 encoded string.","     * @param {number} length Number of characters or bytes to read.","     * @param {string=} metrics Metrics specifying what `length` is meant to count. Defaults to","     *  {@link ByteBuffer.METRICS_CHARS}.","     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes","     *  read if omitted.","     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string","     *  read and the actual number of bytes read.","     * @expose","     */","    ByteBufferPrototype.readUTF8String = function(length, metrics, offset) {","        if (typeof metrics === 'number') {","            offset = metrics;","            metrics = undefined;","        }","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (typeof metrics === 'undefined') metrics = ByteBuffer.METRICS_CHARS;","        if (!this.noAssert) {","            if (typeof length !== 'number' || length % 1 !== 0)","                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");","            length |= 0;","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 0 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","        }","        var i = 0,","            start = offset,","            temp,","            sd;","        if (metrics === ByteBuffer.METRICS_CHARS) { // The same for node and the browser","            sd = stringDestination();","            utfx.decodeUTF8(function() {","                return i < length && offset < this.limit ? this.buffer[offset++] : null;","            }.bind(this), function(cp) {","                ++i; utfx.UTF8toUTF16(cp, sd);","            });","            if (i !== length)","                throw RangeError(\"Illegal range: Truncated data, \"+i+\" == \"+length);","            if (relative) {","                this.offset = offset;","                return sd();","            } else {","                return {","                    \"string\": sd(),","                    \"length\": offset - start","                };","            }","        } else if (metrics === ByteBuffer.METRICS_BYTES) {","            if (!this.noAssert) {","                if (typeof offset !== 'number' || offset % 1 !== 0)","                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","                offset >>>= 0;","                if (offset < 0 || offset + length > this.buffer.length)","                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.length);","            }","            temp = this.buffer.toString(\"utf8\", offset, offset+length);","            if (relative) {","                this.offset += length;","                return temp;","            } else {","                return {","                    'string': temp,","                    'length': length","                };","            }","        } else","            throw TypeError(\"Unsupported metrics: \"+metrics);","    };","","    /**","     * Reads an UTF8 encoded string. This is an alias of {@link ByteBuffer#readUTF8String}.","     * @function","     * @param {number} length Number of characters or bytes to read","     * @param {number=} metrics Metrics specifying what `n` is meant to count. Defaults to","     *  {@link ByteBuffer.METRICS_CHARS}.","     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes","     *  read if omitted.","     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string","     *  read and the actual number of bytes read.","     * @expose","     */","    ByteBufferPrototype.readString = ByteBufferPrototype.readUTF8String;","","    // types/strings/vstring","","    /**","     * Writes a length as varint32 prefixed UTF8 encoded string.","     * @param {string} str String to write","     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes","     *  written if omitted.","     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written","     * @expose","     * @see ByteBuffer#writeVarint32","     */","    ByteBufferPrototype.writeVString = function(str, offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof str !== 'string')","                throw TypeError(\"Illegal str: Not a string\");","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 0 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","        }","        var start = offset,","            k, l;","        k = Buffer.byteLength(str, \"utf8\");","        l = ByteBuffer.calculateVarint32(k);","        offset += l+k;","        var capacity15 = this.buffer.length;","        if (offset > capacity15)","            this.resize((capacity15 *= 2) > offset ? capacity15 : offset);","        offset -= l+k;","        offset += this.writeVarint32(k, offset);","        offset += this.buffer.write(str, offset, k, \"utf8\");","        if (relative) {","            this.offset = offset;","            return this;","        }","        return offset - start;","    };","","    /**","     * Reads a length as varint32 prefixed UTF8 encoded string.","     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes","     *  read if omitted.","     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string","     *  read and the actual number of bytes read.","     * @expose","     * @see ByteBuffer#readVarint32","     */","    ByteBufferPrototype.readVString = function(offset) {","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 1 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);","        }","        var start = offset;","        var len = this.readVarint32(offset);","        var str = this.readUTF8String(len['value'], ByteBuffer.METRICS_BYTES, offset += len['length']);","        offset += str['length'];","        if (relative) {","            this.offset = offset;","            return str['string'];","        } else {","            return {","                'string': str['string'],","                'length': offset - start","            };","        }","    };","","","    /**","     * Appends some data to this ByteBuffer. This will overwrite any contents behind the specified offset up to the appended","     *  data's length.","     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string} source Data to append. If `source` is a ByteBuffer, its","     * offsets will be modified according to the performed read operation.","     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")","     * @param {number=} offset Offset to append at. Will use and increase {@link ByteBuffer#offset} by the number of bytes","     *  written if omitted.","     * @returns {!ByteBuffer} this","     * @expose","     * @example A relative `<01 02>03.append(<04 05>)` will result in `<01 02 04 05>, 04 05|`","     * @example An absolute `<01 02>03.append(04 05>, 1)` will result in `<01 04>05, 04 05|`","     */","    ByteBufferPrototype.append = function(source, encoding, offset) {","        if (typeof encoding === 'number' || typeof encoding !== 'string') {","            offset = encoding;","            encoding = undefined;","        }","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 0 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","        }","        if (!(source instanceof ByteBuffer))","            source = ByteBuffer.wrap(source, encoding);","        var length = source.limit - source.offset;","        if (length <= 0) return this; // Nothing to append","        offset += length;","        var capacity16 = this.buffer.length;","        if (offset > capacity16)","            this.resize((capacity16 *= 2) > offset ? capacity16 : offset);","        offset -= length;","        source.buffer.copy(this.buffer, offset, source.offset, source.limit);","        source.offset += length;","        if (relative) this.offset += length;","        return this;","    };","","    /**","     * Appends this ByteBuffer's contents to another ByteBuffer. This will overwrite any contents at and after the","        specified offset up to the length of this ByteBuffer's data.","     * @param {!ByteBuffer} target Target ByteBuffer","     * @param {number=} offset Offset to append to. Will use and increase {@link ByteBuffer#offset} by the number of bytes","     *  read if omitted.","     * @returns {!ByteBuffer} this","     * @expose","     * @see ByteBuffer#append","     */","    ByteBufferPrototype.appendTo = function(target, offset) {","        target.append(this, offset);","        return this;","    };","","    /**","     * Enables or disables assertions of argument types and offsets. Assertions are enabled by default but you can opt to","     *  disable them if your code already makes sure that everything is valid.","     * @param {boolean} assert `true` to enable assertions, otherwise `false`","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.assert = function(assert) {","        this.noAssert = !assert;","        return this;","    };","","    /**","     * Gets the capacity of this ByteBuffer's backing buffer.","     * @returns {number} Capacity of the backing buffer","     * @expose","     */","    ByteBufferPrototype.capacity = function() {","        return this.buffer.length;","    };","    /**","     * Clears this ByteBuffer's offsets by setting {@link ByteBuffer#offset} to `0` and {@link ByteBuffer#limit} to the","     *  backing buffer's capacity. Discards {@link ByteBuffer#markedOffset}.","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.clear = function() {","        this.offset = 0;","        this.limit = this.buffer.length;","        this.markedOffset = -1;","        return this;","    };","","    /**","     * Creates a cloned instance of this ByteBuffer, preset with this ByteBuffer's values for {@link ByteBuffer#offset},","     *  {@link ByteBuffer#markedOffset} and {@link ByteBuffer#limit}.","     * @param {boolean=} copy Whether to copy the backing buffer or to return another view on the same, defaults to `false`","     * @returns {!ByteBuffer} Cloned instance","     * @expose","     */","    ByteBufferPrototype.clone = function(copy) {","        var bb = new ByteBuffer(0, this.littleEndian, this.noAssert);","        if (copy) {","            var buffer = new Buffer(this.buffer.length);","            this.buffer.copy(buffer);","            bb.buffer = buffer;","        } else {","            bb.buffer = this.buffer;","        }","        bb.offset = this.offset;","        bb.markedOffset = this.markedOffset;","        bb.limit = this.limit;","        return bb;","    };","","    /**","     * Compacts this ByteBuffer to be backed by a {@link ByteBuffer#buffer} of its contents' length. Contents are the bytes","     *  between {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. Will set `offset = 0` and `limit = capacity` and","     *  adapt {@link ByteBuffer#markedOffset} to the same relative position if set.","     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}","     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.compact = function(begin, end) {","        if (typeof begin === 'undefined') begin = this.offset;","        if (typeof end === 'undefined') end = this.limit;","        if (!this.noAssert) {","            if (typeof begin !== 'number' || begin % 1 !== 0)","                throw TypeError(\"Illegal begin: Not an integer\");","            begin >>>= 0;","            if (typeof end !== 'number' || end % 1 !== 0)","                throw TypeError(\"Illegal end: Not an integer\");","            end >>>= 0;","            if (begin < 0 || begin > end || end > this.buffer.length)","                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);","        }","        if (begin === 0 && end === this.buffer.length)","            return this; // Already compacted","        var len = end - begin;","        if (len === 0) {","            this.buffer = EMPTY_BUFFER;","            if (this.markedOffset >= 0) this.markedOffset -= begin;","            this.offset = 0;","            this.limit = 0;","            return this;","        }","        var buffer = new Buffer(len);","        this.buffer.copy(buffer, 0, begin, end);","        this.buffer = buffer;","        if (this.markedOffset >= 0) this.markedOffset -= begin;","        this.offset = 0;","        this.limit = len;","        return this;","    };","","    /**","     * Creates a copy of this ByteBuffer's contents. Contents are the bytes between {@link ByteBuffer#offset} and","     *  {@link ByteBuffer#limit}.","     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.","     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.","     * @returns {!ByteBuffer} Copy","     * @expose","     */","    ByteBufferPrototype.copy = function(begin, end) {","        if (typeof begin === 'undefined') begin = this.offset;","        if (typeof end === 'undefined') end = this.limit;","        if (!this.noAssert) {","            if (typeof begin !== 'number' || begin % 1 !== 0)","                throw TypeError(\"Illegal begin: Not an integer\");","            begin >>>= 0;","            if (typeof end !== 'number' || end % 1 !== 0)","                throw TypeError(\"Illegal end: Not an integer\");","            end >>>= 0;","            if (begin < 0 || begin > end || end > this.buffer.length)","                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);","        }","        if (begin === end)","            return new ByteBuffer(0, this.littleEndian, this.noAssert);","        var capacity = end - begin,","            bb = new ByteBuffer(capacity, this.littleEndian, this.noAssert);","        bb.offset = 0;","        bb.limit = capacity;","        if (bb.markedOffset >= 0) bb.markedOffset -= begin;","        this.copyTo(bb, 0, begin, end);","        return bb;","    };","","    /**","     * Copies this ByteBuffer's contents to another ByteBuffer. Contents are the bytes between {@link ByteBuffer#offset} and","     *  {@link ByteBuffer#limit}.","     * @param {!ByteBuffer} target Target ByteBuffer","     * @param {number=} targetOffset Offset to copy to. Will use and increase the target's {@link ByteBuffer#offset}","     *  by the number of bytes copied if omitted.","     * @param {number=} sourceOffset Offset to start copying from. Will use and increase {@link ByteBuffer#offset} by the","     *  number of bytes copied if omitted.","     * @param {number=} sourceLimit Offset to end copying from, defaults to {@link ByteBuffer#limit}","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.copyTo = function(target, targetOffset, sourceOffset, sourceLimit) {","        var relative,","            targetRelative;","        if (!this.noAssert) {","            if (!ByteBuffer.isByteBuffer(target))","                throw TypeError(\"Illegal target: Not a ByteBuffer\");","        }","        targetOffset = (targetRelative = typeof targetOffset === 'undefined') ? target.offset : targetOffset | 0;","        sourceOffset = (relative = typeof sourceOffset === 'undefined') ? this.offset : sourceOffset | 0;","        sourceLimit = typeof sourceLimit === 'undefined' ? this.limit : sourceLimit | 0;","","        if (targetOffset < 0 || targetOffset > target.buffer.length)","            throw RangeError(\"Illegal target range: 0 <= \"+targetOffset+\" <= \"+target.buffer.length);","        if (sourceOffset < 0 || sourceLimit > this.buffer.length)","            throw RangeError(\"Illegal source range: 0 <= \"+sourceOffset+\" <= \"+this.buffer.length);","","        var len = sourceLimit - sourceOffset;","        if (len === 0)","            return target; // Nothing to copy","","        target.ensureCapacity(targetOffset + len);","","        this.buffer.copy(target.buffer, targetOffset, sourceOffset, sourceLimit);","","        if (relative) this.offset += len;","        if (targetRelative) target.offset += len;","","        return this;","    };","","    /**","     * Makes sure that this ByteBuffer is backed by a {@link ByteBuffer#buffer} of at least the specified capacity. If the","     *  current capacity is exceeded, it will be doubled. If double the current capacity is less than the required capacity,","     *  the required capacity will be used instead.","     * @param {number} capacity Required capacity","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.ensureCapacity = function(capacity) {","        var current = this.buffer.length;","        if (current < capacity)","            return this.resize((current *= 2) > capacity ? current : capacity);","        return this;","    };","","    /**","     * Overwrites this ByteBuffer's contents with the specified value. Contents are the bytes between","     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.","     * @param {number|string} value Byte value to fill with. If given as a string, the first character is used.","     * @param {number=} begin Begin offset. Will use and increase {@link ByteBuffer#offset} by the number of bytes","     *  written if omitted. defaults to {@link ByteBuffer#offset}.","     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.","     * @returns {!ByteBuffer} this","     * @expose","     * @example `someByteBuffer.clear().fill(0)` fills the entire backing buffer with zeroes","     */","    ByteBufferPrototype.fill = function(value, begin, end) {","        var relative = typeof begin === 'undefined';","        if (relative) begin = this.offset;","        if (typeof value === 'string' && value.length > 0)","            value = value.charCodeAt(0);","        if (typeof begin === 'undefined') begin = this.offset;","        if (typeof end === 'undefined') end = this.limit;","        if (!this.noAssert) {","            if (typeof value !== 'number' || value % 1 !== 0)","                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");","            value |= 0;","            if (typeof begin !== 'number' || begin % 1 !== 0)","                throw TypeError(\"Illegal begin: Not an integer\");","            begin >>>= 0;","            if (typeof end !== 'number' || end % 1 !== 0)","                throw TypeError(\"Illegal end: Not an integer\");","            end >>>= 0;","            if (begin < 0 || begin > end || end > this.buffer.length)","                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);","        }","        if (begin >= end)","            return this; // Nothing to fill","        this.buffer.fill(value, begin, end);","        begin = end;","        if (relative) this.offset = begin;","        return this;","    };","","    /**","     * Makes this ByteBuffer ready for a new sequence of write or relative read operations. Sets `limit = offset` and","     *  `offset = 0`. Make sure always to flip a ByteBuffer when all relative read or write operations are complete.","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.flip = function() {","        this.limit = this.offset;","        this.offset = 0;","        return this;","    };","    /**","     * Marks an offset on this ByteBuffer to be used later.","     * @param {number=} offset Offset to mark. Defaults to {@link ByteBuffer#offset}.","     * @returns {!ByteBuffer} this","     * @throws {TypeError} If `offset` is not a valid number","     * @throws {RangeError} If `offset` is out of bounds","     * @see ByteBuffer#reset","     * @expose","     */","    ByteBufferPrototype.mark = function(offset) {","        offset = typeof offset === 'undefined' ? this.offset : offset;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 0 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","        }","        this.markedOffset = offset;","        return this;","    };","    /**","     * Sets the byte order.","     * @param {boolean} littleEndian `true` for little endian byte order, `false` for big endian","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.order = function(littleEndian) {","        if (!this.noAssert) {","            if (typeof littleEndian !== 'boolean')","                throw TypeError(\"Illegal littleEndian: Not a boolean\");","        }","        this.littleEndian = !!littleEndian;","        return this;","    };","","    /**","     * Switches (to) little endian byte order.","     * @param {boolean=} littleEndian Defaults to `true`, otherwise uses big endian","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.LE = function(littleEndian) {","        this.littleEndian = typeof littleEndian !== 'undefined' ? !!littleEndian : true;","        return this;","    };","","    /**","     * Switches (to) big endian byte order.","     * @param {boolean=} bigEndian Defaults to `true`, otherwise uses little endian","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.BE = function(bigEndian) {","        this.littleEndian = typeof bigEndian !== 'undefined' ? !bigEndian : false;","        return this;","    };","    /**","     * Prepends some data to this ByteBuffer. This will overwrite any contents before the specified offset up to the","     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer","     *  will be resized and its contents moved accordingly.","     * @param {!ByteBuffer|string||!Buffer} source Data to prepend. If `source` is a ByteBuffer, its offset will be modified","     *  according to the performed read operation.","     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")","     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes","     *  prepended if omitted.","     * @returns {!ByteBuffer} this","     * @expose","     * @example A relative `00<01 02 03>.prepend(<04 05>)` results in `<04 05 01 02 03>, 04 05|`","     * @example An absolute `00<01 02 03>.prepend(<04 05>, 2)` results in `04<05 02 03>, 04 05|`","     */","    ByteBufferPrototype.prepend = function(source, encoding, offset) {","        if (typeof encoding === 'number' || typeof encoding !== 'string') {","            offset = encoding;","            encoding = undefined;","        }","        var relative = typeof offset === 'undefined';","        if (relative) offset = this.offset;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","            offset >>>= 0;","            if (offset < 0 || offset + 0 > this.buffer.length)","                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);","        }","        if (!(source instanceof ByteBuffer))","            source = ByteBuffer.wrap(source, encoding);","        var len = source.limit - source.offset;","        if (len <= 0) return this; // Nothing to prepend","        var diff = len - offset;","        if (diff > 0) { // Not enough space before offset, so resize + move","            var buffer = new Buffer(this.buffer.length + diff);","            this.buffer.copy(buffer, len, offset, this.buffer.length);","            this.buffer = buffer;","            this.offset += diff;","            if (this.markedOffset >= 0) this.markedOffset += diff;","            this.limit += diff;","            offset += diff;","        }        source.buffer.copy(this.buffer, offset - len, source.offset, source.limit);","","        source.offset = source.limit;","        if (relative)","            this.offset -= len;","        return this;","    };","","    /**","     * Prepends this ByteBuffer to another ByteBuffer. This will overwrite any contents before the specified offset up to the","     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer","     *  will be resized and its contents moved accordingly.","     * @param {!ByteBuffer} target Target ByteBuffer","     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes","     *  prepended if omitted.","     * @returns {!ByteBuffer} this","     * @expose","     * @see ByteBuffer#prepend","     */","    ByteBufferPrototype.prependTo = function(target, offset) {","        target.prepend(this, offset);","        return this;","    };","    /**","     * Prints debug information about this ByteBuffer's contents.","     * @param {function(string)=} out Output function to call, defaults to console.log","     * @expose","     */","    ByteBufferPrototype.printDebug = function(out) {","        if (typeof out !== 'function') out = console.log.bind(console);","        out(","            this.toString()+\"\\n\"+","            \"-------------------------------------------------------------------\\n\"+","            this.toDebug(/* columns */ true)","        );","    };","","    /**","     * Gets the number of remaining readable bytes. Contents are the bytes between {@link ByteBuffer#offset} and","     *  {@link ByteBuffer#limit}, so this returns `limit - offset`.","     * @returns {number} Remaining readable bytes. May be negative if `offset > limit`.","     * @expose","     */","    ByteBufferPrototype.remaining = function() {","        return this.limit - this.offset;","    };","    /**","     * Resets this ByteBuffer's {@link ByteBuffer#offset}. If an offset has been marked through {@link ByteBuffer#mark}","     *  before, `offset` will be set to {@link ByteBuffer#markedOffset}, which will then be discarded. If no offset has been","     *  marked, sets `offset = 0`.","     * @returns {!ByteBuffer} this","     * @see ByteBuffer#mark","     * @expose","     */","    ByteBufferPrototype.reset = function() {","        if (this.markedOffset >= 0) {","            this.offset = this.markedOffset;","            this.markedOffset = -1;","        } else {","            this.offset = 0;","        }","        return this;","    };","    /**","     * Resizes this ByteBuffer to be backed by a buffer of at least the given capacity. Will do nothing if already that","     *  large or larger.","     * @param {number} capacity Capacity required","     * @returns {!ByteBuffer} this","     * @throws {TypeError} If `capacity` is not a number","     * @throws {RangeError} If `capacity < 0`","     * @expose","     */","    ByteBufferPrototype.resize = function(capacity) {","        if (!this.noAssert) {","            if (typeof capacity !== 'number' || capacity % 1 !== 0)","                throw TypeError(\"Illegal capacity: \"+capacity+\" (not an integer)\");","            capacity |= 0;","            if (capacity < 0)","                throw RangeError(\"Illegal capacity: 0 <= \"+capacity);","        }","        if (this.buffer.length < capacity) {","            var buffer = new Buffer(capacity);","            this.buffer.copy(buffer);","            this.buffer = buffer;","        }","        return this;","    };","    /**","     * Reverses this ByteBuffer's contents.","     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}","     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.reverse = function(begin, end) {","        if (typeof begin === 'undefined') begin = this.offset;","        if (typeof end === 'undefined') end = this.limit;","        if (!this.noAssert) {","            if (typeof begin !== 'number' || begin % 1 !== 0)","                throw TypeError(\"Illegal begin: Not an integer\");","            begin >>>= 0;","            if (typeof end !== 'number' || end % 1 !== 0)","                throw TypeError(\"Illegal end: Not an integer\");","            end >>>= 0;","            if (begin < 0 || begin > end || end > this.buffer.length)","                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);","        }","        if (begin === end)","            return this; // Nothing to reverse","        Array.prototype.reverse.call(this.buffer.slice(begin, end));","        return this;","    };","    /**","     * Skips the next `length` bytes. This will just advance","     * @param {number} length Number of bytes to skip. May also be negative to move the offset back.","     * @returns {!ByteBuffer} this","     * @expose","     */","    ByteBufferPrototype.skip = function(length) {","        if (!this.noAssert) {","            if (typeof length !== 'number' || length % 1 !== 0)","                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");","            length |= 0;","        }","        var offset = this.offset + length;","        if (!this.noAssert) {","            if (offset < 0 || offset > this.buffer.length)","                throw RangeError(\"Illegal length: 0 <= \"+this.offset+\" + \"+length+\" <= \"+this.buffer.length);","        }","        this.offset = offset;","        return this;","    };","","    /**","     * Slices this ByteBuffer by creating a cloned instance with `offset = begin` and `limit = end`.","     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.","     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.","     * @returns {!ByteBuffer} Clone of this ByteBuffer with slicing applied, backed by the same {@link ByteBuffer#buffer}","     * @expose","     */","    ByteBufferPrototype.slice = function(begin, end) {","        if (typeof begin === 'undefined') begin = this.offset;","        if (typeof end === 'undefined') end = this.limit;","        if (!this.noAssert) {","            if (typeof begin !== 'number' || begin % 1 !== 0)","                throw TypeError(\"Illegal begin: Not an integer\");","            begin >>>= 0;","            if (typeof end !== 'number' || end % 1 !== 0)","                throw TypeError(\"Illegal end: Not an integer\");","            end >>>= 0;","            if (begin < 0 || begin > end || end > this.buffer.length)","                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);","        }","        var bb = this.clone();","        bb.offset = begin;","        bb.limit = end;","        return bb;","    };","    /**","     * Returns a copy of the backing buffer that contains this ByteBuffer's contents. Contents are the bytes between","     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.","     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory if","     *  possible. Defaults to `false`","     * @returns {!Buffer} Contents as a Buffer","     * @expose","     */","    ByteBufferPrototype.toBuffer = function(forceCopy) {","        var offset = this.offset,","            limit = this.limit;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: Not an integer\");","            offset >>>= 0;","            if (typeof limit !== 'number' || limit % 1 !== 0)","                throw TypeError(\"Illegal limit: Not an integer\");","            limit >>>= 0;","            if (offset < 0 || offset > limit || limit > this.buffer.length)","                throw RangeError(\"Illegal range: 0 <= \"+offset+\" <= \"+limit+\" <= \"+this.buffer.length);","        }","        if (forceCopy) {","            var buffer = new Buffer(limit - offset);","            this.buffer.copy(buffer, 0, offset, limit);","            return buffer;","        } else {","            if (offset === 0 && limit === this.buffer.length)","                return this.buffer;","            else","                return this.buffer.slice(offset, limit);","        }","    };","","    /**","     * Returns a copy of the backing buffer compacted to contain this ByteBuffer's contents. Contents are the bytes between","     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.","     * @returns {!ArrayBuffer} Contents as an ArrayBuffer","     */","    ByteBufferPrototype.toArrayBuffer = function() {","        var offset = this.offset,","            limit = this.limit;","        if (!this.noAssert) {","            if (typeof offset !== 'number' || offset % 1 !== 0)","                throw TypeError(\"Illegal offset: Not an integer\");","            offset >>>= 0;","            if (typeof limit !== 'number' || limit % 1 !== 0)","                throw TypeError(\"Illegal limit: Not an integer\");","            limit >>>= 0;","            if (offset < 0 || offset > limit || limit > this.buffer.length)","                throw RangeError(\"Illegal range: 0 <= \"+offset+\" <= \"+limit+\" <= \"+this.buffer.length);","        }","        var ab = new ArrayBuffer(limit - offset);","        if (memcpy) { // Fast","            memcpy(ab, 0, this.buffer, offset, limit);","        } else { // Slow","            var dst = new Uint8Array(ab);","            for (var i=offset; i<limit; ++i)","                dst[i-offset] = this.buffer[i];","        }","        return ab;","    };","","    /**","     * Converts the ByteBuffer's contents to a string.","     * @param {string=} encoding Output encoding. Returns an informative string representation if omitted but also allows","     *  direct conversion to \"utf8\", \"hex\", \"base64\" and \"binary\" encoding. \"debug\" returns a hex representation with","     *  highlighted offsets.","     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}","     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}","     * @returns {string} String representation","     * @throws {Error} If `encoding` is invalid","     * @expose","     */","    ByteBufferPrototype.toString = function(encoding, begin, end) {","        if (typeof encoding === 'undefined')","            return \"ByteBufferNB(offset=\"+this.offset+\",markedOffset=\"+this.markedOffset+\",limit=\"+this.limit+\",capacity=\"+this.capacity()+\")\";","        if (typeof encoding === 'number')","            encoding = \"utf8\",","            begin = encoding,","            end = begin;","        switch (encoding) {","            case \"utf8\":","                return this.toUTF8(begin, end);","            case \"base64\":","                return this.toBase64(begin, end);","            case \"hex\":","                return this.toHex(begin, end);","            case \"binary\":","                return this.toBinary(begin, end);","            case \"debug\":","                return this.toDebug();","            case \"columns\":","                return this.toColumns();","            default:","                throw Error(\"Unsupported encoding: \"+encoding);","        }","    };","","    // encodings/base64","","    /**","     * Encodes this ByteBuffer's contents to a base64 encoded string.","     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}.","     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}.","     * @returns {string} Base64 encoded string","     * @throws {RangeError} If `begin` or `end` is out of bounds","     * @expose","     */","    ByteBufferPrototype.toBase64 = function(begin, end) {","        if (typeof begin === 'undefined')","            begin = this.offset;","        if (typeof end === 'undefined')","            end = this.limit;","        begin = begin | 0; end = end | 0;","        if (begin < 0 || end > this.capacity || begin > end)","            throw RangeError(\"begin, end\");","        return this.buffer.toString(\"base64\", begin, end);","    };","","    /**","     * Decodes a base64 encoded string to a ByteBuffer.","     * @param {string} str String to decode","     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to","     *  {@link ByteBuffer.DEFAULT_ENDIAN}.","     * @returns {!ByteBuffer} ByteBuffer","     * @expose","     */","    ByteBuffer.fromBase64 = function(str, littleEndian) {","        return ByteBuffer.wrap(new Buffer(str, \"base64\"), littleEndian);","        return bb;","    };","","    /**","     * Encodes a binary string to base64 like `window.btoa` does.","     * @param {string} str Binary string","     * @returns {string} Base64 encoded string","     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.btoa","     * @expose","     */","    ByteBuffer.btoa = function(str) {","        return ByteBuffer.fromBinary(str).toBase64();","    };","","    /**","     * Decodes a base64 encoded string to binary like `window.atob` does.","     * @param {string} b64 Base64 encoded string","     * @returns {string} Binary string","     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.atob","     * @expose","     */","    ByteBuffer.atob = function(b64) {","        return ByteBuffer.fromBase64(b64).toBinary();","    };","","    // encodings/binary","","    /**","     * Encodes this ByteBuffer to a binary encoded string, that is using only characters 0x00-0xFF as bytes.","     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.","     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.","     * @returns {string} Binary encoded string","     * @throws {RangeError} If `offset > limit`","     * @expose","     */","    ByteBufferPrototype.toBinary = function(begin, end) {","        if (typeof begin === 'undefined')","            begin = this.offset;","        if (typeof end === 'undefined')","            end = this.limit;","        begin |= 0; end |= 0;","        if (begin < 0 || end > this.capacity() || begin > end)","            throw RangeError(\"begin, end\");","        return this.buffer.toString(\"binary\", begin, end);","    };","","    /**","     * Decodes a binary encoded string, that is using only characters 0x00-0xFF as bytes, to a ByteBuffer.","     * @param {string} str String to decode","     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to","     *  {@link ByteBuffer.DEFAULT_ENDIAN}.","     * @returns {!ByteBuffer} ByteBuffer","     * @expose","     */","    ByteBuffer.fromBinary = function(str, littleEndian) {","        return ByteBuffer.wrap(new Buffer(str, \"binary\"), littleEndian);","        return bb;","    };","","    // encodings/debug","","    /**","     * Encodes this ByteBuffer to a hex encoded string with marked offsets. Offset symbols are:","     * * `<` : offset,","     * * `'` : markedOffset,","     * * `>` : limit,","     * * `|` : offset and limit,","     * * `[` : offset and markedOffset,","     * * `]` : markedOffset and limit,","     * * `!` : offset, markedOffset and limit","     * @param {boolean=} columns If `true` returns two columns hex + ascii, defaults to `false`","     * @returns {string|!Array.<string>} Debug string or array of lines if `asArray = true`","     * @expose","     * @example `>00'01 02<03` contains four bytes with `limit=0, markedOffset=1, offset=3`","     * @example `00[01 02 03>` contains four bytes with `offset=markedOffset=1, limit=4`","     * @example `00|01 02 03` contains four bytes with `offset=limit=1, markedOffset=-1`","     * @example `|` contains zero bytes with `offset=limit=0, markedOffset=-1`","     */","    ByteBufferPrototype.toDebug = function(columns) {","        var i = -1,","            k = this.buffer.length,","            b,","            hex = \"\",","            asc = \"\",","            out = \"\";","        while (i<k) {","            if (i !== -1) {","                b = this.buffer[i];","                if (b < 0x10) hex += \"0\"+b.toString(16).toUpperCase();","                else hex += b.toString(16).toUpperCase();","                if (columns)","                    asc += b > 32 && b < 127 ? String.fromCharCode(b) : '.';","            }","            ++i;","            if (columns) {","                if (i > 0 && i % 16 === 0 && i !== k) {","                    while (hex.length < 3*16+3) hex += \" \";","                    out += hex+asc+\"\\n\";","                    hex = asc = \"\";","                }","            }","            if (i === this.offset && i === this.limit)","                hex += i === this.markedOffset ? \"!\" : \"|\";","            else if (i === this.offset)","                hex += i === this.markedOffset ? \"[\" : \"<\";","            else if (i === this.limit)","                hex += i === this.markedOffset ? \"]\" : \">\";","            else","                hex += i === this.markedOffset ? \"'\" : (columns || (i !== 0 && i !== k) ? \" \" : \"\");","        }","        if (columns && hex !== \" \") {","            while (hex.length < 3*16+3)","                hex += \" \";","            out += hex + asc + \"\\n\";","        }","        return columns ? out : hex;","    };","","    /**","     * Decodes a hex encoded string with marked offsets to a ByteBuffer.","     * @param {string} str Debug string to decode (not be generated with `columns = true`)","     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to","     *  {@link ByteBuffer.DEFAULT_ENDIAN}.","     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to","     *  {@link ByteBuffer.DEFAULT_NOASSERT}.","     * @returns {!ByteBuffer} ByteBuffer","     * @expose","     * @see ByteBuffer#toDebug","     */","    ByteBuffer.fromDebug = function(str, littleEndian, noAssert) {","        var k = str.length,","            bb = new ByteBuffer(((k+1)/3)|0, littleEndian, noAssert);","        var i = 0, j = 0, ch, b,","            rs = false, // Require symbol next","            ho = false, hm = false, hl = false, // Already has offset (ho), markedOffset (hm), limit (hl)?","            fail = false;","        while (i<k) {","            switch (ch = str.charAt(i++)) {","                case '!':","                    if (!noAssert) {","                        if (ho || hm || hl) {","                            fail = true;","                            break;","                        }","                        ho = hm = hl = true;","                    }","                    bb.offset = bb.markedOffset = bb.limit = j;","                    rs = false;","                    break;","                case '|':","                    if (!noAssert) {","                        if (ho || hl) {","                            fail = true;","                            break;","                        }","                        ho = hl = true;","                    }","                    bb.offset = bb.limit = j;","                    rs = false;","                    break;","                case '[':","                    if (!noAssert) {","                        if (ho || hm) {","                            fail = true;","                            break;","                        }","                        ho = hm = true;","                    }","                    bb.offset = bb.markedOffset = j;","                    rs = false;","                    break;","                case '<':","                    if (!noAssert) {","                        if (ho) {","                            fail = true;","                            break;","                        }","                        ho = true;","                    }","                    bb.offset = j;","                    rs = false;","                    break;","                case ']':","                    if (!noAssert) {","                        if (hl || hm) {","                            fail = true;","                            break;","                        }","                        hl = hm = true;","                    }","                    bb.limit = bb.markedOffset = j;","                    rs = false;","                    break;","                case '>':","                    if (!noAssert) {","                        if (hl) {","                            fail = true;","                            break;","                        }","                        hl = true;","                    }","                    bb.limit = j;","                    rs = false;","                    break;","                case \"'\":","                    if (!noAssert) {","                        if (hm) {","                            fail = true;","                            break;","                        }","                        hm = true;","                    }","                    bb.markedOffset = j;","                    rs = false;","                    break;","                case ' ':","                    rs = false;","                    break;","                default:","                    if (!noAssert) {","                        if (rs) {","                            fail = true;","                            break;","                        }","                    }","                    b = parseInt(ch+str.charAt(i++), 16);","                    if (!noAssert) {","                        if (isNaN(b) || b < 0 || b > 255)","                            throw TypeError(\"Illegal str: Not a debug encoded string\");","                    }","                    bb.buffer[j++] = b;","                    rs = true;","            }","            if (fail)","                throw TypeError(\"Illegal str: Invalid symbol at \"+i);","        }","        if (!noAssert) {","            if (!ho || !hl)","                throw TypeError(\"Illegal str: Missing offset or limit\");","            if (j<bb.buffer.length)","                throw TypeError(\"Illegal str: Not a debug encoded string (is it hex?) \"+j+\" < \"+k);","        }","        return bb;","    };","","    // encodings/hex","","    /**","     * Encodes this ByteBuffer's contents to a hex encoded string.","     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.","     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.","     * @returns {string} Hex encoded string","     * @expose","     */","    ByteBufferPrototype.toHex = function(begin, end) {","        begin = typeof begin === 'undefined' ? this.offset : begin;","        end = typeof end === 'undefined' ? this.limit : end;","        if (!this.noAssert) {","            if (typeof begin !== 'number' || begin % 1 !== 0)","                throw TypeError(\"Illegal begin: Not an integer\");","            begin >>>= 0;","            if (typeof end !== 'number' || end % 1 !== 0)","                throw TypeError(\"Illegal end: Not an integer\");","            end >>>= 0;","            if (begin < 0 || begin > end || end > this.buffer.length)","                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);","        }","        return this.buffer.toString(\"hex\", begin, end);","    };","","    /**","     * Decodes a hex encoded string to a ByteBuffer.","     * @param {string} str String to decode","     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to","     *  {@link ByteBuffer.DEFAULT_ENDIAN}.","     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to","     *  {@link ByteBuffer.DEFAULT_NOASSERT}.","     * @returns {!ByteBuffer} ByteBuffer","     * @expose","     */","    ByteBuffer.fromHex = function(str, littleEndian, noAssert) {","        if (!noAssert) {","            if (typeof str !== 'string')","                throw TypeError(\"Illegal str: Not a string\");","            if (str.length % 2 !== 0)","                throw TypeError(\"Illegal str: Length not a multiple of 2\");","        }","        var bb = new ByteBuffer(0, littleEndian, true);","        bb.buffer = new Buffer(str, \"hex\");","        bb.limit = bb.buffer.length;","        return bb;","    };","","    // utfx-embeddable","","    /**","     * utfx-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>","     * Released under the Apache License, Version 2.0","     * see: https://github.com/dcodeIO/utfx for details","     */","    var utfx = function() {","        \"use strict\";","","        /**","         * utfx namespace.","         * @inner","         * @type {!Object.<string,*>}","         */","        var utfx = {};","","        /**","         * Maximum valid code point.","         * @type {number}","         * @const","         */","        utfx.MAX_CODEPOINT = 0x10FFFF;","","        /**","         * Encodes UTF8 code points to UTF8 bytes.","         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point","         *  respectively `null` if there are no more code points left or a single numeric code point.","         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte","         */","        utfx.encodeUTF8 = function(src, dst) {","            var cp = null;","            if (typeof src === 'number')","                cp = src,","                src = function() { return null; };","            while (cp !== null || (cp = src()) !== null) {","                if (cp < 0x80)","                    dst(cp&0x7F);","                else if (cp < 0x800)","                    dst(((cp>>6)&0x1F)|0xC0),","                    dst((cp&0x3F)|0x80);","                else if (cp < 0x10000)","                    dst(((cp>>12)&0x0F)|0xE0),","                    dst(((cp>>6)&0x3F)|0x80),","                    dst((cp&0x3F)|0x80);","                else","                    dst(((cp>>18)&0x07)|0xF0),","                    dst(((cp>>12)&0x3F)|0x80),","                    dst(((cp>>6)&0x3F)|0x80),","                    dst((cp&0x3F)|0x80);","                cp = null;","            }","        };","","        /**","         * Decodes UTF8 bytes to UTF8 code points.","         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there","         *  are no more bytes left.","         * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.","         * @throws {RangeError} If a starting byte is invalid in UTF8","         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the","         *  remaining bytes.","         */","        utfx.decodeUTF8 = function(src, dst) {","            var a, b, c, d, fail = function(b) {","                b = b.slice(0, b.indexOf(null));","                var err = Error(b.toString());","                err.name = \"TruncatedError\";","                err['bytes'] = b;","                throw err;","            };","            while ((a = src()) !== null) {","                if ((a&0x80) === 0)","                    dst(a);","                else if ((a&0xE0) === 0xC0)","                    ((b = src()) === null) && fail([a, b]),","                    dst(((a&0x1F)<<6) | (b&0x3F));","                else if ((a&0xF0) === 0xE0)","                    ((b=src()) === null || (c=src()) === null) && fail([a, b, c]),","                    dst(((a&0x0F)<<12) | ((b&0x3F)<<6) | (c&0x3F));","                else if ((a&0xF8) === 0xF0)","                    ((b=src()) === null || (c=src()) === null || (d=src()) === null) && fail([a, b, c ,d]),","                    dst(((a&0x07)<<18) | ((b&0x3F)<<12) | ((c&0x3F)<<6) | (d&0x3F));","                else throw RangeError(\"Illegal starting byte: \"+a);","            }","        };","","        /**","         * Converts UTF16 characters to UTF8 code points.","         * @param {!function():number|null} src Characters source as a function returning the next char code respectively","         *  `null` if there are no more characters left.","         * @param {!function(number)} dst Code points destination as a function successively called with each converted code","         *  point.","         */","        utfx.UTF16toUTF8 = function(src, dst) {","            var c1, c2 = null;","            while (true) {","                if ((c1 = c2 !== null ? c2 : src()) === null)","                    break;","                if (c1 >= 0xD800 && c1 <= 0xDFFF) {","                    if ((c2 = src()) !== null) {","                        if (c2 >= 0xDC00 && c2 <= 0xDFFF) {","                            dst((c1-0xD800)*0x400+c2-0xDC00+0x10000);","                            c2 = null; continue;","                        }","                    }","                }","                dst(c1);","            }","            if (c2 !== null) dst(c2);","        };","","        /**","         * Converts UTF8 code points to UTF16 characters.","         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point","         *  respectively `null` if there are no more code points left or a single numeric code point.","         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.","         * @throws {RangeError} If a code point is out of range","         */","        utfx.UTF8toUTF16 = function(src, dst) {","            var cp = null;","            if (typeof src === 'number')","                cp = src, src = function() { return null; };","            while (cp !== null || (cp = src()) !== null) {","                if (cp <= 0xFFFF)","                    dst(cp);","                else","                    cp -= 0x10000,","                    dst((cp>>10)+0xD800),","                    dst((cp%0x400)+0xDC00);","                cp = null;","            }","        };","","        /**","         * Converts and encodes UTF16 characters to UTF8 bytes.","         * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`","         *  if there are no more characters left.","         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.","         */","        utfx.encodeUTF16toUTF8 = function(src, dst) {","            utfx.UTF16toUTF8(src, function(cp) {","                utfx.encodeUTF8(cp, dst);","            });","        };","","        /**","         * Decodes and converts UTF8 bytes to UTF16 characters.","         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there","         *  are no more bytes left.","         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.","         * @throws {RangeError} If a starting byte is invalid in UTF8","         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.","         */","        utfx.decodeUTF8toUTF16 = function(src, dst) {","            utfx.decodeUTF8(src, function(cp) {","                utfx.UTF8toUTF16(cp, dst);","            });","        };","","        /**","         * Calculates the byte length of an UTF8 code point.","         * @param {number} cp UTF8 code point","         * @returns {number} Byte length","         */","        utfx.calculateCodePoint = function(cp) {","            return (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;","        };","","        /**","         * Calculates the number of UTF8 bytes required to store UTF8 code points.","         * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively","         *  `null` if there are no more code points left.","         * @returns {number} The number of UTF8 bytes required","         */","        utfx.calculateUTF8 = function(src) {","            var cp, l=0;","            while ((cp = src()) !== null)","                l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;","            return l;","        };","","        /**","         * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.","         * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively","         *  `null` if there are no more characters left.","         * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.","         */","        utfx.calculateUTF16asUTF8 = function(src) {","            var n=0, l=0;","            utfx.UTF16toUTF8(src, function(cp) {","                ++n; l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;","            });","            return [n,l];","        };","","        return utfx;","    }();","","    // encodings/utf8","","    /**","     * Encodes this ByteBuffer's contents between {@link ByteBuffer#offset} and {@link ByteBuffer#limit} to an UTF8 encoded","     *  string.","     * @returns {string} Hex encoded string","     * @throws {RangeError} If `offset > limit`","     * @expose","     */","    ByteBufferPrototype.toUTF8 = function(begin, end) {","        if (typeof begin === 'undefined') begin = this.offset;","        if (typeof end === 'undefined') end = this.limit;","        if (!this.noAssert) {","            if (typeof begin !== 'number' || begin % 1 !== 0)","                throw TypeError(\"Illegal begin: Not an integer\");","            begin >>>= 0;","            if (typeof end !== 'number' || end % 1 !== 0)","                throw TypeError(\"Illegal end: Not an integer\");","            end >>>= 0;","            if (begin < 0 || begin > end || end > this.buffer.length)","                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);","        }","        return this.buffer.toString(\"utf8\", begin, end);","    };","","    /**","     * Decodes an UTF8 encoded string to a ByteBuffer.","     * @param {string} str String to decode","     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to","     *  {@link ByteBuffer.DEFAULT_ENDIAN}.","     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to","     *  {@link ByteBuffer.DEFAULT_NOASSERT}.","     * @returns {!ByteBuffer} ByteBuffer","     * @expose","     */","    ByteBuffer.fromUTF8 = function(str, littleEndian, noAssert) {","        if (!noAssert)","            if (typeof str !== 'string')","                throw TypeError(\"Illegal str: Not a string\");","        var bb = new ByteBuffer(0, littleEndian, noAssert);","        bb.buffer = new Buffer(str, \"utf8\");","        bb.limit = bb.buffer.length;","        return bb;","    };","","","    /**","     * node-memcpy. This is an optional binding dependency and may not be present.","     * @function","     * @param {!(Buffer|ArrayBuffer|Uint8Array)} target Destination","     * @param {number|!(Buffer|ArrayBuffer)} targetStart Destination start, defaults to 0.","     * @param {(!(Buffer|ArrayBuffer|Uint8Array)|number)=} source Source","     * @param {number=} sourceStart Source start, defaults to 0.","     * @param {number=} sourceEnd Source end, defaults to capacity.","     * @returns {number} Number of bytes copied","     * @throws {Error} If any index is out of bounds","     * @expose","     */","    ByteBuffer.memcpy = memcpy;","","    return ByteBuffer;","","})();",""],"l":{"23":1,"26":1,"29":1,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"63":0,"72":0,"81":0,"90":0,"97":0,"104":0,"113":1,"121":1,"129":1,"136":1,"143":1,"150":1,"159":1,"165":1,"174":1,"176":1,"188":1,"195":1,"205":1,"206":0,"207":0,"217":1,"218":0,"219":0,"220":0,"221":0,"222":0,"224":0,"233":1,"234":0,"246":1,"247":0,"262":1,"263":0,"264":0,"265":0,"266":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"275":0,"276":0,"277":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"286":0,"287":0,"288":0,"297":1,"298":0,"305":1,"306":0,"321":1,"322":0,"323":0,"324":0,"325":0,"327":0,"328":0,"329":0,"330":0,"332":0,"334":0,"336":0,"338":0,"340":0,"342":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"353":0,"356":0,"357":0,"358":0,"359":0,"361":0,"362":0,"364":0,"365":0,"366":0,"367":0,"368":0,"370":0,"371":0,"372":0,"375":0,"376":0,"377":0,"378":0,"379":0,"381":0,"382":0,"383":0,"384":0,"386":0,"396":1,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"409":0,"415":0,"417":0,"418":0,"426":0,"429":0,"430":0,"431":0,"432":0,"435":0,"436":0,"437":0,"439":0,"448":1,"449":0,"450":0,"452":0,"459":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"473":0,"474":0,"475":0,"476":0,"479":0,"480":0,"482":0,"491":1,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"501":0,"502":0,"503":0,"517":1,"528":1,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"559":1,"567":1,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"577":0,"578":0,"579":0,"580":0,"590":1,"599":1,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"630":1,"638":1,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"648":0,"649":0,"650":0,"660":1,"672":1,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"694":0,"695":0,"697":0,"698":0,"710":1,"720":1,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"730":0,"731":0,"732":0,"733":0,"735":0,"736":0,"738":0,"739":0,"740":0,"752":1,"762":1,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"784":0,"785":0,"787":0,"788":0,"800":1,"810":1,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"820":0,"821":0,"822":0,"823":0,"825":0,"826":0,"828":0,"829":0,"841":1,"851":1,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"875":0,"876":0,"877":0,"878":0,"880":0,"881":0,"890":1,"898":1,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"915":0,"916":0,"917":0,"918":0,"920":0,"921":0,"922":0,"931":1,"939":1,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"963":0,"964":0,"965":0,"966":0,"968":0,"969":0,"979":1,"987":1,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1004":0,"1005":0,"1006":0,"1007":0,"1009":0,"1010":0,"1020":1,"1024":1,"1033":1,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":0,"1047":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1081":0,"1082":0,"1092":1,"1100":1,"1101":0,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":0,"1110":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1133":0,"1134":0,"1135":0,"1144":1,"1153":1,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1162":0,"1163":0,"1164":0,"1165":0,"1166":0,"1167":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1180":0,"1181":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1201":0,"1202":0,"1213":1,"1221":1,"1222":0,"1223":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1231":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1242":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1254":0,"1255":0,"1256":0,"1266":1,"1280":1,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":0,"1289":0,"1290":0,"1292":0,"1293":0,"1294":0,"1295":0,"1296":0,"1297":0,"1300":0,"1301":0,"1312":1,"1320":1,"1321":0,"1322":0,"1323":0,"1324":0,"1325":0,"1326":0,"1327":0,"1328":0,"1330":0,"1333":0,"1334":0,"1344":1,"1355":1,"1356":0,"1357":0,"1358":0,"1359":0,"1360":0,"1361":0,"1362":0,"1363":0,"1364":0,"1365":0,"1367":0,"1368":0,"1369":0,"1370":0,"1371":0,"1372":0,"1375":0,"1376":0,"1387":1,"1395":1,"1396":0,"1397":0,"1398":0,"1399":0,"1400":0,"1401":0,"1402":0,"1403":0,"1405":0,"1408":0,"1409":0,"1419":1,"1430":1,"1438":1,"1440":0,"1441":0,"1442":0,"1443":0,"1444":0,"1445":0,"1454":1,"1455":0,"1464":1,"1465":0,"1476":1,"1477":0,"1478":0,"1479":0,"1480":0,"1481":0,"1482":0,"1483":0,"1484":0,"1485":0,"1486":0,"1487":0,"1489":0,"1491":0,"1492":0,"1493":0,"1494":0,"1495":0,"1496":0,"1497":0,"1498":0,"1499":0,"1500":0,"1502":0,"1503":0,"1504":0,"1505":0,"1507":0,"1518":1,"1519":0,"1532":1,"1533":0,"1534":0,"1535":0,"1536":0,"1537":0,"1538":0,"1539":0,"1540":0,"1542":0,"1545":0,"1546":0,"1547":0,"1548":0,"1549":0,"1551":0,"1552":0,"1553":0,"1554":0,"1556":0,"1557":0,"1558":0,"1559":0,"1561":0,"1576":1,"1577":0,"1578":0,"1579":0,"1581":0,"1582":0,"1587":1,"1595":1,"1603":1,"1604":0,"1605":0,"1606":0,"1607":0,"1609":0,"1612":0,"1613":0,"1614":0,"1615":0,"1617":0,"1619":0,"1620":0,"1622":0,"1625":0,"1634":1,"1635":0,"1636":0,"1637":0,"1638":0,"1639":0,"1641":0,"1650":1,"1651":0,"1652":0,"1653":0,"1654":0,"1655":0,"1657":0,"1668":1,"1669":0,"1670":0,"1671":0,"1672":0,"1673":0,"1674":0,"1675":0,"1676":0,"1677":0,"1678":0,"1679":0,"1680":0,"1681":0,"1682":0,"1684":0,"1685":0,"1686":0,"1687":0,"1688":0,"1689":0,"1693":0,"1694":0,"1695":0,"1696":0,"1697":0,"1698":0,"1699":0,"1700":0,"1701":0,"1702":0,"1703":0,"1704":0,"1705":0,"1706":0,"1707":0,"1708":0,"1710":0,"1711":0,"1712":0,"1714":0,"1726":1,"1727":0,"1739":1,"1740":0,"1741":0,"1742":0,"1743":0,"1744":0,"1745":0,"1746":0,"1747":0,"1750":0,"1755":0,"1756":0,"1757":0,"1758":0,"1759":0,"1760":0,"1761":0,"1762":0,"1763":0,"1764":0,"1765":0,"1766":0,"1767":0,"1768":0,"1769":0,"1771":0,"1787":1,"1788":0,"1789":0,"1790":0,"1792":0,"1793":0,"1810":1,"1811":0,"1812":0,"1813":0,"1815":0,"1816":0,"1817":0,"1818":0,"1819":0,"1820":0,"1822":0,"1823":0,"1824":0,"1825":0,"1826":0,"1829":0,"1830":0,"1831":0,"1832":0,"1833":0,"1834":0,"1835":0,"1836":0,"1837":0,"1838":0,"1839":0,"1841":0,"1853":1,"1854":0,"1855":0,"1856":0,"1857":0,"1858":0,"1859":0,"1860":0,"1861":0,"1863":0,"1866":0,"1867":0,"1868":0,"1869":0,"1871":0,"1872":0,"1873":0,"1874":0,"1876":0,"1894":1,"1895":0,"1896":0,"1897":0,"1898":0,"1899":0,"1900":0,"1901":0,"1902":0,"1903":0,"1904":0,"1906":0,"1908":0,"1909":0,"1910":0,"1911":0,"1912":0,"1913":0,"1914":0,"1915":0,"1916":0,"1917":0,"1918":0,"1920":0,"1921":0,"1922":0,"1923":0,"1925":0,"1926":0,"1927":0,"1928":0,"1929":0,"1931":0,"1943":1,"1944":0,"1945":0,"1946":0,"1947":0,"1948":0,"1949":0,"1950":0,"1951":0,"1953":0,"1954":0,"1955":0,"1956":0,"1957":0,"1958":0,"1959":0,"1961":0,"1976":1,"1984":1,"1993":1,"1994":0,"1995":0,"1996":0,"1997":0,"1998":0,"1999":0,"2000":0,"2001":0,"2003":0,"2004":0,"2005":0,"2006":0,"2007":0,"2008":0,"2009":0,"2010":0,"2011":0,"2012":0,"2013":0,"2015":0,"2026":1,"2035":1,"2036":0,"2045":1,"2046":0,"2047":0,"2048":0,"2058":1,"2071":1,"2072":0,"2073":0,"2074":0,"2076":0,"2077":0,"2078":0,"2079":0,"2080":0,"2081":0,"2082":0,"2083":0,"2084":0,"2085":0,"2086":0,"2087":0,"2089":0,"2093":0,"2094":0,"2095":0,"2096":0,"2098":0,"2100":0,"2101":0,"2102":0,"2103":0,"2104":0,"2106":0,"2111":0,"2112":0,"2113":0,"2114":0,"2115":0,"2116":0,"2117":0,"2119":0,"2120":0,"2121":0,"2122":0,"2124":0,"2130":0,"2145":1,"2158":1,"2159":0,"2160":0,"2161":0,"2162":0,"2163":0,"2164":0,"2165":0,"2166":0,"2167":0,"2168":0,"2170":0,"2172":0,"2173":0,"2174":0,"2175":0,"2176":0,"2177":0,"2178":0,"2179":0,"2180":0,"2181":0,"2182":0,"2183":0,"2185":0,"2197":1,"2198":0,"2199":0,"2200":0,"2201":0,"2202":0,"2203":0,"2204":0,"2205":0,"2207":0,"2208":0,"2209":0,"2210":0,"2211":0,"2212":0,"2213":0,"2215":0,"2236":1,"2237":0,"2238":0,"2239":0,"2241":0,"2242":0,"2243":0,"2244":0,"2245":0,"2246":0,"2247":0,"2248":0,"2250":0,"2251":0,"2252":0,"2253":0,"2254":0,"2255":0,"2256":0,"2257":0,"2258":0,"2259":0,"2260":0,"2261":0,"2262":0,"2275":1,"2276":0,"2277":0,"2287":1,"2288":0,"2289":0,"2297":1,"2298":0,"2306":1,"2307":0,"2308":0,"2309":0,"2310":0,"2320":1,"2321":0,"2322":0,"2323":0,"2324":0,"2325":0,"2327":0,"2329":0,"2330":0,"2331":0,"2332":0,"2344":1,"2345":0,"2346":0,"2347":0,"2348":0,"2349":0,"2350":0,"2351":0,"2352":0,"2353":0,"2354":0,"2355":0,"2357":0,"2358":0,"2359":0,"2360":0,"2361":0,"2362":0,"2363":0,"2364":0,"2365":0,"2367":0,"2368":0,"2369":0,"2370":0,"2371":0,"2372":0,"2373":0,"2384":1,"2385":0,"2386":0,"2387":0,"2388":0,"2389":0,"2390":0,"2391":0,"2392":0,"2393":0,"2394":0,"2395":0,"2397":0,"2398":0,"2399":0,"2401":0,"2402":0,"2403":0,"2404":0,"2405":0,"2420":1,"2421":0,"2423":0,"2424":0,"2425":0,"2427":0,"2428":0,"2429":0,"2431":0,"2432":0,"2433":0,"2434":0,"2436":0,"2437":0,"2438":0,"2440":0,"2442":0,"2444":0,"2445":0,"2447":0,"2458":1,"2459":0,"2460":0,"2461":0,"2462":0,"2476":1,"2477":0,"2478":0,"2479":0,"2480":0,"2481":0,"2482":0,"2483":0,"2484":0,"2485":0,"2486":0,"2487":0,"2488":0,"2489":0,"2490":0,"2491":0,"2492":0,"2493":0,"2494":0,"2496":0,"2497":0,"2498":0,"2499":0,"2500":0,"2501":0,"2510":1,"2511":0,"2512":0,"2513":0,"2524":1,"2525":0,"2526":0,"2527":0,"2528":0,"2529":0,"2530":0,"2531":0,"2533":0,"2534":0,"2542":1,"2543":0,"2544":0,"2545":0,"2547":0,"2548":0,"2557":1,"2558":0,"2559":0,"2568":1,"2569":0,"2570":0,"2586":1,"2587":0,"2588":0,"2589":0,"2591":0,"2592":0,"2593":0,"2594":0,"2595":0,"2596":0,"2597":0,"2598":0,"2600":0,"2601":0,"2602":0,"2603":0,"2604":0,"2605":0,"2606":0,"2607":0,"2608":0,"2609":0,"2610":0,"2611":0,"2612":0,"2613":0,"2615":0,"2616":0,"2617":0,"2618":0,"2632":1,"2633":0,"2634":0,"2641":1,"2642":0,"2643":0,"2656":1,"2657":0,"2667":1,"2668":0,"2669":0,"2670":0,"2672":0,"2674":0,"2685":1,"2686":0,"2687":0,"2688":0,"2689":0,"2690":0,"2691":0,"2693":0,"2694":0,"2695":0,"2696":0,"2698":0,"2707":1,"2708":0,"2709":0,"2710":0,"2711":0,"2712":0,"2713":0,"2714":0,"2715":0,"2716":0,"2717":0,"2718":0,"2720":0,"2721":0,"2722":0,"2723":0,"2731":1,"2732":0,"2733":0,"2734":0,"2735":0,"2737":0,"2738":0,"2739":0,"2740":0,"2742":0,"2743":0,"2753":1,"2754":0,"2755":0,"2756":0,"2757":0,"2758":0,"2759":0,"2760":0,"2761":0,"2762":0,"2763":0,"2764":0,"2766":0,"2767":0,"2768":0,"2769":0,"2779":1,"2780":0,"2782":0,"2783":0,"2784":0,"2785":0,"2786":0,"2787":0,"2788":0,"2789":0,"2790":0,"2792":0,"2793":0,"2794":0,"2795":0,"2797":0,"2798":0,"2800":0,"2809":1,"2810":0,"2812":0,"2813":0,"2814":0,"2815":0,"2816":0,"2817":0,"2818":0,"2819":0,"2820":0,"2822":0,"2823":0,"2824":0,"2826":0,"2827":0,"2828":0,"2830":0,"2844":1,"2845":0,"2846":0,"2847":0,"2848":0,"2851":0,"2853":0,"2855":0,"2857":0,"2859":0,"2861":0,"2863":0,"2865":0,"2879":1,"2880":0,"2881":0,"2882":0,"2883":0,"2884":0,"2885":0,"2886":0,"2887":0,"2898":1,"2899":0,"2900":0,"2910":1,"2911":0,"2921":1,"2922":0,"2935":1,"2936":0,"2937":0,"2938":0,"2939":0,"2940":0,"2941":0,"2942":0,"2943":0,"2954":1,"2955":0,"2956":0,"2978":1,"2979":0,"2985":0,"2986":0,"2987":0,"2988":0,"2989":0,"2990":0,"2991":0,"2993":0,"2994":0,"2995":0,"2996":0,"2997":0,"2998":0,"3001":0,"3002":0,"3003":0,"3004":0,"3005":0,"3006":0,"3008":0,"3010":0,"3011":0,"3012":0,"3013":0,"3015":0,"3029":1,"3030":0,"3032":0,"3036":0,"3037":0,"3039":0,"3040":0,"3041":0,"3042":0,"3044":0,"3046":0,"3047":0,"3048":0,"3050":0,"3051":0,"3052":0,"3053":0,"3055":0,"3057":0,"3058":0,"3059":0,"3061":0,"3062":0,"3063":0,"3064":0,"3066":0,"3068":0,"3069":0,"3070":0,"3072":0,"3073":0,"3074":0,"3075":0,"3077":0,"3079":0,"3080":0,"3081":0,"3083":0,"3084":0,"3085":0,"3086":0,"3088":0,"3090":0,"3091":0,"3092":0,"3094":0,"3095":0,"3096":0,"3097":0,"3099":0,"3101":0,"3102":0,"3103":0,"3105":0,"3106":0,"3107":0,"3108":0,"3110":0,"3112":0,"3113":0,"3114":0,"3116":0,"3117":0,"3119":0,"3120":0,"3121":0,"3122":0,"3125":0,"3126":0,"3127":0,"3128":0,"3130":0,"3131":0,"3133":0,"3134":0,"3136":0,"3137":0,"3138":0,"3139":0,"3140":0,"3142":0,"3154":1,"3155":0,"3156":0,"3157":0,"3158":0,"3159":0,"3160":0,"3161":0,"3162":0,"3163":0,"3164":0,"3165":0,"3167":0,"3180":1,"3181":0,"3182":0,"3183":0,"3184":0,"3185":0,"3187":0,"3188":0,"3189":0,"3190":0,"3200":1,"3208":1,"3215":1,"3223":1,"3224":0,"3225":0,"3226":0,"3227":0,"3228":0,"3229":0,"3230":0,"3231":0,"3232":0,"3234":0,"3235":0,"3239":0,"3243":0,"3256":1,"3257":0,"3258":0,"3259":0,"3260":0,"3261":0,"3262":0,"3264":0,"3265":0,"3266":0,"3267":0,"3268":0,"3270":0,"3271":0,"3273":0,"3274":0,"3276":0,"3287":1,"3288":0,"3289":0,"3290":0,"3291":0,"3292":0,"3293":0,"3294":0,"3295":0,"3296":0,"3300":0,"3302":0,"3312":1,"3313":0,"3314":0,"3315":0,"3316":0,"3317":0,"3318":0,"3320":0,"3323":0,"3333":1,"3334":0,"3335":0,"3347":1,"3348":0,"3349":0,"3358":1,"3359":0,"3368":1,"3369":0,"3370":0,"3371":0,"3372":0,"3381":1,"3382":0,"3383":0,"3384":0,"3386":0,"3389":1,"3401":1,"3402":0,"3403":0,"3404":0,"3405":0,"3406":0,"3407":0,"3408":0,"3409":0,"3410":0,"3411":0,"3412":0,"3414":0,"3427":1,"3428":0,"3429":0,"3430":0,"3431":0,"3432":0,"3433":0,"3434":0,"3450":1,"3452":1}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/externs/bytebuffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/externs/bytebuffer.js","s":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":2,"14":2,"15":2,"16":2,"17":2,"18":2,"19":2,"20":2,"21":2,"22":2,"23":2,"24":2,"25":2,"26":2,"27":2,"28":2,"29":2,"30":2,"31":2,"32":2,"33":2,"34":2,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":2,"42":2,"43":2,"44":2,"45":2,"46":2,"47":2,"48":2,"49":2,"50":2,"51":2,"52":2,"53":2,"54":2,"55":2,"56":2,"57":2,"58":2,"59":2,"60":2,"61":2,"62":2,"63":2,"64":2,"65":2,"66":2,"67":2,"68":2,"69":2,"70":2,"71":2,"72":2,"73":2,"74":2,"75":2,"76":2,"77":2,"78":2,"79":2,"80":2,"81":2,"82":2,"83":2,"84":2,"85":2,"86":2,"87":2,"88":2,"89":2,"90":2,"91":2,"92":2,"93":2,"94":2,"95":2,"96":2,"97":2,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0},"fnMap":{"1":{"name":"ByteBuffer","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":52}}},"2":{"name":"(anonymous_2)","line":92,"loc":{"start":{"line":92,"column":22},"end":{"line":92,"column":55}}},"3":{"name":"(anonymous_3)","line":102,"loc":{"start":{"line":102,"column":18},"end":{"line":102,"column":54}}},"4":{"name":"(anonymous_4)","line":108,"loc":{"start":{"line":108,"column":26},"end":{"line":108,"column":49}}},"5":{"name":"(anonymous_5)","line":114,"loc":{"start":{"line":114,"column":26},"end":{"line":114,"column":46}}},"6":{"name":"(anonymous_6)","line":122,"loc":{"start":{"line":122,"column":34},"end":{"line":122,"column":72}}},"7":{"name":"(anonymous_7)","line":130,"loc":{"start":{"line":130,"column":34},"end":{"line":130,"column":72}}},"8":{"name":"(anonymous_8)","line":138,"loc":{"start":{"line":138,"column":33},"end":{"line":138,"column":71}}},"9":{"name":"(anonymous_9)","line":146,"loc":{"start":{"line":146,"column":31},"end":{"line":146,"column":69}}},"10":{"name":"(anonymous_10)","line":154,"loc":{"start":{"line":154,"column":32},"end":{"line":154,"column":70}}},"11":{"name":"(anonymous_11)","line":161,"loc":{"start":{"line":161,"column":30},"end":{"line":161,"column":49}}},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":29},"end":{"line":170,"column":50}}},"13":{"name":"(anonymous_13)","line":179,"loc":{"start":{"line":179,"column":39},"end":{"line":179,"column":60}}},"14":{"name":"(anonymous_14)","line":185,"loc":{"start":{"line":185,"column":38},"end":{"line":185,"column":57}}},"15":{"name":"(anonymous_15)","line":190,"loc":{"start":{"line":190,"column":28},"end":{"line":190,"column":39}}},"16":{"name":"(anonymous_16)","line":197,"loc":{"start":{"line":197,"column":28},"end":{"line":197,"column":45}}},"17":{"name":"(anonymous_17)","line":202,"loc":{"start":{"line":202,"column":29},"end":{"line":202,"column":40}}},"18":{"name":"(anonymous_18)","line":208,"loc":{"start":{"line":208,"column":29},"end":{"line":208,"column":40}}},"19":{"name":"(anonymous_19)","line":214,"loc":{"start":{"line":214,"column":28},"end":{"line":214,"column":39}}},"20":{"name":"(anonymous_20)","line":220,"loc":{"start":{"line":220,"column":33},"end":{"line":220,"column":44}}},"21":{"name":"(anonymous_21)","line":226,"loc":{"start":{"line":226,"column":32},"end":{"line":226,"column":43}}},"22":{"name":"(anonymous_22)","line":232,"loc":{"start":{"line":232,"column":31},"end":{"line":232,"column":42}}},"23":{"name":"(anonymous_23)","line":238,"loc":{"start":{"line":238,"column":31},"end":{"line":238,"column":42}}},"24":{"name":"(anonymous_24)","line":246,"loc":{"start":{"line":246,"column":30},"end":{"line":246,"column":52}}},"25":{"name":"(anonymous_25)","line":254,"loc":{"start":{"line":254,"column":31},"end":{"line":254,"column":53}}},"26":{"name":"(anonymous_26)","line":262,"loc":{"start":{"line":262,"column":28},"end":{"line":262,"column":56}}},"27":{"name":"(anonymous_27)","line":270,"loc":{"start":{"line":270,"column":33},"end":{"line":270,"column":57}}},"28":{"name":"(anonymous_28)","line":277,"loc":{"start":{"line":277,"column":32},"end":{"line":277,"column":49}}},"29":{"name":"(anonymous_29)","line":284,"loc":{"start":{"line":284,"column":33},"end":{"line":284,"column":57}}},"30":{"name":"(anonymous_30)","line":291,"loc":{"start":{"line":291,"column":32},"end":{"line":291,"column":49}}},"31":{"name":"(anonymous_31)","line":298,"loc":{"start":{"line":298,"column":34},"end":{"line":298,"column":58}}},"32":{"name":"(anonymous_32)","line":305,"loc":{"start":{"line":305,"column":33},"end":{"line":305,"column":50}}},"33":{"name":"(anonymous_33)","line":312,"loc":{"start":{"line":312,"column":34},"end":{"line":312,"column":58}}},"34":{"name":"(anonymous_34)","line":319,"loc":{"start":{"line":319,"column":33},"end":{"line":319,"column":50}}},"35":{"name":"(anonymous_35)","line":326,"loc":{"start":{"line":326,"column":34},"end":{"line":326,"column":58}}},"36":{"name":"(anonymous_36)","line":333,"loc":{"start":{"line":333,"column":33},"end":{"line":333,"column":51}}},"37":{"name":"(anonymous_37)","line":340,"loc":{"start":{"line":340,"column":35},"end":{"line":340,"column":59}}},"38":{"name":"(anonymous_38)","line":347,"loc":{"start":{"line":347,"column":34},"end":{"line":347,"column":51}}},"39":{"name":"(anonymous_39)","line":354,"loc":{"start":{"line":354,"column":34},"end":{"line":354,"column":58}}},"40":{"name":"(anonymous_40)","line":361,"loc":{"start":{"line":361,"column":33},"end":{"line":361,"column":50}}},"41":{"name":"(anonymous_41)","line":368,"loc":{"start":{"line":368,"column":32},"end":{"line":368,"column":56}}},"42":{"name":"(anonymous_42)","line":375,"loc":{"start":{"line":375,"column":31},"end":{"line":375,"column":48}}},"43":{"name":"(anonymous_43)","line":382,"loc":{"start":{"line":382,"column":35},"end":{"line":382,"column":59}}},"44":{"name":"(anonymous_44)","line":389,"loc":{"start":{"line":389,"column":34},"end":{"line":389,"column":51}}},"45":{"name":"(anonymous_45)","line":396,"loc":{"start":{"line":396,"column":34},"end":{"line":396,"column":58}}},"46":{"name":"(anonymous_46)","line":403,"loc":{"start":{"line":403,"column":33},"end":{"line":403,"column":50}}},"47":{"name":"(anonymous_47)","line":410,"loc":{"start":{"line":410,"column":35},"end":{"line":410,"column":59}}},"48":{"name":"(anonymous_48)","line":417,"loc":{"start":{"line":417,"column":34},"end":{"line":417,"column":51}}},"49":{"name":"(anonymous_49)","line":424,"loc":{"start":{"line":424,"column":36},"end":{"line":424,"column":60}}},"50":{"name":"(anonymous_50)","line":431,"loc":{"start":{"line":431,"column":35},"end":{"line":431,"column":52}}},"51":{"name":"(anonymous_51)","line":438,"loc":{"start":{"line":438,"column":34},"end":{"line":438,"column":58}}},"52":{"name":"(anonymous_52)","line":445,"loc":{"start":{"line":445,"column":33},"end":{"line":445,"column":50}}},"53":{"name":"(anonymous_53)","line":452,"loc":{"start":{"line":452,"column":36},"end":{"line":452,"column":60}}},"54":{"name":"(anonymous_54)","line":459,"loc":{"start":{"line":459,"column":35},"end":{"line":459,"column":52}}},"55":{"name":"(anonymous_55)","line":466,"loc":{"start":{"line":466,"column":35},"end":{"line":466,"column":59}}},"56":{"name":"(anonymous_56)","line":473,"loc":{"start":{"line":473,"column":34},"end":{"line":473,"column":51}}},"57":{"name":"(anonymous_57)","line":480,"loc":{"start":{"line":480,"column":33},"end":{"line":480,"column":57}}},"58":{"name":"(anonymous_58)","line":487,"loc":{"start":{"line":487,"column":32},"end":{"line":487,"column":49}}},"59":{"name":"(anonymous_59)","line":494,"loc":{"start":{"line":494,"column":37},"end":{"line":494,"column":61}}},"60":{"name":"(anonymous_60)","line":501,"loc":{"start":{"line":501,"column":36},"end":{"line":501,"column":53}}},"61":{"name":"(anonymous_61)","line":508,"loc":{"start":{"line":508,"column":43},"end":{"line":508,"column":67}}},"62":{"name":"(anonymous_62)","line":515,"loc":{"start":{"line":515,"column":42},"end":{"line":515,"column":59}}},"63":{"name":"(anonymous_63)","line":523,"loc":{"start":{"line":523,"column":37},"end":{"line":523,"column":61}}},"64":{"name":"(anonymous_64)","line":530,"loc":{"start":{"line":530,"column":36},"end":{"line":530,"column":53}}},"65":{"name":"(anonymous_65)","line":538,"loc":{"start":{"line":538,"column":43},"end":{"line":538,"column":67}}},"66":{"name":"(anonymous_66)","line":545,"loc":{"start":{"line":545,"column":42},"end":{"line":545,"column":59}}},"67":{"name":"(anonymous_67)","line":553,"loc":{"start":{"line":553,"column":43},"end":{"line":553,"column":67}}},"68":{"name":"(anonymous_68)","line":560,"loc":{"start":{"line":560,"column":42},"end":{"line":560,"column":59}}},"69":{"name":"(anonymous_69)","line":567,"loc":{"start":{"line":567,"column":35},"end":{"line":567,"column":59}}},"70":{"name":"(anonymous_70)","line":574,"loc":{"start":{"line":574,"column":34},"end":{"line":574,"column":51}}},"71":{"name":"(anonymous_71)","line":581,"loc":{"start":{"line":581,"column":41},"end":{"line":581,"column":65}}},"72":{"name":"(anonymous_72)","line":588,"loc":{"start":{"line":588,"column":40},"end":{"line":588,"column":57}}},"73":{"name":"(anonymous_73)","line":596,"loc":{"start":{"line":596,"column":31},"end":{"line":596,"column":47}}},"74":{"name":"(anonymous_74)","line":604,"loc":{"start":{"line":604,"column":31},"end":{"line":604,"column":47}}},"75":{"name":"(anonymous_75)","line":611,"loc":{"start":{"line":611,"column":33},"end":{"line":611,"column":47}}},"76":{"name":"(anonymous_76)","line":617,"loc":{"start":{"line":617,"column":42},"end":{"line":617,"column":56}}},"77":{"name":"(anonymous_77)","line":624,"loc":{"start":{"line":624,"column":39},"end":{"line":624,"column":61}}},"78":{"name":"(anonymous_78)","line":632,"loc":{"start":{"line":632,"column":38},"end":{"line":632,"column":62}}},"79":{"name":"(anonymous_79)","line":639,"loc":{"start":{"line":639,"column":43},"end":{"line":639,"column":68}}},"80":{"name":"(anonymous_80)","line":646,"loc":{"start":{"line":646,"column":36},"end":{"line":646,"column":58}}},"81":{"name":"(anonymous_81)","line":653,"loc":{"start":{"line":653,"column":35},"end":{"line":653,"column":52}}},"82":{"name":"(anonymous_82)","line":660,"loc":{"start":{"line":660,"column":36},"end":{"line":660,"column":58}}},"83":{"name":"(anonymous_83)","line":667,"loc":{"start":{"line":667,"column":35},"end":{"line":667,"column":52}}},"84":{"name":"(anonymous_84)","line":674,"loc":{"start":{"line":674,"column":36},"end":{"line":674,"column":58}}},"85":{"name":"(anonymous_85)","line":681,"loc":{"start":{"line":681,"column":35},"end":{"line":681,"column":52}}},"86":{"name":"(anonymous_86)","line":688,"loc":{"start":{"line":688,"column":33},"end":{"line":688,"column":58}}},"87":{"name":"(anonymous_87)","line":696,"loc":{"start":{"line":696,"column":34},"end":{"line":696,"column":56}}},"88":{"name":"(anonymous_88)","line":702,"loc":{"start":{"line":702,"column":33},"end":{"line":702,"column":50}}},"89":{"name":"(anonymous_89)","line":709,"loc":{"start":{"line":709,"column":35},"end":{"line":709,"column":59}}},"90":{"name":"(anonymous_90)","line":716,"loc":{"start":{"line":716,"column":33},"end":{"line":716,"column":48}}},"91":{"name":"(anonymous_91)","line":721,"loc":{"start":{"line":721,"column":34},"end":{"line":721,"column":48}}},"92":{"name":"(anonymous_92)","line":728,"loc":{"start":{"line":728,"column":29},"end":{"line":728,"column":45}}},"93":{"name":"(anonymous_93)","line":734,"loc":{"start":{"line":734,"column":32},"end":{"line":734,"column":43}}},"94":{"name":"(anonymous_94)","line":740,"loc":{"start":{"line":740,"column":30},"end":{"line":740,"column":41}}},"95":{"name":"(anonymous_95)","line":746,"loc":{"start":{"line":746,"column":32},"end":{"line":746,"column":43}}},"96":{"name":"(anonymous_96)","line":753,"loc":{"start":{"line":753,"column":32},"end":{"line":753,"column":46}}},"97":{"name":"(anonymous_97)","line":760,"loc":{"start":{"line":760,"column":37},"end":{"line":760,"column":57}}},"98":{"name":"(anonymous_98)","line":768,"loc":{"start":{"line":768,"column":28},"end":{"line":768,"column":50}}},"99":{"name":"(anonymous_99)","line":777,"loc":{"start":{"line":777,"column":28},"end":{"line":777,"column":60}}},"100":{"name":"(anonymous_100)","line":785,"loc":{"start":{"line":785,"column":31},"end":{"line":785,"column":50}}},"101":{"name":"(anonymous_101)","line":792,"loc":{"start":{"line":792,"column":28},"end":{"line":792,"column":40}}},"102":{"name":"(anonymous_102)","line":799,"loc":{"start":{"line":799,"column":28},"end":{"line":799,"column":40}}},"103":{"name":"(anonymous_103)","line":807,"loc":{"start":{"line":807,"column":22},"end":{"line":807,"column":35}}},"104":{"name":"(anonymous_104)","line":816,"loc":{"start":{"line":816,"column":22},"end":{"line":816,"column":50}}},"105":{"name":"(anonymous_105)","line":824,"loc":{"start":{"line":824,"column":23},"end":{"line":824,"column":36}}},"106":{"name":"(anonymous_106)","line":833,"loc":{"start":{"line":833,"column":23},"end":{"line":833,"column":51}}},"107":{"name":"(anonymous_107)","line":841,"loc":{"start":{"line":841,"column":26},"end":{"line":841,"column":39}}},"108":{"name":"(anonymous_108)","line":850,"loc":{"start":{"line":850,"column":26},"end":{"line":850,"column":54}}}},"statementMap":{"1":{"start":{"line":35,"column":0},"end":{"line":35,"column":54}},"2":{"start":{"line":40,"column":0},"end":{"line":40,"column":27}},"3":{"start":{"line":45,"column":0},"end":{"line":45,"column":28}},"4":{"start":{"line":50,"column":0},"end":{"line":50,"column":34}},"5":{"start":{"line":55,"column":0},"end":{"line":55,"column":27}},"6":{"start":{"line":60,"column":0},"end":{"line":60,"column":34}},"7":{"start":{"line":66,"column":0},"end":{"line":66,"column":19}},"8":{"start":{"line":72,"column":0},"end":{"line":72,"column":33}},"9":{"start":{"line":78,"column":0},"end":{"line":78,"column":32}},"10":{"start":{"line":84,"column":0},"end":{"line":84,"column":30}},"11":{"start":{"line":92,"column":0},"end":{"line":92,"column":58}},"12":{"start":{"line":102,"column":0},"end":{"line":102,"column":57}},"13":{"start":{"line":108,"column":0},"end":{"line":108,"column":52}},"14":{"start":{"line":114,"column":0},"end":{"line":114,"column":49}},"15":{"start":{"line":122,"column":0},"end":{"line":122,"column":75}},"16":{"start":{"line":130,"column":0},"end":{"line":130,"column":75}},"17":{"start":{"line":138,"column":0},"end":{"line":138,"column":74}},"18":{"start":{"line":146,"column":0},"end":{"line":146,"column":72}},"19":{"start":{"line":154,"column":0},"end":{"line":154,"column":73}},"20":{"start":{"line":161,"column":0},"end":{"line":161,"column":52}},"21":{"start":{"line":170,"column":0},"end":{"line":170,"column":53}},"22":{"start":{"line":179,"column":0},"end":{"line":179,"column":63}},"23":{"start":{"line":185,"column":0},"end":{"line":185,"column":60}},"24":{"start":{"line":190,"column":0},"end":{"line":190,"column":42}},"25":{"start":{"line":197,"column":0},"end":{"line":197,"column":48}},"26":{"start":{"line":202,"column":0},"end":{"line":202,"column":43}},"27":{"start":{"line":208,"column":0},"end":{"line":208,"column":43}},"28":{"start":{"line":214,"column":0},"end":{"line":214,"column":42}},"29":{"start":{"line":220,"column":0},"end":{"line":220,"column":47}},"30":{"start":{"line":226,"column":0},"end":{"line":226,"column":46}},"31":{"start":{"line":232,"column":0},"end":{"line":232,"column":45}},"32":{"start":{"line":238,"column":0},"end":{"line":238,"column":45}},"33":{"start":{"line":246,"column":0},"end":{"line":246,"column":55}},"34":{"start":{"line":254,"column":0},"end":{"line":254,"column":56}},"35":{"start":{"line":262,"column":0},"end":{"line":262,"column":59}},"36":{"start":{"line":270,"column":0},"end":{"line":270,"column":60}},"37":{"start":{"line":277,"column":0},"end":{"line":277,"column":52}},"38":{"start":{"line":284,"column":0},"end":{"line":284,"column":60}},"39":{"start":{"line":291,"column":0},"end":{"line":291,"column":52}},"40":{"start":{"line":298,"column":0},"end":{"line":298,"column":61}},"41":{"start":{"line":305,"column":0},"end":{"line":305,"column":53}},"42":{"start":{"line":312,"column":0},"end":{"line":312,"column":61}},"43":{"start":{"line":319,"column":0},"end":{"line":319,"column":53}},"44":{"start":{"line":326,"column":0},"end":{"line":326,"column":61}},"45":{"start":{"line":333,"column":0},"end":{"line":333,"column":54}},"46":{"start":{"line":340,"column":0},"end":{"line":340,"column":62}},"47":{"start":{"line":347,"column":0},"end":{"line":347,"column":54}},"48":{"start":{"line":354,"column":0},"end":{"line":354,"column":61}},"49":{"start":{"line":361,"column":0},"end":{"line":361,"column":53}},"50":{"start":{"line":368,"column":0},"end":{"line":368,"column":59}},"51":{"start":{"line":375,"column":0},"end":{"line":375,"column":51}},"52":{"start":{"line":382,"column":0},"end":{"line":382,"column":62}},"53":{"start":{"line":389,"column":0},"end":{"line":389,"column":54}},"54":{"start":{"line":396,"column":0},"end":{"line":396,"column":61}},"55":{"start":{"line":403,"column":0},"end":{"line":403,"column":53}},"56":{"start":{"line":410,"column":0},"end":{"line":410,"column":62}},"57":{"start":{"line":417,"column":0},"end":{"line":417,"column":54}},"58":{"start":{"line":424,"column":0},"end":{"line":424,"column":63}},"59":{"start":{"line":431,"column":0},"end":{"line":431,"column":55}},"60":{"start":{"line":438,"column":0},"end":{"line":438,"column":61}},"61":{"start":{"line":445,"column":0},"end":{"line":445,"column":53}},"62":{"start":{"line":452,"column":0},"end":{"line":452,"column":63}},"63":{"start":{"line":459,"column":0},"end":{"line":459,"column":55}},"64":{"start":{"line":466,"column":0},"end":{"line":466,"column":62}},"65":{"start":{"line":473,"column":0},"end":{"line":473,"column":54}},"66":{"start":{"line":480,"column":0},"end":{"line":480,"column":60}},"67":{"start":{"line":487,"column":0},"end":{"line":487,"column":52}},"68":{"start":{"line":494,"column":0},"end":{"line":494,"column":64}},"69":{"start":{"line":501,"column":0},"end":{"line":501,"column":56}},"70":{"start":{"line":508,"column":0},"end":{"line":508,"column":70}},"71":{"start":{"line":515,"column":0},"end":{"line":515,"column":62}},"72":{"start":{"line":523,"column":0},"end":{"line":523,"column":64}},"73":{"start":{"line":530,"column":0},"end":{"line":530,"column":56}},"74":{"start":{"line":538,"column":0},"end":{"line":538,"column":70}},"75":{"start":{"line":545,"column":0},"end":{"line":545,"column":62}},"76":{"start":{"line":553,"column":0},"end":{"line":553,"column":70}},"77":{"start":{"line":560,"column":0},"end":{"line":560,"column":62}},"78":{"start":{"line":567,"column":0},"end":{"line":567,"column":62}},"79":{"start":{"line":574,"column":0},"end":{"line":574,"column":54}},"80":{"start":{"line":581,"column":0},"end":{"line":581,"column":68}},"81":{"start":{"line":588,"column":0},"end":{"line":588,"column":60}},"82":{"start":{"line":596,"column":0},"end":{"line":596,"column":50}},"83":{"start":{"line":604,"column":0},"end":{"line":604,"column":50}},"84":{"start":{"line":611,"column":0},"end":{"line":611,"column":50}},"85":{"start":{"line":617,"column":0},"end":{"line":617,"column":59}},"86":{"start":{"line":624,"column":0},"end":{"line":624,"column":64}},"87":{"start":{"line":632,"column":0},"end":{"line":632,"column":65}},"88":{"start":{"line":639,"column":0},"end":{"line":639,"column":71}},"89":{"start":{"line":646,"column":0},"end":{"line":646,"column":61}},"90":{"start":{"line":653,"column":0},"end":{"line":653,"column":55}},"91":{"start":{"line":660,"column":0},"end":{"line":660,"column":61}},"92":{"start":{"line":667,"column":0},"end":{"line":667,"column":55}},"93":{"start":{"line":674,"column":0},"end":{"line":674,"column":61}},"94":{"start":{"line":681,"column":0},"end":{"line":681,"column":55}},"95":{"start":{"line":688,"column":0},"end":{"line":688,"column":61}},"96":{"start":{"line":696,"column":0},"end":{"line":696,"column":59}},"97":{"start":{"line":702,"column":0},"end":{"line":702,"column":53}},"98":{"start":{"line":709,"column":0},"end":{"line":709,"column":62}},"99":{"start":{"line":716,"column":0},"end":{"line":716,"column":51}},"100":{"start":{"line":721,"column":0},"end":{"line":721,"column":51}},"101":{"start":{"line":728,"column":0},"end":{"line":728,"column":48}},"102":{"start":{"line":734,"column":0},"end":{"line":734,"column":46}},"103":{"start":{"line":740,"column":0},"end":{"line":740,"column":44}},"104":{"start":{"line":746,"column":0},"end":{"line":746,"column":46}},"105":{"start":{"line":753,"column":0},"end":{"line":753,"column":49}},"106":{"start":{"line":760,"column":0},"end":{"line":760,"column":60}},"107":{"start":{"line":768,"column":0},"end":{"line":768,"column":53}},"108":{"start":{"line":777,"column":0},"end":{"line":777,"column":63}},"109":{"start":{"line":785,"column":0},"end":{"line":785,"column":53}},"110":{"start":{"line":792,"column":0},"end":{"line":792,"column":43}},"111":{"start":{"line":799,"column":0},"end":{"line":799,"column":43}},"112":{"start":{"line":807,"column":0},"end":{"line":807,"column":38}},"113":{"start":{"line":816,"column":0},"end":{"line":816,"column":53}},"114":{"start":{"line":824,"column":0},"end":{"line":824,"column":39}},"115":{"start":{"line":833,"column":0},"end":{"line":833,"column":54}},"116":{"start":{"line":841,"column":0},"end":{"line":841,"column":42}},"117":{"start":{"line":850,"column":0},"end":{"line":850,"column":57}},"118":{"start":{"line":856,"column":0},"end":{"line":856,"column":34}},"119":{"start":{"line":862,"column":0},"end":{"line":862,"column":35}}},"branchMap":{},"code":["/*"," * Copyright 2012 The Closure Compiler Authors."," *"," * Licensed under the Apache License, Version 2.0 (the \"License\");"," * you may not use this file except in compliance with the License."," * You may obtain a copy of the License at"," *"," *     http://www.apache.org/licenses/LICENSE-2.0"," *"," * Unless required by applicable law or agreed to in writing, software"," * distributed under the License is distributed on an \"AS IS\" BASIS,"," * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."," * See the License for the specific language governing permissions and"," * limitations under the License."," */","","/**"," * @fileoverview Externs for ByteBuffer.js."," * @see https://github.com/dcodeIO/ByteBuffer.js"," * @externs"," */","","/**"," BEGIN_NODE_INCLUDE"," var ByteBuffer = require('bytebuffer');"," END_NODE_INCLUDE"," */","","/**"," * @param {number=} capacity"," * @param {boolean=} littleEndian"," * @param {boolean=} sparse"," * @constructor"," */","function ByteBuffer(capacity, littleEndian, sparse) {};","","/**"," * @type {?ArrayBuffer}"," */","ByteBuffer.prototype.array;","","/**"," * @type {number}"," */","ByteBuffer.prototype.offset;","","/**"," * @type {number}"," */","ByteBuffer.prototype.markedOffset;","","/**"," * @type {number}"," */","ByteBuffer.prototype.limit;","","/**"," * @type {boolean}"," */","ByteBuffer.prototype.littleEndian;","","/**"," * @type {string}"," * @const"," */","ByteBuffer.VERSION;","","/**"," * @type {number}"," * @const"," */","ByteBuffer.DEFAULT_CAPACITY = 32;","","/**"," * @type {boolean}"," * @const"," */","ByteBuffer.LITTLE_ENDIAN = true;","","/**"," * @type {boolean}"," * @const"," */","ByteBuffer.BIG_ENDIAN = false;","","/**"," * @param {number=} capacity"," * @param {boolean=} littleEndian"," * @returns {!ByteBuffer}"," * @nosideeffects"," */","ByteBuffer.allocate = function(capacity, littleEndian) {};","","/**"," * @param {!ArrayBuffer|!Buffer|!{array: ArrayBuffer}|!{buffer: ArrayBuffer}|string} buffer"," * @param {(string|boolean)=} enc"," * @param {boolean=} littleEndian"," * @returns {!ByteBuffer}"," * @throws {Error}"," * @nosideeffects"," */","ByteBuffer.wrap = function(buffer, enc, littleEndian) {};","","/**"," * @param {boolean=} littleEndian"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.LE = function(littleEndian) {};","","/**"," * @param {boolean=} bigEndian"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.BE = function(bigEndian) {};","","/**"," * @param {string} str"," * @param {boolean} littleEndian"," * @param {boolean} noAssert"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.fromBase64 = function(str, littleEndian, noAssert) {};","","/**"," * @param {string} str"," * @param {boolean} littleEndian"," * @param {boolean} noAssert"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.fromBinary = function(str, littleEndian, noAssert) {};","","/**"," * @param {string} str"," * @param {boolean} littleEndian"," * @param {boolean} noAssert"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.fromDebug = function(str, littleEndian, noAssert) {};","","/**"," * @param {string} str"," * @param {boolean} littleEndian"," * @param {boolean} noAssert"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.fromHex = function(str, littleEndian, noAssert) {};","","/**"," * @param {string} str"," * @param {boolean} littleEndian"," * @param {boolean} noAssert"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.fromUTF8 = function(str, littleEndian, noAssert) {};","","","/**"," * @param {number} capacity"," * @returns {boolean}"," */","ByteBuffer.prototype.resize = function(capacity) {};","","/**"," * @param {number} begin"," * @param {number} end"," * @returns {!ByteBuffer}"," * @throws {Error}"," * @nosideeffects"," */","ByteBuffer.prototype.slice = function(begin, end) {};","","/**"," * @param {number} begin"," * @param {number} end"," * @returns {!ByteBuffer}"," * @throws {Error}"," * @nosideeffects"," */","ByteBuffer.prototype.sliceAndCompact = function(begin, end) {};","","/**"," * @param {number} capacity"," * @returns {boolean}"," */","ByteBuffer.prototype.ensureCapacity = function(capacity) {};","","/**"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.flip = function() {};","","/**"," * @param {number=} offset"," * @returns {!ByteBuffer}"," * @throws {Error}"," */","ByteBuffer.prototype.mark = function(offset) {};","","/**"," * @returns {!ByteBuffer} this"," */","ByteBuffer.prototype.reset = function() {};","","/**"," * @returns {!ByteBuffer}"," * @nosideeffects"," */","ByteBuffer.prototype.clone = function() {};","","/**"," * @returns {!ByteBuffer}"," * @nosideeffects"," */","ByteBuffer.prototype.copy = function() {};","","/**"," * @returns {number}"," * @nosideeffects"," */","ByteBuffer.prototype.remaining = function() {};","","/**"," * @returns {number}"," * @nosideeffects"," */","ByteBuffer.prototype.capacity = function() {};","","/**"," * @returns {!ByteBuffer}"," * @throws {Error}"," */","ByteBuffer.prototype.compact = function() {};","","/**"," * @returns {!ByteBuffer}"," * @throws {Error}"," */","ByteBuffer.prototype.reverse = function() {};","","/**"," * @param {!ByteBuffer} src"," * @param {number=} offset"," * @returns {!ByteBuffer}"," * @throws {Error}"," */","ByteBuffer.prototype.append = function(src, offset) {};","","/**"," * @param {!ByteBuffer} src"," * @param {number=} offset"," * @returns {!ByteBuffer}"," * @throws {Error}"," */","ByteBuffer.prototype.prepend = function(src, offset) {};","","/**"," * @param {number|string} value"," * @param {number} begin"," * @param {number} end"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.fill = function(value, begin, end) {};","","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.writeInt8 = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {number}"," * @throws {Error}"," */","ByteBuffer.prototype.readInt8 = function(offset) {};","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.writeByte = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {number}"," * @throws {Error}"," */","ByteBuffer.prototype.readByte = function(offset) {};","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.writeUint8 = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {number}"," * @throws {Error}"," */","ByteBuffer.prototype.readUint8 = function(offset) {};","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.writeInt16 = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {number}"," * @throws {Error}"," */","ByteBuffer.prototype.readInt16 = function(offset) {};","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.writeShort = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {number}"," * @throws {Error}"," */","ByteBuffer.prototype.readShort = function (offset) {};","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.writeUint16 = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {number}"," * @throws {Error}"," */","ByteBuffer.prototype.readUint16 = function(offset) {};","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.writeInt32 = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {number}"," * @throws {Error}"," */","ByteBuffer.prototype.readInt32 = function(offset) {};","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.writeInt = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {number}"," * @throws {Error}"," */","ByteBuffer.prototype.readInt = function(offset) {};","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer} "," */","ByteBuffer.prototype.writeUint32 = function(value, offset) {};","","/**"," * @param {number=} offset "," * @returns {number}"," * @throws {Error}"," */","ByteBuffer.prototype.readUint32 = function(offset) {};","","/**"," * @param {number|Long} value"," * @param {number=} offset"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.writeInt64 = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {Long}"," * @throws {Error}"," */","ByteBuffer.prototype.readInt64 = function(offset) {};","","/**"," * @param {number|Long} value"," * @param {number=} offset"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.writeUint64 = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {Long}"," * @throws {Error}"," */","ByteBuffer.prototype.readUint64 = function(offset) {};","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.writeFloat32 = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {number}"," * @throws {Error}"," */","ByteBuffer.prototype.readFloat32 = function(offset) {};","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.writeFloat = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {number}"," * @throws {Error}"," */","ByteBuffer.prototype.readFloat = function(offset) {};","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.writeFloat64 = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {number}"," * @throws {Error}"," */","ByteBuffer.prototype.readFloat64 = function(offset) {};","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.writeDouble = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {number}"," * @throws {Error}"," */","ByteBuffer.prototype.readDouble = function(offset) {};","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.writeLong = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {number}"," * @throws {Error}"," */","ByteBuffer.prototype.readLong = function(offset) {};","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer|number}"," */","ByteBuffer.prototype.writeVarint32 = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {number|!{value: number, length: number}}"," * @throws {Error}"," */","ByteBuffer.prototype.readVarint32 = function(offset) {};","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer|number}"," */","ByteBuffer.prototype.writeZigZagVarint32 = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {number|{value: number, length: number}}"," * @throws {Error}"," */","ByteBuffer.prototype.readZigZagVarint32 = function(offset) {};","","/**"," * @param {number|Long} value"," * @param {number=} offset"," * @returns {!ByteBuffer|number}"," * @throws {Error}"," */","ByteBuffer.prototype.writeVarint64 = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {!Long|{value: !Long, length: number}}"," * @throws {Error}"," */","ByteBuffer.prototype.readVarint64 = function(offset) {};","","/**"," * @param {number|Long} value"," * @param {number=} offset"," * @returns {!ByteBuffer|number}"," * @throws {Error}"," */","ByteBuffer.prototype.writeZigZagVarint64 = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {!Long|!{value: !Long, length: number}}"," * @throws {Error}"," */","ByteBuffer.prototype.readZigZagVarint64 = function(offset) {};","","/**"," * @param {number|Long} value"," * @param {number=} offset"," * @returns {!ByteBuffer|number}"," * @throws {Error}"," */","ByteBuffer.prototype.writeVarint64ZigZag = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {!Long|{value: !Long, length: number}}"," * @throws {Error}"," */","ByteBuffer.prototype.readVarint64ZigZag = function(offset) {};","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer|number}"," */","ByteBuffer.prototype.writeVarint = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {number|!{value: number, length: number}}"," * @throws {Error}"," */","ByteBuffer.prototype.readVarint = function(offset) {};","","/**"," * @param {number} value"," * @param {number=} offset"," * @returns {!ByteBuffer|number}"," */","ByteBuffer.prototype.writeZigZagVarint = function(value, offset) {};","","/**"," * @param {number=} offset"," * @returns {number|{value: number, length: number}}"," * @throws {Error}"," */","ByteBuffer.prototype.readZigZagVarint = function(offset) {};","","/**"," * @param {number} value"," * @returns {number}"," * @throws {Error}"," * @nosideeffects"," */","ByteBuffer.calculateVarint32 = function(value) {};","","/**"," * @param {number} value"," * @returns {number}"," * @throws {Error}"," * @nosideeffects"," */","ByteBuffer.calculateVarint64 = function(value) {};","","/**"," * @param {string} str"," * @returns {number}"," * @nosideeffects"," */","ByteBuffer.calculateUTF8String = function(str) {};","","/**"," * @param {string} str"," * @returns {number}"," */","ByteBuffer.prototype.calculateUTF8Bytes = function(str) {};","","/**"," * @param {string} str"," * @param {number=} offset "," * @returns {!ByteBuffer|number}"," */","ByteBuffer.prototype.writeUTF8String = function(str, offset) {};","","/**"," * @param {number} chars"," * @param {number=} offset"," * @returns {string|!{string: string, length: number}}"," * @throws {Error}"," */","ByteBuffer.prototype.readUTF8String = function(chars, offset) {};","","/**"," * @param {number} length"," * @param {number} offset"," * @throws {Error}"," */","ByteBuffer.prototype.readUTF8StringBytes = function(length, offset) {};","","/**"," * @param {string} str"," * @param {number=} offset"," * @returns {!ByteBuffer|number}"," */","ByteBuffer.prototype.writeLString = function(str, offset) {};","","/**"," * @param {number=} offset"," * @returns {string|!{string: string, length: number}}"," * @throws {Error}"," */","ByteBuffer.prototype.readLString = function(offset) {};","","/**"," * @param {string} str"," * @param {number=} offset"," * @returns {!ByteBuffer|number}"," */","ByteBuffer.prototype.writeVString = function(str, offset) {};","","/**"," * @param {number=} offset"," * @returns {string|!{string: string, length: number}}"," * @throws {Error}"," */","ByteBuffer.prototype.readVString = function(offset) {};","","/**"," * @param {string} str"," * @param {number=} offset"," * @returns {!ByteBuffer|number}"," */","ByteBuffer.prototype.writeCString = function(str, offset) {};","","/**"," * @param {number=} offset"," * @returns {string|!{string: string, length: number}}"," * @throws {Error}"," */","ByteBuffer.prototype.readCString = function(offset) {};","","/**"," * @param {number} length"," * @param {number=} offset"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.readBytes = function(length, offset) {};","","/**"," * @param {!ByteBuffer} src"," * @param {number=} offset"," * @returns {!ByteBuffer}"," * @throws {Error}"," */","ByteBuffer.prototype.writeBytes = function(src, offset) {};","","/**"," * @param {number=} offset"," * @returns {Array<boolean>}"," */","ByteBufferPrototype.readBitSet = function(offset) {};","","/**"," * @param {Array<boolean>}"," * @param {number=}"," * @returns {!ByteBuffer}"," */","ByteBuffer.prototype.writeBitSet = function(value, offset) {};","","/**"," * @param {number=} wrap"," * @returns {string}"," * @nosideeffects"," */","ByteBuffer.prototype.toColumns = function(wrap) {};","","/**"," * @param {function(string)=} out"," */","ByteBuffer.prototype.printDebug = function(out) {};","","/**"," * @param {boolean=} debug"," * @returns {string}"," * @nosideeffects"," */","ByteBuffer.prototype.toHex = function(debug) {};","","/**"," * @returns {string}"," * @nosideeffects"," */","ByteBuffer.prototype.toBinary = function() {};","","/**"," * @returns {string}"," * @nosideeffects"," */","ByteBuffer.prototype.toUTF8 = function() {};","","/**"," * @returns {string}"," * @nosideeffects"," */","ByteBuffer.prototype.toBase64 = function() {};","","/**"," * @param {string=} enc"," * @returns {string}"," * @nosideeffects"," */","ByteBuffer.prototype.toString = function(enc) {};","","/**"," * @param {boolean=} forceCopy"," * @returns {ArrayBuffer}"," * @nosideeffects"," */","ByteBuffer.prototype.toArrayBuffer = function(forceCopy) {};","","/**"," * @param {!ByteBuffer} src"," * @param {number} offset"," * @returns {!{char: number, length: number}}"," * @nosideeffects"," */","ByteBuffer.decodeUTF8Char = function(src, offset) {};","","/**"," * @param {number} charCode"," * @param {!ByteBuffer} dst"," * @param {number} offset"," * @returns {number}"," * @throws {Error}"," */","ByteBuffer.encodeUTF8Char = function(charCode, dst, offset) {};","","/**"," * @param {number} charCode"," * @returns {number}"," * @throws {Error}"," * @nosideeffects"," */","ByteBuffer.calculateUTF8Char = function(charCode) {};","","/**"," * @param {number} n"," * @returns {number}"," * @nosideeffects"," */","ByteBuffer.zigZagEncode32 = function(n) {};","","/**"," * @param {number} n"," * @returns {number}"," * @nosideeffects"," */","ByteBuffer.zigZagDecode32 = function(n) {};","","/**"," * @param {!ByteBuffer} bb"," * @returns {string}"," * @throws {Error}"," * @nosideeffects"," */","ByteBuffer.encode64 = function(bb) {};","","/**"," * @param {string} str"," * @param {boolean=} littleEndian"," * @returns {!ByteBuffer}"," * @throws {Error}"," * @nosideeffects"," */","ByteBuffer.decode64 = function(str, littleEndian) {};","","/**"," * @param {!ByteBuffer} bb"," * @returns {string}"," * @throws {Error}"," * @nosideeffects"," */","ByteBuffer.encodeHex = function(bb) {};","","/**"," * @param {string} str"," * @param {boolean=} littleEndian"," * @returns {!ByteBuffer}"," * @throws {Error}"," * @nosideeffects"," */","ByteBuffer.decodeHex = function(str, littleEndian) {};","","/**"," * @param {!ByteBuffer} bb"," * @returns {string}"," * @throws {Error}"," * @nosideeffects"," */","ByteBuffer.encodeBinary = function(bb) {};","","/**"," * @param {string} str"," * @param {boolean=} littleEndian"," * @returns {!ByteBuffer}"," * @throws {Error}"," * @nosideeffects"," */","ByteBuffer.decodeBinary = function(str, littleEndian) {};","","/**"," * @type {number}"," * @const"," */","ByteBuffer.MAX_VARINT32_BYTES = 5;","","/**"," * @type {number}"," * @const"," */","ByteBuffer.MAX_VARINT64_BYTES = 10;",""],"l":{"35":1,"40":2,"45":2,"50":2,"55":2,"60":2,"66":2,"72":2,"78":2,"84":2,"92":2,"102":2,"108":2,"114":2,"122":2,"130":2,"138":2,"146":2,"154":2,"161":2,"170":2,"179":2,"185":2,"190":2,"197":2,"202":2,"208":2,"214":2,"220":2,"226":2,"232":2,"238":2,"246":2,"254":2,"262":2,"270":2,"277":2,"284":2,"291":2,"298":2,"305":2,"312":2,"319":2,"326":2,"333":2,"340":2,"347":2,"354":2,"361":2,"368":2,"375":2,"382":2,"389":2,"396":2,"403":2,"410":2,"417":2,"424":2,"431":2,"438":2,"445":2,"452":2,"459":2,"466":2,"473":2,"480":2,"487":2,"494":2,"501":2,"508":2,"515":2,"523":2,"530":2,"538":2,"545":2,"553":2,"560":2,"567":2,"574":2,"581":2,"588":2,"596":2,"604":2,"611":2,"617":2,"624":2,"632":2,"639":2,"646":2,"653":2,"660":2,"667":2,"674":2,"681":2,"688":2,"696":2,"702":2,"709":0,"716":0,"721":0,"728":0,"734":0,"740":0,"746":0,"753":0,"760":0,"768":0,"777":0,"785":0,"792":0,"799":0,"807":0,"816":0,"824":0,"833":0,"841":0,"850":0,"856":0,"862":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/externs/minimal-env.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/externs/minimal-env.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"require","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":29}}},"2":{"name":"define","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":31}}},"3":{"name":"Buffer","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":22}}},"4":{"name":"(anonymous_4)","line":25,"loc":{"start":{"line":25,"column":18},"end":{"line":25,"column":32}}},"5":{"name":"(anonymous_5)","line":35,"loc":{"start":{"line":35,"column":14},"end":{"line":35,"column":26}}},"6":{"name":"(anonymous_6)","line":46,"loc":{"start":{"line":46,"column":23},"end":{"line":46,"column":42}}},"7":{"name":"(anonymous_7)","line":52,"loc":{"start":{"line":52,"column":31},"end":{"line":52,"column":48}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":33}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":24}},"4":{"start":{"line":25,"column":0},"end":{"line":25,"column":35}},"5":{"start":{"line":30,"column":0},"end":{"line":30,"column":17}},"6":{"start":{"line":35,"column":0},"end":{"line":35,"column":29}},"7":{"start":{"line":40,"column":0},"end":{"line":40,"column":16}},"8":{"start":{"line":46,"column":0},"end":{"line":46,"column":45}},"9":{"start":{"line":52,"column":0},"end":{"line":52,"column":51}}},"branchMap":{},"code":["/**"," * @param {string} moduleName"," * @returns {?}"," */","function require(moduleName) {};","","/**"," * @param {string} name"," * @param {Array.<string>} deps"," * @param {function(...[*])} f"," */","function define(name, deps, f) {};","","/**"," * @param {number} size"," * @constructor"," * @extends Array"," */","function Buffer(size) {};","","/**"," * @param {*} buf"," * @return {boolean}"," */","Buffer.isBuffer = function(buf) {};","","/**"," * @type {Object.<string,*>}"," */","var console = {};","","/**"," * @param {string} s"," */","console.log = function(s) {};","","/**"," * @type {*}"," */","var module = {};","","/**"," * @param {...*} var_args"," * @returns {string}"," */","String.fromCodePoint = function(var_args) {};","","/**"," * @param {number} offset"," * @returns {number}"," */","String.prototype.codePointAt = function(offset) {};",""],"l":{"5":1,"12":1,"19":1,"25":1,"30":1,"35":1,"40":1,"46":1,"52":1}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/bytebuffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/bytebuffer.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":2,"24":2,"25":2,"26":2,"27":2,"28":2,"29":2,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":17},"end":{"line":14,"column":60}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":102,"column":2}},"2":{"start":{"line":15,"column":4},"end":{"line":16,"column":47}},"3":{"start":{"line":16,"column":8},"end":{"line":16,"column":47}},"4":{"start":{"line":17,"column":4},"end":{"line":18,"column":49}},"5":{"start":{"line":18,"column":8},"end":{"line":18,"column":49}},"6":{"start":{"line":19,"column":4},"end":{"line":20,"column":47}},"7":{"start":{"line":20,"column":8},"end":{"line":20,"column":47}},"8":{"start":{"line":21,"column":4},"end":{"line":27,"column":5}},"9":{"start":{"line":22,"column":8},"end":{"line":22,"column":32}},"10":{"start":{"line":23,"column":8},"end":{"line":24,"column":49}},"11":{"start":{"line":24,"column":12},"end":{"line":24,"column":49}},"12":{"start":{"line":25,"column":8},"end":{"line":25,"column":38}},"13":{"start":{"line":26,"column":8},"end":{"line":26,"column":30}},"14":{"start":{"line":35,"column":4},"end":{"line":35,"column":71}},"15":{"start":{"line":43,"column":4},"end":{"line":43,"column":76}},"16":{"start":{"line":51,"column":4},"end":{"line":51,"column":66}},"17":{"start":{"line":58,"column":4},"end":{"line":58,"column":68}},"18":{"start":{"line":69,"column":4},"end":{"line":69,"column":20}},"19":{"start":{"line":78,"column":4},"end":{"line":78,"column":27}},"20":{"start":{"line":87,"column":4},"end":{"line":87,"column":26}},"21":{"start":{"line":94,"column":4},"end":{"line":94,"column":37}},"22":{"start":{"line":101,"column":4},"end":{"line":101,"column":29}},"23":{"start":{"line":110,"column":0},"end":{"line":110,"column":39}},"24":{"start":{"line":118,"column":0},"end":{"line":118,"column":32}},"25":{"start":{"line":126,"column":0},"end":{"line":126,"column":30}},"26":{"start":{"line":133,"column":0},"end":{"line":133,"column":33}},"27":{"start":{"line":140,"column":0},"end":{"line":140,"column":50}},"28":{"start":{"line":147,"column":0},"end":{"line":147,"column":36}},"29":{"start":{"line":157,"column":0},"end":{"line":157,"column":23}},"30":{"start":{"line":168,"column":0},"end":{"line":168,"column":31}},"31":{"start":{"line":175,"column":0},"end":{"line":175,"column":47}},"32":{"start":{"line":184,"column":0},"end":{"line":184,"column":37}},"33":{"start":{"line":186,"column":0},"end":{"line":190,"column":3}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"4":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"5":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":8}},{"start":{"line":23,"column":8},"end":{"line":23,"column":8}}]},"6":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":35},"end":{"line":35,"column":47}},{"start":{"line":35,"column":50},"end":{"line":35,"column":70}}]},"7":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":35},"end":{"line":43,"column":47}},{"start":{"line":43,"column":50},"end":{"line":43,"column":75}}]},"8":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":33},"end":{"line":51,"column":37}},{"start":{"line":51,"column":40},"end":{"line":51,"column":65}}]},"9":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":33},"end":{"line":58,"column":37}},{"start":{"line":58,"column":40},"end":{"line":58,"column":67}}]},"10":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":18},"end":{"line":168,"column":22}},{"start":{"line":168,"column":26},"end":{"line":168,"column":30}}]}},"code":["//? include(\"macros.js\");","/**"," * Constructs a new ByteBuffer."," * @class The swiss army knife for binary data in JavaScript."," * @exports ByteBuffer"," * @constructor"," * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}."," * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to"," *  {@link ByteBuffer.DEFAULT_ENDIAN}."," * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to"," *  {@link ByteBuffer.DEFAULT_NOASSERT}."," * @expose"," */","var ByteBuffer = function(capacity, littleEndian, noAssert) {","    if (typeof capacity === 'undefined')","        capacity = ByteBuffer.DEFAULT_CAPACITY;","    if (typeof littleEndian === 'undefined')","        littleEndian = ByteBuffer.DEFAULT_ENDIAN;","    if (typeof noAssert === 'undefined')","        noAssert = ByteBuffer.DEFAULT_NOASSERT;","    if (!noAssert) {","        capacity = capacity | 0;","        if (capacity < 0)","            throw RangeError(\"Illegal capacity\");","        littleEndian = !!littleEndian;","        noAssert = !!noAssert;","    }","    //? if (NODE) {","    ","    /**","     * Backing node Buffer.","     * @type {!Buffer}","     * @expose","     */","    this.buffer = capacity === 0 ? EMPTY_BUFFER : new Buffer(capacity);","    //? } else {","    ","    /**","     * Backing ArrayBuffer.","     * @type {!ArrayBuffer}","     * @expose","     */","    this.buffer = capacity === 0 ? EMPTY_BUFFER : new ArrayBuffer(capacity);","","    //? if (DATAVIEW) {","    /**","     * DataView utilized to manipulate the backing buffer. Becomes `null` if the backing buffer has a capacity of `0`.","     * @type {?DataView}","     * @expose","     */","    this.view = capacity === 0 ? null : new DataView(this.buffer);","    //? } else {","    /**","     * Uint8Array utilized to manipulate the backing buffer. Becomes `null` if the backing buffer has a capacity of `0`.","     * @type {?Uint8Array}","     * @expose","     */","    this.view = capacity === 0 ? null : new Uint8Array(this.buffer);","    //? }","    //? }","    ","    /**","     * Absolute read/write offset.","     * @type {number}","     * @expose","     * @see ByteBuffer#flip","     * @see ByteBuffer#clear","     */","    this.offset = 0;","","    /**","     * Marked offset.","     * @type {number}","     * @expose","     * @see ByteBuffer#mark","     * @see ByteBuffer#reset","     */","    this.markedOffset = -1;","","    /**","     * Absolute limit of the contained data. Set to the backing buffer's capacity upon allocation.","     * @type {number}","     * @expose","     * @see ByteBuffer#flip","     * @see ByteBuffer#clear","     */","    this.limit = capacity;","","    /**","     * Whether to use little endian byte order, defaults to `false` for big endian.","     * @type {boolean}","     * @expose","     */","    this.littleEndian = littleEndian;","","    /**","     * Whether to skip assertions of offsets and values, defaults to `false`.","     * @type {boolean}","     * @expose","     */","    this.noAssert = noAssert;","};","","/**"," * ByteBuffer version."," * @type {string}"," * @const"," * @expose"," */","ByteBuffer.VERSION = \"/*?= VERSION */\";","","/**"," * Little endian constant that can be used instead of its boolean value. Evaluates to `true`."," * @type {boolean}"," * @const"," * @expose"," */","ByteBuffer.LITTLE_ENDIAN = true;","","/**"," * Big endian constant that can be used instead of its boolean value. Evaluates to `false`."," * @type {boolean}"," * @const"," * @expose"," */","ByteBuffer.BIG_ENDIAN = false;","","/**"," * Default initial capacity of `16`."," * @type {number}"," * @expose"," */","ByteBuffer.DEFAULT_CAPACITY = 16;","","/**"," * Default endianess of `false` for big endian."," * @type {boolean}"," * @expose"," */","ByteBuffer.DEFAULT_ENDIAN = ByteBuffer.BIG_ENDIAN;","","/**"," * Default no assertions flag of `false`."," * @type {boolean}"," * @expose"," */","ByteBuffer.DEFAULT_NOASSERT = false;","//? if (NODE) {","","/**"," * A `Long` class for representing a 64-bit two's-complement integer value."," * @type {!Long}"," * @const"," * @see https://npmjs.org/package/long"," * @expose"," */","ByteBuffer.Long = Long;","//? } else {","","/**"," * A `Long` class for representing a 64-bit two's-complement integer value. May be `null` if Long.js has not been loaded"," *  and int64 support is not available."," * @type {?Long}"," * @const"," * @see https://github.com/dcodeIO/long.js"," * @expose"," */","ByteBuffer.Long = Long || null;","//? }","","/**"," * @alias ByteBuffer.prototype"," * @inner"," */","var ByteBufferPrototype = ByteBuffer.prototype;","","/**"," * An indicator used to reliably determine if an object is a ByteBuffer or not."," * @type {boolean}"," * @const"," * @expose"," * @private"," */","ByteBufferPrototype.__isByteBuffer__;","","Object.defineProperty(ByteBufferPrototype, \"__isByteBuffer__\", {","    value: true,","    enumerable: false,","    configurable: false","});","","//? include(\"helpers.js\");","","//? include(\"methods/static/*.js\");","//? if (BYTES) {","","//? include(\"types/bytes/*.js\");","//? }","//? if (INTS) {","","//? include(\"types/ints/*.js\");","//? }","//? if (FLOATS) {","","//? include(\"types/floats/float*.js\");","//? }","//? if (VARINTS) {","","//? include(\"types/varints/*.js\");","//? }","//? if (UTF8 && STRINGS) {","","//? include(\"types/strings/*.js\");","//? }","","//? include(\"methods/*.js\");","//? if (ENCODINGS) {","","//? include(\"encodings/*.js\");","//? }"],"l":{"14":2,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"35":0,"43":0,"51":0,"58":0,"69":0,"78":0,"87":0,"94":0,"101":0,"110":2,"118":2,"126":2,"133":2,"140":2,"147":2,"157":2,"168":0,"175":0,"184":0,"186":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/helpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/helpers.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":1,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"assertInteger","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":40}}},"2":{"name":"assertLong","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":37}}},"3":{"name":"assertOffset","line":67,"loc":{"start":{"line":67,"column":0},"end":{"line":67,"column":46}}},"4":{"name":"assertRange","line":92,"loc":{"start":{"line":92,"column":0},"end":{"line":92,"column":43}}},"5":{"name":"stringSource","line":121,"loc":{"start":{"line":121,"column":0},"end":{"line":121,"column":25}}},"6":{"name":"(anonymous_6)","line":122,"loc":{"start":{"line":122,"column":20},"end":{"line":122,"column":31}}},"7":{"name":"stringDestination","line":133,"loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":29}}},"8":{"name":"(anonymous_8)","line":134,"loc":{"start":{"line":134,"column":33},"end":{"line":134,"column":44}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"2":{"start":{"line":15,"column":0},"end":{"line":15,"column":38}},"3":{"start":{"line":27,"column":0},"end":{"line":31,"column":1}},"4":{"start":{"line":28,"column":4},"end":{"line":29,"column":70}},"5":{"start":{"line":29,"column":8},"end":{"line":29,"column":70}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":46}},"7":{"start":{"line":41,"column":0},"end":{"line":54,"column":1}},"8":{"start":{"line":42,"column":4},"end":{"line":53,"column":77}},"9":{"start":{"line":43,"column":8},"end":{"line":43,"column":48}},"10":{"start":{"line":44,"column":11},"end":{"line":53,"column":77}},"11":{"start":{"line":45,"column":8},"end":{"line":45,"column":48}},"12":{"start":{"line":46,"column":11},"end":{"line":53,"column":77}},"13":{"start":{"line":47,"column":8},"end":{"line":50,"column":9}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":71}},"15":{"start":{"line":48,"column":45},"end":{"line":48,"column":71}},"16":{"start":{"line":49,"column":12},"end":{"line":49,"column":69}},"17":{"start":{"line":49,"column":45},"end":{"line":49,"column":69}},"18":{"start":{"line":51,"column":8},"end":{"line":51,"column":21}},"19":{"start":{"line":53,"column":8},"end":{"line":53,"column":77}},"20":{"start":{"line":67,"column":0},"end":{"line":74,"column":1}},"21":{"start":{"line":68,"column":4},"end":{"line":69,"column":71}},"22":{"start":{"line":69,"column":8},"end":{"line":69,"column":71}},"23":{"start":{"line":70,"column":4},"end":{"line":70,"column":24}},"24":{"start":{"line":71,"column":4},"end":{"line":72,"column":82}},"25":{"start":{"line":72,"column":8},"end":{"line":72,"column":82}},"26":{"start":{"line":73,"column":4},"end":{"line":73,"column":18}},"27":{"start":{"line":80,"column":0},"end":{"line":80,"column":28}},"28":{"start":{"line":92,"column":0},"end":{"line":102,"column":1}},"29":{"start":{"line":93,"column":4},"end":{"line":94,"column":67}},"30":{"start":{"line":94,"column":8},"end":{"line":94,"column":67}},"31":{"start":{"line":95,"column":4},"end":{"line":95,"column":22}},"32":{"start":{"line":96,"column":4},"end":{"line":97,"column":68}},"33":{"start":{"line":97,"column":8},"end":{"line":97,"column":68}},"34":{"start":{"line":98,"column":4},"end":{"line":98,"column":18}},"35":{"start":{"line":99,"column":4},"end":{"line":100,"column":83}},"36":{"start":{"line":100,"column":8},"end":{"line":100,"column":83}},"37":{"start":{"line":101,"column":4},"end":{"line":101,"column":24}},"38":{"start":{"line":101,"column":25},"end":{"line":101,"column":43}},"39":{"start":{"line":111,"column":0},"end":{"line":111,"column":45}},"40":{"start":{"line":121,"column":0},"end":{"line":125,"column":1}},"41":{"start":{"line":122,"column":4},"end":{"line":122,"column":12}},"42":{"start":{"line":122,"column":13},"end":{"line":124,"column":6}},"43":{"start":{"line":123,"column":8},"end":{"line":123,"column":55}},"44":{"start":{"line":133,"column":0},"end":{"line":142,"column":1}},"45":{"start":{"line":134,"column":4},"end":{"line":134,"column":25}},"46":{"start":{"line":134,"column":26},"end":{"line":141,"column":6}},"47":{"start":{"line":135,"column":8},"end":{"line":136,"column":68}},"48":{"start":{"line":136,"column":12},"end":{"line":136,"column":68}},"49":{"start":{"line":137,"column":8},"end":{"line":139,"column":30}},"50":{"start":{"line":138,"column":12},"end":{"line":139,"column":30}},"51":{"start":{"line":140,"column":8},"end":{"line":140,"column":50}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":33}},{"start":{"line":28,"column":37},"end":{"line":28,"column":52}}]},"3":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":22},"end":{"line":30,"column":33}},{"start":{"line":30,"column":36},"end":{"line":30,"column":45}}]},"4":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"5":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":11},"end":{"line":44,"column":11}},{"start":{"line":44,"column":11},"end":{"line":44,"column":11}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":11},"end":{"line":46,"column":11}},{"start":{"line":46,"column":11},"end":{"line":46,"column":11}}]},"7":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":15},"end":{"line":46,"column":20}},{"start":{"line":46,"column":24},"end":{"line":46,"column":45}}]},"8":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":8}},{"start":{"line":47,"column":8},"end":{"line":47,"column":8}}]},"9":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":12},"end":{"line":48,"column":12}},{"start":{"line":48,"column":12},"end":{"line":48,"column":12}}]},"10":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":16},"end":{"line":48,"column":24}},{"start":{"line":48,"column":28},"end":{"line":48,"column":43}}]},"11":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":12}},{"start":{"line":49,"column":12},"end":{"line":49,"column":12}}]},"12":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":16},"end":{"line":49,"column":25}},{"start":{"line":49,"column":29},"end":{"line":49,"column":43}}]},"13":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"14":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":34}},{"start":{"line":68,"column":38},"end":{"line":68,"column":54}}]},"15":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"16":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":20}},{"start":{"line":71,"column":24},"end":{"line":71,"column":41}}]},"17":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":4}},{"start":{"line":93,"column":4},"end":{"line":93,"column":4}}]},"18":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":8},"end":{"line":93,"column":33}},{"start":{"line":93,"column":37},"end":{"line":93,"column":52}}]},"19":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":96,"column":4}},{"start":{"line":96,"column":4},"end":{"line":96,"column":4}}]},"20":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":31}},{"start":{"line":96,"column":35},"end":{"line":96,"column":48}}]},"21":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"22":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":8},"end":{"line":99,"column":19}},{"start":{"line":99,"column":23},"end":{"line":99,"column":34}},{"start":{"line":99,"column":38},"end":{"line":99,"column":47}}]},"23":{"line":123,"type":"cond-expr","locations":[{"start":{"line":123,"column":30},"end":{"line":123,"column":47}},{"start":{"line":123,"column":50},"end":{"line":123,"column":54}}]},"24":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":8}},{"start":{"line":135,"column":8},"end":{"line":135,"column":8}}]},"25":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":137,"column":8}},{"start":{"line":137,"column":8},"end":{"line":137,"column":8}}]}},"code":["// helpers","//? if (NODE) {","","/**"," * @type {!Buffer}"," * @inner"," */","var EMPTY_BUFFER = new Buffer(0);","//? } else {","","/**"," * @type {!ArrayBuffer}"," * @inner"," */","var EMPTY_BUFFER = new ArrayBuffer(0);","//? }","//? if (!INLINE) {","","/**"," * Asserts that a value is an integer and returns the type-safe value."," * @param {number} value Value to assert"," * @param {boolean=} unsigned Whether explicitly unsigned"," * @returns {number} Type-safe value"," * @throws {TypeError} If `value` is not an integer"," * @inner"," */","function assertInteger(value, unsigned) {","    if (typeof value !== 'number' || value % 1 !== 0)","        throw TypeError(\"Illegal value: \"+offset+\" (not an integer)\");","    return unsigned ? value >>> 0 : value | 0;","}","","/**"," * Asserts that a value is an integer or Long."," * @param {number|!Long} value Value to assert"," * @param {boolean=} unsigned Whether explicitly unsigned"," * @returns {number|!Long} Type-safe value"," * @throws {TypeError} If `value` is not an integer or Long"," * @inner"," */","function assertLong(value, unsigned) {","    if (typeof value === 'number') {","        return Long.fromNumber(value, unsigned);","    } else if (typeof value === 'string') {","        return Long.fromString(value, unsigned);","    } else if (value && value instanceof Long) {","        if (typeof unsigned !== 'undefined') {","            if (unsigned && !value.unsigned) return value.toUnsigned();","            if (!unsigned && value.unsigned) return value.toSigned();","        }","        return value;","    } else","        throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");","}","","/**"," * Asserts that `min <= offset <= cap-size` and returns the type-safe offset."," * @param {number} offset Offset to assert"," * @param {number} min Minimum offset"," * @param {number} cap Cap offset"," * @param {number} size Required size in bytes"," * @returns {number} Type-safe offset"," * @throws {TypeError} If `offset` is not an integer"," * @throws {RangeError} If `offset < min || offset > cap-size`"," * @inner"," */","function assertOffset(offset, min, cap, size) {","    if (typeof offset !== 'number' || offset % 1 !== 0)","        throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");","    offset = offset | 0;","    if (offset < min || offset > cap-size)","        throw RangeError(\"Illegal offset: \"+min+\" <= \"+value+\" <= \"+cap+\"-\"+size);","    return offset;","}","","/**"," * assertRange return value."," * @type {Array.<number>}"," */","var rangeVal = new Array(2);","","/**"," * Asserts that `min <= begin <= end <= cap`. Updates `rangeVal` with the type-safe range."," * @param {number} begin Begin offset"," * @param {number} end End offset"," * @param {number} min Minimum offset"," * @param {number} cap Cap offset"," * @throws {TypeError} If `begin` or `end` is not an integer"," * @throws {RangeError} If `begin < min || begin > end || end > cap`"," * @inner"," */","function assertRange(begin, end, min, cap) {","    if (typeof begin !== 'number' || begin % 1 !== 0)","        throw TypeError(\"Illegal begin: \"+begin+\" (not a number)\");","    begin = begin | 0;","    if (typeof end !== 'number' || end % 1 !== 0)","        throw TypeError(\"Illegal end: \"+range[1]+\" (not a number)\");","    end = end | 0;","    if (begin < min || begin > end || end > cap)","        throw RangeError(\"Illegal range: \"+min+\" <= \"+begin+\" <= \"+end+\" <= \"+cap);","    rangeVal[0] = begin; rangeVal[1] = end;","}","//? }","//? if (BASE64 || UTF8) {","","/**"," * String.fromCharCode reference for compile-time renaming."," * @type {function(...number):string}"," * @inner"," */","var stringFromCharCode = String.fromCharCode;","","/**"," * Creates a source function for a string."," * @param {string} s String to read from"," * @returns {function():number|null} Source function returning the next char code respectively `null` if there are"," *  no more characters left."," * @throws {TypeError} If the argument is invalid"," * @inner"," */","function stringSource(s) {","    var i=0; return function() {","        return i < s.length ? s.charCodeAt(i++) : null;","    };","}","","/**"," * Creates a destination function for a string."," * @returns {function(number=):undefined|string} Destination function successively called with the next char code."," *  Returns the final string when called without arguments."," * @inner"," */","function stringDestination() {","    var cs = [], ps = []; return function() {","        if (arguments.length === 0)","            return ps.join('')+stringFromCharCode.apply(String, cs);","        if (cs.length + arguments.length > 1024)","            ps.push(stringFromCharCode.apply(String, cs)),","                cs.length = 0;","        Array.prototype.push.apply(cs, arguments);","    };","}","//? }",""],"l":{"8":1,"15":1,"27":1,"28":0,"29":0,"30":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"51":0,"53":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"80":1,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"111":1,"121":1,"122":0,"123":0,"133":1,"134":0,"135":0,"136":0,"137":0,"138":0,"140":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/macros.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/macros.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":46}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":14},"end":{"line":21,"column":43}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":7},"end":{"line":48,"column":36}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":16},"end":{"line":62,"column":42}}},"5":{"name":"(anonymous_5)","line":79,"loc":{"start":{"line":79,"column":15},"end":{"line":79,"column":42}}},"6":{"name":"(anonymous_6)","line":103,"loc":{"start":{"line":103,"column":18},"end":{"line":103,"column":44}}},"7":{"name":"(anonymous_7)","line":120,"loc":{"start":{"line":120,"column":11},"end":{"line":120,"column":51}}},"8":{"name":"(anonymous_8)","line":135,"loc":{"start":{"line":135,"column":20},"end":{"line":135,"column":72}}},"9":{"name":"(anonymous_9)","line":167,"loc":{"start":{"line":167,"column":21},"end":{"line":167,"column":73}}},"10":{"name":"(anonymous_10)","line":198,"loc":{"start":{"line":198,"column":6},"end":{"line":198,"column":47}}},"11":{"name":"(anonymous_11)","line":211,"loc":{"start":{"line":211,"column":6},"end":{"line":211,"column":37}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":66}},"2":{"start":{"line":8,"column":0},"end":{"line":18,"column":2}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":54}},"4":{"start":{"line":9,"column":20},"end":{"line":9,"column":54}},"5":{"start":{"line":10,"column":4},"end":{"line":16,"column":5}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":88}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":102}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":65}},"9":{"start":{"line":15,"column":8},"end":{"line":15,"column":118}},"10":{"start":{"line":17,"column":4},"end":{"line":17,"column":55}},"11":{"start":{"line":17,"column":20},"end":{"line":17,"column":55}},"12":{"start":{"line":21,"column":0},"end":{"line":45,"column":2}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":60}},"14":{"start":{"line":22,"column":41},"end":{"line":22,"column":60}},"15":{"start":{"line":23,"column":4},"end":{"line":23,"column":51}},"16":{"start":{"line":23,"column":20},"end":{"line":23,"column":51}},"17":{"start":{"line":24,"column":4},"end":{"line":43,"column":5}},"18":{"start":{"line":25,"column":8},"end":{"line":25,"column":62}},"19":{"start":{"line":26,"column":8},"end":{"line":26,"column":72}},"20":{"start":{"line":27,"column":8},"end":{"line":27,"column":67}},"21":{"start":{"line":28,"column":8},"end":{"line":28,"column":72}},"22":{"start":{"line":29,"column":8},"end":{"line":39,"column":9}},"23":{"start":{"line":30,"column":12},"end":{"line":30,"column":81}},"24":{"start":{"line":31,"column":12},"end":{"line":35,"column":13}},"25":{"start":{"line":32,"column":16},"end":{"line":32,"column":104}},"26":{"start":{"line":34,"column":16},"end":{"line":34,"column":101}},"27":{"start":{"line":36,"column":12},"end":{"line":36,"column":31}},"28":{"start":{"line":38,"column":12},"end":{"line":38,"column":84}},"29":{"start":{"line":40,"column":8},"end":{"line":40,"column":110}},"30":{"start":{"line":42,"column":8},"end":{"line":42,"column":115}},"31":{"start":{"line":44,"column":4},"end":{"line":44,"column":52}},"32":{"start":{"line":44,"column":20},"end":{"line":44,"column":52}},"33":{"start":{"line":48,"column":0},"end":{"line":59,"column":2}},"34":{"start":{"line":49,"column":4},"end":{"line":49,"column":60}},"35":{"start":{"line":49,"column":41},"end":{"line":49,"column":60}},"36":{"start":{"line":50,"column":4},"end":{"line":50,"column":108}},"37":{"start":{"line":50,"column":20},"end":{"line":50,"column":108}},"38":{"start":{"line":51,"column":4},"end":{"line":51,"column":58}},"39":{"start":{"line":52,"column":4},"end":{"line":52,"column":121}},"40":{"start":{"line":53,"column":4},"end":{"line":53,"column":63}},"41":{"start":{"line":54,"column":4},"end":{"line":54,"column":121}},"42":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"43":{"start":{"line":56,"column":8},"end":{"line":56,"column":145}},"44":{"start":{"line":58,"column":4},"end":{"line":58,"column":45}},"45":{"start":{"line":58,"column":20},"end":{"line":58,"column":45}},"46":{"start":{"line":62,"column":0},"end":{"line":76,"column":2}},"47":{"start":{"line":63,"column":4},"end":{"line":63,"column":56}},"48":{"start":{"line":63,"column":42},"end":{"line":63,"column":56}},"49":{"start":{"line":64,"column":4},"end":{"line":64,"column":63}},"50":{"start":{"line":64,"column":42},"end":{"line":64,"column":63}},"51":{"start":{"line":65,"column":4},"end":{"line":65,"column":53}},"52":{"start":{"line":65,"column":20},"end":{"line":65,"column":53}},"53":{"start":{"line":66,"column":4},"end":{"line":74,"column":5}},"54":{"start":{"line":67,"column":8},"end":{"line":67,"column":90}},"55":{"start":{"line":68,"column":8},"end":{"line":68,"column":104}},"56":{"start":{"line":69,"column":8},"end":{"line":69,"column":41}},"57":{"start":{"line":70,"column":8},"end":{"line":70,"column":88}},"58":{"start":{"line":71,"column":8},"end":{"line":71,"column":126}},"59":{"start":{"line":73,"column":8},"end":{"line":73,"column":91}},"60":{"start":{"line":75,"column":4},"end":{"line":75,"column":54}},"61":{"start":{"line":75,"column":20},"end":{"line":75,"column":54}},"62":{"start":{"line":79,"column":0},"end":{"line":97,"column":2}},"63":{"start":{"line":80,"column":4},"end":{"line":80,"column":60}},"64":{"start":{"line":80,"column":41},"end":{"line":80,"column":60}},"65":{"start":{"line":81,"column":4},"end":{"line":81,"column":58}},"66":{"start":{"line":81,"column":41},"end":{"line":81,"column":58}},"67":{"start":{"line":82,"column":4},"end":{"line":82,"column":52}},"68":{"start":{"line":82,"column":20},"end":{"line":82,"column":52}},"69":{"start":{"line":83,"column":4},"end":{"line":95,"column":5}},"70":{"start":{"line":84,"column":8},"end":{"line":84,"column":88}},"71":{"start":{"line":85,"column":8},"end":{"line":85,"column":83}},"72":{"start":{"line":86,"column":8},"end":{"line":86,"column":40}},"73":{"start":{"line":87,"column":8},"end":{"line":87,"column":84}},"74":{"start":{"line":88,"column":8},"end":{"line":88,"column":81}},"75":{"start":{"line":89,"column":8},"end":{"line":89,"column":38}},"76":{"start":{"line":90,"column":8},"end":{"line":90,"column":102}},"77":{"start":{"line":91,"column":8},"end":{"line":91,"column":119}},"78":{"start":{"line":93,"column":8},"end":{"line":93,"column":78}},"79":{"start":{"line":94,"column":8},"end":{"line":94,"column":73}},"80":{"start":{"line":96,"column":4},"end":{"line":96,"column":53}},"81":{"start":{"line":96,"column":20},"end":{"line":96,"column":53}},"82":{"start":{"line":100,"column":0},"end":{"line":100,"column":12}},"83":{"start":{"line":103,"column":0},"end":{"line":117,"column":2}},"84":{"start":{"line":104,"column":4},"end":{"line":104,"column":63}},"85":{"start":{"line":104,"column":42},"end":{"line":104,"column":63}},"86":{"start":{"line":105,"column":4},"end":{"line":105,"column":69}},"87":{"start":{"line":105,"column":20},"end":{"line":105,"column":69}},"88":{"start":{"line":106,"column":4},"end":{"line":114,"column":5}},"89":{"start":{"line":107,"column":8},"end":{"line":107,"column":46}},"90":{"start":{"line":108,"column":8},"end":{"line":108,"column":58}},"91":{"start":{"line":109,"column":8},"end":{"line":109,"column":59}},"92":{"start":{"line":110,"column":8},"end":{"line":110,"column":113}},"93":{"start":{"line":111,"column":8},"end":{"line":111,"column":46}},"94":{"start":{"line":113,"column":8},"end":{"line":113,"column":67}},"95":{"start":{"line":115,"column":4},"end":{"line":115,"column":56}},"96":{"start":{"line":115,"column":20},"end":{"line":115,"column":56}},"97":{"start":{"line":116,"column":4},"end":{"line":116,"column":10}},"98":{"start":{"line":120,"column":0},"end":{"line":132,"column":2}},"99":{"start":{"line":121,"column":4},"end":{"line":121,"column":102}},"100":{"start":{"line":121,"column":20},"end":{"line":121,"column":102}},"101":{"start":{"line":122,"column":4},"end":{"line":130,"column":5}},"102":{"start":{"line":123,"column":8},"end":{"line":123,"column":67}},"103":{"start":{"line":123,"column":46},"end":{"line":123,"column":67}},"104":{"start":{"line":124,"column":8},"end":{"line":124,"column":78}},"105":{"start":{"line":124,"column":49},"end":{"line":124,"column":78}},"106":{"start":{"line":125,"column":8},"end":{"line":125,"column":77}},"107":{"start":{"line":126,"column":8},"end":{"line":126,"column":70}},"108":{"start":{"line":128,"column":8},"end":{"line":128,"column":72}},"109":{"start":{"line":128,"column":46},"end":{"line":128,"column":72}},"110":{"start":{"line":129,"column":8},"end":{"line":129,"column":61}},"111":{"start":{"line":131,"column":4},"end":{"line":131,"column":49}},"112":{"start":{"line":131,"column":20},"end":{"line":131,"column":49}},"113":{"start":{"line":135,"column":0},"end":{"line":164,"column":2}},"114":{"start":{"line":136,"column":4},"end":{"line":136,"column":61}},"115":{"start":{"line":136,"column":42},"end":{"line":136,"column":61}},"116":{"start":{"line":137,"column":4},"end":{"line":137,"column":63}},"117":{"start":{"line":137,"column":42},"end":{"line":137,"column":63}},"118":{"start":{"line":138,"column":4},"end":{"line":138,"column":89}},"119":{"start":{"line":138,"column":42},"end":{"line":138,"column":89}},"120":{"start":{"line":139,"column":4},"end":{"line":139,"column":60}},"121":{"start":{"line":140,"column":4},"end":{"line":140,"column":111}},"122":{"start":{"line":140,"column":20},"end":{"line":140,"column":111}},"123":{"start":{"line":141,"column":4},"end":{"line":162,"column":5}},"124":{"start":{"line":142,"column":8},"end":{"line":143,"column":72}},"125":{"start":{"line":143,"column":12},"end":{"line":143,"column":72}},"126":{"start":{"line":144,"column":8},"end":{"line":149,"column":9}},"127":{"start":{"line":145,"column":12},"end":{"line":145,"column":82}},"128":{"start":{"line":146,"column":12},"end":{"line":146,"column":82}},"129":{"start":{"line":147,"column":12},"end":{"line":147,"column":76}},"130":{"start":{"line":148,"column":12},"end":{"line":148,"column":88}},"131":{"start":{"line":150,"column":8},"end":{"line":151,"column":35}},"132":{"start":{"line":151,"column":12},"end":{"line":151,"column":35}},"133":{"start":{"line":152,"column":8},"end":{"line":157,"column":9}},"134":{"start":{"line":153,"column":12},"end":{"line":153,"column":82}},"135":{"start":{"line":154,"column":12},"end":{"line":154,"column":82}},"136":{"start":{"line":155,"column":12},"end":{"line":155,"column":76}},"137":{"start":{"line":156,"column":12},"end":{"line":156,"column":88}},"138":{"start":{"line":158,"column":8},"end":{"line":159,"column":28}},"139":{"start":{"line":159,"column":12},"end":{"line":159,"column":28}},"140":{"start":{"line":161,"column":8},"end":{"line":161,"column":74}},"141":{"start":{"line":163,"column":4},"end":{"line":163,"column":52}},"142":{"start":{"line":163,"column":20},"end":{"line":163,"column":52}},"143":{"start":{"line":167,"column":0},"end":{"line":196,"column":2}},"144":{"start":{"line":168,"column":4},"end":{"line":168,"column":61}},"145":{"start":{"line":168,"column":42},"end":{"line":168,"column":61}},"146":{"start":{"line":169,"column":4},"end":{"line":169,"column":63}},"147":{"start":{"line":169,"column":42},"end":{"line":169,"column":63}},"148":{"start":{"line":170,"column":4},"end":{"line":170,"column":89}},"149":{"start":{"line":170,"column":42},"end":{"line":170,"column":89}},"150":{"start":{"line":171,"column":4},"end":{"line":171,"column":60}},"151":{"start":{"line":172,"column":4},"end":{"line":172,"column":112}},"152":{"start":{"line":172,"column":20},"end":{"line":172,"column":112}},"153":{"start":{"line":173,"column":4},"end":{"line":194,"column":5}},"154":{"start":{"line":174,"column":8},"end":{"line":175,"column":72}},"155":{"start":{"line":175,"column":12},"end":{"line":175,"column":72}},"156":{"start":{"line":176,"column":8},"end":{"line":181,"column":9}},"157":{"start":{"line":177,"column":12},"end":{"line":177,"column":91}},"158":{"start":{"line":178,"column":12},"end":{"line":178,"column":91}},"159":{"start":{"line":179,"column":12},"end":{"line":179,"column":91}},"160":{"start":{"line":180,"column":12},"end":{"line":180,"column":91}},"161":{"start":{"line":182,"column":8},"end":{"line":183,"column":35}},"162":{"start":{"line":183,"column":12},"end":{"line":183,"column":35}},"163":{"start":{"line":184,"column":8},"end":{"line":189,"column":9}},"164":{"start":{"line":185,"column":12},"end":{"line":185,"column":91}},"165":{"start":{"line":186,"column":12},"end":{"line":186,"column":91}},"166":{"start":{"line":187,"column":12},"end":{"line":187,"column":91}},"167":{"start":{"line":188,"column":12},"end":{"line":188,"column":91}},"168":{"start":{"line":190,"column":8},"end":{"line":191,"column":28}},"169":{"start":{"line":191,"column":12},"end":{"line":191,"column":28}},"170":{"start":{"line":193,"column":8},"end":{"line":193,"column":88}},"171":{"start":{"line":195,"column":4},"end":{"line":195,"column":53}},"172":{"start":{"line":195,"column":20},"end":{"line":195,"column":53}},"173":{"start":{"line":198,"column":0},"end":{"line":209,"column":2}},"174":{"start":{"line":199,"column":4},"end":{"line":199,"column":61}},"175":{"start":{"line":199,"column":42},"end":{"line":199,"column":61}},"176":{"start":{"line":200,"column":4},"end":{"line":200,"column":63}},"177":{"start":{"line":200,"column":42},"end":{"line":200,"column":63}},"178":{"start":{"line":201,"column":4},"end":{"line":201,"column":61}},"179":{"start":{"line":201,"column":42},"end":{"line":201,"column":61}},"180":{"start":{"line":202,"column":4},"end":{"line":208,"column":5}},"181":{"start":{"line":203,"column":8},"end":{"line":203,"column":71}},"182":{"start":{"line":204,"column":11},"end":{"line":208,"column":5}},"183":{"start":{"line":205,"column":8},"end":{"line":205,"column":77}},"184":{"start":{"line":207,"column":8},"end":{"line":207,"column":69}},"185":{"start":{"line":211,"column":0},"end":{"line":221,"column":2}},"186":{"start":{"line":212,"column":4},"end":{"line":212,"column":63}},"187":{"start":{"line":212,"column":42},"end":{"line":212,"column":63}},"188":{"start":{"line":213,"column":4},"end":{"line":213,"column":61}},"189":{"start":{"line":213,"column":42},"end":{"line":213,"column":61}},"190":{"start":{"line":214,"column":4},"end":{"line":220,"column":5}},"191":{"start":{"line":215,"column":8},"end":{"line":215,"column":50}},"192":{"start":{"line":216,"column":11},"end":{"line":220,"column":5}},"193":{"start":{"line":217,"column":8},"end":{"line":217,"column":57}},"194":{"start":{"line":219,"column":8},"end":{"line":219,"column":48}}},"branchMap":{"1":{"line":5,"type":"cond-expr","locations":[{"start":{"line":5,"column":18},"end":{"line":5,"column":38}},{"start":{"line":5,"column":41},"end":{"line":5,"column":65}}]},"2":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":9,"column":4}},{"start":{"line":9,"column":4},"end":{"line":9,"column":4}}]},"3":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]},"4":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":44},"end":{"line":13,"column":49}},{"start":{"line":13,"column":52},"end":{"line":13,"column":55}}]},"5":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":92},"end":{"line":15,"column":105}},{"start":{"line":15,"column":108},"end":{"line":15,"column":110}}]},"6":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"7":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"8":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"9":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"10":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":8}},{"start":{"line":29,"column":8},"end":{"line":29,"column":8}}]},"11":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":31,"column":12}},{"start":{"line":31,"column":12},"end":{"line":31,"column":12}}]},"12":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":89},"end":{"line":42,"column":102}},{"start":{"line":42,"column":105},"end":{"line":42,"column":107}}]},"13":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"14":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"15":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"16":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":75},"end":{"line":50,"column":96}},{"start":{"line":50,"column":99},"end":{"line":50,"column":101}}]},"17":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":95},"end":{"line":52,"column":108}},{"start":{"line":52,"column":111},"end":{"line":52,"column":113}}]},"18":{"line":54,"type":"cond-expr","locations":[{"start":{"line":54,"column":95},"end":{"line":54,"column":108}},{"start":{"line":54,"column":111},"end":{"line":54,"column":113}}]},"19":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"20":{"line":56,"type":"cond-expr","locations":[{"start":{"line":56,"column":111},"end":{"line":56,"column":123}},{"start":{"line":56,"column":126},"end":{"line":56,"column":136}}]},"21":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"22":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"23":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"24":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"25":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"26":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"27":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"28":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":81,"column":4}},{"start":{"line":81,"column":4},"end":{"line":81,"column":4}}]},"29":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"30":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"31":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":96,"column":4}},{"start":{"line":96,"column":4},"end":{"line":96,"column":4}}]},"32":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"33":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"34":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"35":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"36":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":4}},{"start":{"line":121,"column":4},"end":{"line":121,"column":4}}]},"37":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":77},"end":{"line":121,"column":90}},{"start":{"line":121,"column":93},"end":{"line":121,"column":95}}]},"38":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"39":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":123,"column":8}},{"start":{"line":123,"column":8},"end":{"line":123,"column":8}}]},"40":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":124,"column":8}},{"start":{"line":124,"column":8},"end":{"line":124,"column":8}}]},"41":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":128,"column":8}},{"start":{"line":128,"column":8},"end":{"line":128,"column":8}}]},"42":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"43":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"44":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]},"45":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"46":{"line":138,"type":"cond-expr","locations":[{"start":{"line":138,"column":61},"end":{"line":138,"column":74}},{"start":{"line":138,"column":77},"end":{"line":138,"column":88}}]},"47":{"line":139,"type":"cond-expr","locations":[{"start":{"line":139,"column":48},"end":{"line":139,"column":54}},{"start":{"line":139,"column":57},"end":{"line":139,"column":59}}]},"48":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":140,"column":4}},{"start":{"line":140,"column":4},"end":{"line":140,"column":4}}]},"49":{"line":140,"type":"cond-expr","locations":[{"start":{"line":140,"column":83},"end":{"line":140,"column":99}},{"start":{"line":140,"column":102},"end":{"line":140,"column":104}}]},"50":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"51":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":8},"end":{"line":141,"column":12}},{"start":{"line":141,"column":16},"end":{"line":141,"column":25}}]},"52":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":8},"end":{"line":142,"column":8}},{"start":{"line":142,"column":8},"end":{"line":142,"column":8}}]},"53":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":31},"end":{"line":143,"column":40}},{"start":{"line":143,"column":44},"end":{"line":143,"column":63}}]},"54":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":8},"end":{"line":144,"column":8}},{"start":{"line":144,"column":8},"end":{"line":144,"column":8}}]},"55":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":12},"end":{"line":144,"column":42}},{"start":{"line":144,"column":46},"end":{"line":144,"column":64}}]},"56":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":8},"end":{"line":150,"column":8}},{"start":{"line":150,"column":8},"end":{"line":150,"column":8}}]},"57":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":152,"column":8}},{"start":{"line":152,"column":8},"end":{"line":152,"column":8}}]},"58":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":12},"end":{"line":152,"column":42}},{"start":{"line":152,"column":46},"end":{"line":152,"column":65}}]},"59":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":8},"end":{"line":158,"column":8}},{"start":{"line":158,"column":8},"end":{"line":158,"column":8}}]},"60":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":4},"end":{"line":163,"column":4}},{"start":{"line":163,"column":4},"end":{"line":163,"column":4}}]},"61":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":168,"column":4}},{"start":{"line":168,"column":4},"end":{"line":168,"column":4}}]},"62":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":4},"end":{"line":169,"column":4}},{"start":{"line":169,"column":4},"end":{"line":169,"column":4}}]},"63":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":4},"end":{"line":170,"column":4}},{"start":{"line":170,"column":4},"end":{"line":170,"column":4}}]},"64":{"line":170,"type":"cond-expr","locations":[{"start":{"line":170,"column":61},"end":{"line":170,"column":74}},{"start":{"line":170,"column":77},"end":{"line":170,"column":88}}]},"65":{"line":171,"type":"cond-expr","locations":[{"start":{"line":171,"column":48},"end":{"line":171,"column":54}},{"start":{"line":171,"column":57},"end":{"line":171,"column":59}}]},"66":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"67":{"line":172,"type":"cond-expr","locations":[{"start":{"line":172,"column":84},"end":{"line":172,"column":100}},{"start":{"line":172,"column":103},"end":{"line":172,"column":105}}]},"68":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"69":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":8},"end":{"line":173,"column":12}},{"start":{"line":173,"column":16},"end":{"line":173,"column":25}}]},"70":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":8},"end":{"line":174,"column":8}},{"start":{"line":174,"column":8},"end":{"line":174,"column":8}}]},"71":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":31},"end":{"line":175,"column":40}},{"start":{"line":175,"column":44},"end":{"line":175,"column":63}}]},"72":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":176,"column":8}},{"start":{"line":176,"column":8},"end":{"line":176,"column":8}}]},"73":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":12},"end":{"line":176,"column":42}},{"start":{"line":176,"column":46},"end":{"line":176,"column":64}}]},"74":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":8},"end":{"line":182,"column":8}},{"start":{"line":182,"column":8},"end":{"line":182,"column":8}}]},"75":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":8},"end":{"line":184,"column":8}},{"start":{"line":184,"column":8},"end":{"line":184,"column":8}}]},"76":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":12},"end":{"line":184,"column":42}},{"start":{"line":184,"column":46},"end":{"line":184,"column":65}}]},"77":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":8},"end":{"line":190,"column":8}},{"start":{"line":190,"column":8},"end":{"line":190,"column":8}}]},"78":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":195,"column":4}},{"start":{"line":195,"column":4},"end":{"line":195,"column":4}}]},"79":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"80":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":4},"end":{"line":200,"column":4}},{"start":{"line":200,"column":4},"end":{"line":200,"column":4}}]},"81":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":4},"end":{"line":201,"column":4}},{"start":{"line":201,"column":4},"end":{"line":201,"column":4}}]},"82":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":4},"end":{"line":202,"column":4}},{"start":{"line":202,"column":4},"end":{"line":202,"column":4}}]},"83":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":11},"end":{"line":204,"column":11}},{"start":{"line":204,"column":11},"end":{"line":204,"column":11}}]},"84":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"85":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":4},"end":{"line":213,"column":4}},{"start":{"line":213,"column":4},"end":{"line":213,"column":4}}]},"86":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":214,"column":4}},{"start":{"line":214,"column":4},"end":{"line":214,"column":4}}]},"87":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":11},"end":{"line":216,"column":11}},{"start":{"line":216,"column":11},"end":{"line":216,"column":11}}]}},"code":["//?...","// Welcome to the crazy world of MetaScript! Tell it what you need, it will not moan, and there it is.","","// Substitute for the backing buffer's capacity","CAPACITY = NODE ? 'this.buffer.length' : 'this.buffer.byteLength';","","// Asserts that a variable is an integer","ASSERT_INTEGER = function(varValue, unsigned) {","    if (VERBOSE_MS) writeln(__+'// <ASSERT_INTEGER>');","    if (INLINE) {","        writeln(__+'if (typeof '+varValue+' !== \\'number\\' || '+varValue+' % 1 !== 0)');","        writeln(__+'    throw TypeError(\"Illegal '+varValue+': \"+'+varValue+'+\" (not an integer)\");');","        writeln(__+varValue+' '+(unsigned ? '>>>' : '|')+'= 0;');","    } else {","        writeln(__+varValue+' = assertInteger('+varValue+(typeof unsigned !== 'undefined' ? ', '+unsigned : '')+');');","    }","    if (VERBOSE_MS) writeln(__+'// </ASSERT_INTEGER>');","};","","// Asserts that a variable is a number or Long","ASSERT_LONG = function(varValue, unsigned) {","    if (typeof varValue === 'undefined') varValue = 'value';","    if (VERBOSE_MS) writeln(__+'// <ASSERT_LONG>');","    if (INLINE) {","        writeln(__+'if (typeof '+varValue+' === \\'number\\')');","        writeln(__+'    '+varValue+' = Long.fromNumber('+varValue+');');","        writeln(__+'else if (typeof '+varValue+' === \\'string\\')');","        writeln(__+'    '+varValue+' = Long.fromString('+varValue+');');","        if (typeof unsigned !== 'undefined') { // When explicitly specified only","            writeln(__+'else if ('+varValue+' && '+varValue+' instanceof Long)');","            if (unsigned) {","                writeln(__+'    if (!'+varValue+'.unsigned) '+varValue+' = '+varValue+'.toUnsigned();');","            } else {","                writeln(__+'    if ('+varValue+'.unsigned) '+varValue+' = '+varValue+'.toSigned();');","            }","            writeln(__+'else');","        } else {","            writeln(__+'else if (!('+varValue+' && '+varValue+' instanceof Long))');","        }","        writeln(__+'    throw TypeError(\"Illegal '+varValue+': \"+'+varValue+'+\" (not an integer or Long)\");');","    } else {","        writeln(__+varValue+' = assertLong('+varValue+(typeof unsigned !== 'undefined' ? ', '+unsigned : '')+');');","    }","    if (VERBOSE_MS) writeln(__+'// </ASSERT_LONG>');","};","","// Casts a variable to a Long if necessary","LONG = function(varValue, unsigned) {","    if (typeof varValue === 'undefined') varValue = 'value';","    if (VERBOSE_MS) writeln(__+'// <LONG'+(typeof unsigned === 'boolean' ? ' unsigned='+unsigned : '')+'>');","    writeln(__+'if (typeof '+varValue+' === \\'number\\')');","    writeln(__+'    '+varValue+' = Long.fromNumber('+varValue+(typeof unsigned === 'boolean' ? ', '+unsigned : '')+');');","    writeln(__+'else if (typeof '+varValue+' === \\'string\\')');","    writeln(__+'    '+varValue+' = Long.fromString('+varValue+(typeof unsigned === 'boolean' ? ', '+unsigned : '')+');');","    if (typeof unsigned === 'boolean') {","        writeln(__+'else if ('+varValue+'.unsigned !== '+unsigned+') '+varValue+' = '+varValue+'.'+(unsigned ? 'toUnsigned' : 'toSigned')+'();');","    }","    if (VERBOSE_MS) writeln(__+'// </LONG>');","};","","// Asserts that an offset is valid","ASSERT_OFFSET = function(size, varOffset) {","    if (typeof size      === 'undefined') size      = 0;","    if (typeof varOffset === 'undefined') varOffset = 'offset';","    if (VERBOSE_MS) writeln(__+'// <ASSERT_OFFSET>');","    if (INLINE) {","        writeln(__+'if (typeof '+varOffset+' !== \\'number\\' || '+varOffset+' % 1 !== 0)');","        writeln(__+'    throw TypeError(\"Illegal '+varOffset+': \"+'+varOffset+'+\" (not an integer)\");');","        writeln(__+varOffset+' >>>= 0;');","        writeln(__+'if ('+varOffset+' < 0 || '+varOffset+' + '+size+' > '+CAPACITY+')');","        writeln(__+'    throw RangeError(\"Illegal '+varOffset+': 0 <= \"+'+varOffset+'+\" (+\"+'+size+'+\") <= \"+'+CAPACITY+');');","    } else {","        writeln(__+varOffset+' = assertOffset('+varOffset+', 0, '+CAPACITY+', '+size+');');","    }","    if (VERBOSE_MS) writeln(__+'// </ASSERT_OFFSET>');","};","","// Asserts that a range is valid","ASSERT_RANGE = function(varBegin, varEnd) {","    if (typeof varBegin === 'undefined') varBegin = 'begin';","    if (typeof varEnd   === 'undefined') varEnd   = 'end';","    if (VERBOSE_MS) writeln(__+'// <ASSERT_RANGE>');","    if (INLINE) {","        writeln(__+'if (typeof '+varBegin+' !== \\'number\\' || '+varBegin+' % 1 !== 0)');","        writeln(__+'    throw TypeError(\"Illegal '+varBegin+': Not an integer\");');","        writeln(__+varBegin+' >>>= 0;');","        writeln(__+'if (typeof '+varEnd+' !== \\'number\\' || '+varEnd+' % 1 !== 0)');","        writeln(__+'    throw TypeError(\"Illegal '+varEnd+': Not an integer\");');","        writeln(__+varEnd+' >>>= 0;');","        writeln(__+'if ('+varBegin+' < 0 || '+varBegin+' > '+varEnd+' || '+varEnd+' > '+CAPACITY+')');","        writeln(__+'    throw RangeError(\"Illegal range: 0 <= \"+'+varBegin+'+\" <= \"+'+varEnd+'+\" <= \"+'+CAPACITY+');');","    } else {","        writeln(__+'assertRange('+varBegin+', '+varEnd+', 0, '+CAPACITY+');');","        writeln(__+varBegin+' = rangeVal[0]; '+varEnd+' = rangeVal[1];');","    }","    if (VERBOSE_MS) writeln(__+'// </ASSERT_RANGE>');","};","","// ENSURE_CAPACITY counter in case that multiple calls are used in a single method","var ECN = 0;","","// Ensures that a ByteBuffer is backed by a buffer that takes `size` additional capacity","ENSURE_CAPACITY = function(size, varOffset) {","    if (typeof varOffset === 'undefined') varOffset = 'offset';","    if (VERBOSE_MS) writeln(__+'// <ENSURE_CAPACITY size='+size+'>');","    if (INLINE) {","        writeln(__+varOffset+' += '+size+';');","        writeln(__+'var capacity'+ECN+' = '+CAPACITY+';');","        writeln(__+'if ('+varOffset+' > capacity'+ECN+')');","        writeln(__+'    this.resize((capacity'+ECN+' *= 2) > '+varOffset+' ? capacity'+ECN+' : '+varOffset+');');","        writeln(__+varOffset+' -= '+size+';');","    } else {","        writeln(__+'this.ensureCapacity('+varOffset+'+'+size+');');","    }","    if (VERBOSE_MS) writeln(__+'// </ENSURE_CAPACITY>');","    ++ECN;","};","","// Sets up a relative operation if `size` is omitted, else increases offset by `size`","RELATIVE = function(size, varOffset, varRelOffset) {","    if (VERBOSE_MS) writeln(__+'// <RELATIVE'+(typeof size !== 'undefined' ? ' size='+size : '')+'>');","    if (typeof size === 'undefined') {","        if (typeof varOffset === 'undefined') varOffset = \"offset\";","        if (typeof varRelOffset === 'undefined') varRelOffset = \"this.offset\";","        writeln(__+'var relative = typeof '+varOffset+' === \\'undefined\\';');","        writeln(__+'if (relative) '+varOffset+' = '+varRelOffset+';');","    } else {","        if (typeof varOffset === 'undefined') varOffset = \"this.offset\";","        writeln(__+'if (relative) this.offset += '+size+';');","    }","    if (VERBOSE_MS) writeln(__+'// </RELATIVE>');","};","","// Reads an uint32 from an array","READ_UINT32_ARRAY = function(varValue, varOffset, varTarget, varEndian) {","    if (typeof varValue  === 'undefined') varValue = 'value';","    if (typeof varOffset === 'undefined') varOffset = 'offset';","    if (typeof varTarget === 'undefined') varTarget = NODE ? 'this.buffer' : 'this.view';","    var ____ = typeof varEndian !== 'boolean' ? '    ' : '';","    if (VERBOSE_MS) writeln(__+'// <READ_UINT32'+(typeof varEndian === 'boolean' ? ' le='+varEndian : '')+'>');","    if (NODE || !DATAVIEW) {","        if (typeof varEndian !== 'boolean')","            writeln(__+'if ('+(varEndian || 'this.littleEndian')+') {');","        if (typeof varEndian !== 'boolean' || varEndian === true) {","            writeln(__+____+varValue+'  = '+varTarget+'['+varOffset+'+2] << 16;');","            writeln(__+____+varValue+' |= '+varTarget+'['+varOffset+'+1] <<  8;');","            writeln(__+____+varValue+' |= '+varTarget+'['+varOffset+'  ];');","            writeln(__+____+varValue+' += '+varTarget+'['+varOffset+'+3] << 24 >>> 0;');","        }","        if (typeof varEndian !== 'boolean')","            writeln(__+'} else {');","        if (typeof varEndian !== 'boolean' || varEndian === false) {","            writeln(__+____+varValue+'  = '+varTarget+'['+varOffset+'+1] << 16;');","            writeln(__+____+varValue+' |= '+varTarget+'['+varOffset+'+2] <<  8;');","            writeln(__+____+varValue+' |= '+varTarget+'['+varOffset+'+3];');","            writeln(__+____+varValue+' += '+varTarget+'['+varOffset+'  ] << 24 >>> 0;');","        }","        if (typeof varEndian !== 'boolean')","            writeln(__+'}');","    } else {","        writeln(__+varTarget+'.getUint32('+varOffset+', '+varEndian+');');","    }","    if (VERBOSE_MS) writeln(__+'// </READ_UINT32>');","};","","// Writes an uint32 to an array","WRITE_UINT32_ARRAY = function(varValue, varOffset, varTarget, varEndian) {","    if (typeof varValue  === 'undefined') varValue = 'value';","    if (typeof varOffset === 'undefined') varOffset = 'offset';","    if (typeof varTarget === 'undefined') varTarget = NODE ? 'this.buffer' : 'this.view';","    var ____ = typeof varEndian !== 'boolean' ? '    ' : '';","    if (VERBOSE_MS) writeln(__+'// <WRITE_UINT32'+(typeof varEndian === 'boolean' ? ' le='+varEndian : '')+'>');","    if (NODE || !DATAVIEW) {","        if (typeof varEndian !== 'boolean')","            writeln(__+'if ('+(varEndian || 'this.littleEndian')+') {');","        if (typeof varEndian !== 'boolean' || varEndian === true) {","            writeln(__+____+varTarget+'['+varOffset+'+3] = ('+varValue+' >>> 24) & 0xFF;');","            writeln(__+____+varTarget+'['+varOffset+'+2] = ('+varValue+' >>> 16) & 0xFF;');","            writeln(__+____+varTarget+'['+varOffset+'+1] = ('+varValue+' >>>  8) & 0xFF;');","            writeln(__+____+varTarget+'['+varOffset+'  ] =  '+varValue+'         & 0xFF;');","        }","        if (typeof varEndian !== 'boolean')","            writeln(__+'} else {');","        if (typeof varEndian !== 'boolean' || varEndian === false) {","            writeln(__+____+varTarget+'['+varOffset+'  ] = ('+varValue+' >>> 24) & 0xFF;');","            writeln(__+____+varTarget+'['+varOffset+'+1] = ('+varValue+' >>> 16) & 0xFF;');","            writeln(__+____+varTarget+'['+varOffset+'+2] = ('+varValue+' >>>  8) & 0xFF;');","            writeln(__+____+varTarget+'['+varOffset+'+3] =  '+varValue+'         & 0xFF;');","        }","        if (typeof varEndian !== 'boolean')","            writeln(__+'}');","    } else {","        writeln(__+varTarget+'.setUint32('+varValue+', '+varOffset+', '+varEndian+');');","    }","    if (VERBOSE_MS) writeln(__+'// </WRITE_UINT32>');","};","","SET = function(varValue, varOffset, varTarget) { // with varTarget referencing a ByteBuffer","    if (typeof varValue  === 'undefined') varValue = 'value';","    if (typeof varOffset === 'undefined') varOffset = 'offset';","    if (typeof varTarget === 'undefined') varTarget = 'this';","    if (NODE) {","        writeln(__+varTarget+'.buffer['+varOffset+'] = '+varValue+';');","    } else if (DATAVIEW) {","        writeln(__+varTarget+'.view.setUint8('+varValue+', '+varOffset+');');","    } else {","        writeln(__+varTarget+'.view['+varOffset+'] = '+varValue+';');","    }","};","","GET = function(varOffset, varTarget) { // with varTarget referencing a ByteBuffer","    if (typeof varOffset === 'undefined') varOffset = 'offset';","    if (typeof varTarget === 'undefined') varTarget = 'this';","    if (NODE) {","        write(varTarget+'.buffer['+varOffset+']');","    } else if (DATAVIEW) {","        write(varTarget+'.view.getUint8('+varOffset+')');","    } else {","        write(varTarget+'.view['+varOffset+']');","    }","};","//?."],"l":{"5":2,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"15":0,"17":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"34":0,"36":0,"38":0,"40":0,"42":0,"44":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"58":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"73":0,"75":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"93":0,"94":0,"96":0,"100":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"113":0,"115":0,"116":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"128":0,"129":0,"131":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"158":0,"159":0,"161":0,"163":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"190":0,"191":0,"193":0,"195":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"207":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"219":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/wrap.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/wrap.js","s":{"1":2,"2":2,"3":0,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":0,"11":2},"b":{"1":[0,2],"2":[2,0],"3":[2,0],"4":[2,2,2,2],"5":[0,0]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":27}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":29},"end":{"line":31,"column":40}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":9},"end":{"line":38,"column":24}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":43,"column":3}},"2":{"start":{"line":28,"column":14},"end":{"line":36,"column":105}},"3":{"start":{"line":29,"column":8},"end":{"line":29,"column":34}},"4":{"start":{"line":30,"column":24},"end":{"line":36,"column":105}},"5":{"start":{"line":31,"column":8},"end":{"line":34,"column":13}},"6":{"start":{"line":32,"column":12},"end":{"line":32,"column":21}},"7":{"start":{"line":32,"column":22},"end":{"line":32,"column":66}},"8":{"start":{"line":32,"column":28},"end":{"line":32,"column":51}},"9":{"start":{"line":33,"column":12},"end":{"line":33,"column":33}},"10":{"start":{"line":36,"column":8},"end":{"line":36,"column":105}},"11":{"start":{"line":42,"column":4},"end":{"line":42,"column":22}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":14},"end":{"line":28,"column":14}},{"start":{"line":28,"column":14},"end":{"line":28,"column":14}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":18},"end":{"line":28,"column":46}},{"start":{"line":28,"column":50},"end":{"line":28,"column":63}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":24},"end":{"line":30,"column":24}},{"start":{"line":30,"column":24},"end":{"line":30,"column":24}}]},"4":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":28},"end":{"line":30,"column":57}},{"start":{"line":30,"column":61},"end":{"line":30,"column":87}},{"start":{"line":30,"column":91},"end":{"line":30,"column":97}},{"start":{"line":30,"column":101},"end":{"line":30,"column":118}}]},"5":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":29},"end":{"line":36,"column":46}},{"start":{"line":36,"column":50},"end":{"line":36,"column":52}}]}},"code":["/*"," Copyright 2013-2014 Daniel Wirtz <dcode@dcode.io>",""," Licensed under the Apache License, Version 2.0 (the \"License\");"," you may not use this file except in compliance with the License."," You may obtain a copy of the License at",""," http://www.apache.org/licenses/LICENSE-2.0",""," Unless required by applicable law or agreed to in writing, software"," distributed under the License is distributed on an \"AS IS\" BASIS,"," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."," See the License for the specific language governing permissions and"," limitations under the License."," */","","/**"," * @license bytebuffer.js (c) 2015 Daniel Wirtz <dcode@dcode.io>","//? if (DATAVIEW)"," * Backing buffer: ArrayBuffer, Accessor: DataView","//? else"," * Backing buffer: ArrayBuffer, Accessor: Uint8Array"," * Released under the Apache License, Version 2.0"," * see: https://github.com/dcodeIO/bytebuffer.js for details"," */","(function(global, factory) {","","    /* AMD */ if (typeof define === 'function' && define[\"amd\"])","        define([\"long\"], factory);","    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])","        module['exports'] = (function() {","            var Long; try { Long = require(\"long\"); } catch (e) {}","            return factory(Long);","        })();","    /* Global */ else","        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"ByteBuffer\"] = factory(global[\"dcodeIO\"][\"Long\"]);","","})(this, function(Long) {","    \"use strict\";","","    //? include(\"bytebuffer.js\");","    return ByteBuffer;","});",""],"l":{"26":2,"28":2,"29":0,"30":2,"31":2,"32":2,"33":2,"36":0,"42":2}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/wrap-node.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/wrap-node.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":0},"b":{},"f":{"1":2},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":18},"end":{"line":24,"column":29}}}},"statementMap":{"1":{"start":{"line":24,"column":0},"end":{"line":50,"column":5}},"2":{"start":{"line":27,"column":4},"end":{"line":30,"column":22}},"3":{"start":{"line":30,"column":23},"end":{"line":30,"column":71}},"4":{"start":{"line":30,"column":29},"end":{"line":30,"column":56}},"5":{"start":{"line":46,"column":4},"end":{"line":46,"column":31}},"6":{"start":{"line":48,"column":4},"end":{"line":48,"column":22}}},"branchMap":{},"code":["/*"," Copyright 2013-2014 Daniel Wirtz <dcode@dcode.io>",""," Licensed under the Apache License, Version 2.0 (the \"License\");"," you may not use this file except in compliance with the License."," You may obtain a copy of the License at",""," http://www.apache.org/licenses/LICENSE-2.0",""," Unless required by applicable law or agreed to in writing, software"," distributed under the License is distributed on an \"AS IS\" BASIS,"," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."," See the License for the specific language governing permissions and"," limitations under the License."," */","//? NODE = true;","","/**"," * @license bytebuffer.js (c) 2015 Daniel Wirtz <dcode@dcode.io>"," * Backing buffer / Accessor: node Buffer"," * Released under the Apache License, Version 2.0"," * see: https://github.com/dcodeIO/bytebuffer.js for details"," */","module.exports = (function() {","    \"use strict\";","    ","    var buffer = require(\"buffer\"),","        Buffer = buffer[\"Buffer\"],","        Long = require(\"long\"),","        memcpy = null; try { memcpy = require(\"memcpy\"); } catch (e) {}","","    //? include(\"ByteBuffer.js\");","","    /**","     * node-memcpy. This is an optional binding dependency and may not be present.","     * @function","     * @param {!(Buffer|ArrayBuffer|Uint8Array)} target Destination","     * @param {number|!(Buffer|ArrayBuffer)} targetStart Destination start, defaults to 0.","     * @param {(!(Buffer|ArrayBuffer|Uint8Array)|number)=} source Source","     * @param {number=} sourceStart Source start, defaults to 0.","     * @param {number=} sourceEnd Source end, defaults to capacity.","     * @returns {number} Number of bytes copied","     * @throws {Error} If any index is out of bounds","     * @expose","     */","    ByteBuffer.memcpy = memcpy;","","    return ByteBuffer;","","})();",""],"l":{"24":2,"27":2,"30":2,"46":2,"48":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/encodings/base64.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/encodings/base64.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":31},"end":{"line":18,"column":52}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":24},"end":{"line":29,"column":35}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":24},"end":{"line":47,"column":52}}},"4":{"name":"(anonymous_4)","line":55,"loc":{"start":{"line":55,"column":35},"end":{"line":55,"column":47}}},"5":{"name":"(anonymous_5)","line":73,"loc":{"start":{"line":73,"column":18},"end":{"line":73,"column":32}}},"6":{"name":"(anonymous_6)","line":84,"loc":{"start":{"line":84,"column":18},"end":{"line":84,"column":32}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":37,"column":2}},"2":{"start":{"line":19,"column":4},"end":{"line":20,"column":28}},"3":{"start":{"line":20,"column":8},"end":{"line":20,"column":28}},"4":{"start":{"line":21,"column":4},"end":{"line":22,"column":25}},"5":{"start":{"line":22,"column":8},"end":{"line":22,"column":25}},"6":{"start":{"line":23,"column":4},"end":{"line":23,"column":22}},"7":{"start":{"line":23,"column":23},"end":{"line":23,"column":37}},"8":{"start":{"line":24,"column":4},"end":{"line":25,"column":39}},"9":{"start":{"line":25,"column":8},"end":{"line":25,"column":39}},"10":{"start":{"line":27,"column":4},"end":{"line":27,"column":54}},"11":{"start":{"line":29,"column":4},"end":{"line":29,"column":11}},"12":{"start":{"line":29,"column":12},"end":{"line":34,"column":44}},"13":{"start":{"line":31,"column":8},"end":{"line":31,"column":64}},"14":{"start":{"line":33,"column":8},"end":{"line":33,"column":55}},"15":{"start":{"line":35,"column":4},"end":{"line":35,"column":16}},"16":{"start":{"line":47,"column":0},"end":{"line":64,"column":2}},"17":{"start":{"line":49,"column":4},"end":{"line":49,"column":68}},"18":{"start":{"line":51,"column":4},"end":{"line":52,"column":31}},"19":{"start":{"line":52,"column":8},"end":{"line":52,"column":31}},"20":{"start":{"line":53,"column":4},"end":{"line":54,"column":14}},"21":{"start":{"line":55,"column":4},"end":{"line":60,"column":7}},"22":{"start":{"line":57,"column":8},"end":{"line":57,"column":33}},"23":{"start":{"line":59,"column":8},"end":{"line":59,"column":25}},"24":{"start":{"line":61,"column":4},"end":{"line":61,"column":17}},"25":{"start":{"line":63,"column":4},"end":{"line":63,"column":14}},"26":{"start":{"line":73,"column":0},"end":{"line":75,"column":2}},"27":{"start":{"line":74,"column":4},"end":{"line":74,"column":49}},"28":{"start":{"line":84,"column":0},"end":{"line":86,"column":2}},"29":{"start":{"line":85,"column":4},"end":{"line":85,"column":49}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"4":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":17}},{"start":{"line":24,"column":21},"end":{"line":24,"column":40}},{"start":{"line":24,"column":44},"end":{"line":24,"column":55}}]},"5":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":29},"end":{"line":31,"column":56}},{"start":{"line":31,"column":59},"end":{"line":31,"column":63}}]},"6":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":29},"end":{"line":33,"column":47}},{"start":{"line":33,"column":50},"end":{"line":33,"column":54}}]},"7":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]}},"code":["//? if (BASE64) {","//? if (!NODE) {","// lxiv-embeddable","","//? include(\"../../node_modules/lxiv/dist/lxiv-embeddable.js\");","","//? }","// encodings/base64","","/**"," * Encodes this ByteBuffer's contents to a base64 encoded string."," * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}."," * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}."," * @returns {string} Base64 encoded string"," * @throws {RangeError} If `begin` or `end` is out of bounds"," * @expose"," */","ByteBufferPrototype.toBase64 = function(begin, end) {","    if (typeof begin === 'undefined')","        begin = this.offset;","    if (typeof end === 'undefined')","        end = this.limit;","    begin = begin | 0; end = end | 0;","    if (begin < 0 || end > this.capacity || begin > end)","        throw RangeError(\"begin, end\");","    //? if (NODE)","    return this.buffer.toString(\"base64\", begin, end);","    //? else {","    var sd; lxiv.encode(function() {","        //? if (DATAVIEW)","        return begin < end ? this.view.getUint8(begin++) : null;","        //? else","        return begin < end ? this.view[begin++] : null;","    }.bind(this), sd = stringDestination());","    return sd();","    //? }","};","","/**"," * Decodes a base64 encoded string to a ByteBuffer."," * @param {string} str String to decode"," * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to"," *  {@link ByteBuffer.DEFAULT_ENDIAN}."," * @returns {!ByteBuffer} ByteBuffer"," * @expose"," */","ByteBuffer.fromBase64 = function(str, littleEndian) {","    //? if (NODE) {","    return ByteBuffer.wrap(new Buffer(str, \"base64\"), littleEndian);","    //? } else {","    if (typeof str !== 'string')","        throw TypeError(\"str\");","    var bb = new ByteBuffer(str.length/4*3, littleEndian),","        i = 0;","    lxiv.decode(stringSource(str), function(b) {","        //? if (DATAVIEW)","        bb.view.setUint8(i++, b);","        //? else","        bb.view[i++] = b;","    });","    bb.limit = i;","    //? }","    return bb;","};","","/**"," * Encodes a binary string to base64 like `window.btoa` does."," * @param {string} str Binary string"," * @returns {string} Base64 encoded string"," * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.btoa"," * @expose"," */","ByteBuffer.btoa = function(str) {","    return ByteBuffer.fromBinary(str).toBase64();","};","","/**"," * Decodes a base64 encoded string to binary like `window.atob` does."," * @param {string} b64 Base64 encoded string"," * @returns {string} Binary string"," * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.atob"," * @expose"," */","ByteBuffer.atob = function(b64) {","    return ByteBuffer.fromBase64(b64).toBinary();","};","","//? }"],"l":{"18":2,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"27":0,"29":0,"31":0,"33":0,"35":0,"47":0,"49":0,"51":0,"52":0,"53":0,"55":0,"57":0,"59":0,"61":0,"63":0,"73":0,"74":0,"84":0,"85":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/encodings/binary.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/encodings/binary.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":31},"end":{"line":12,"column":52}}},"2":{"name":"(anonymous_2)","line":50,"loc":{"start":{"line":50,"column":24},"end":{"line":50,"column":52}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":40,"column":2}},"2":{"start":{"line":13,"column":4},"end":{"line":14,"column":28}},"3":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}},"4":{"start":{"line":15,"column":4},"end":{"line":16,"column":25}},"5":{"start":{"line":16,"column":8},"end":{"line":16,"column":25}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":15}},"7":{"start":{"line":17,"column":16},"end":{"line":17,"column":25}},"8":{"start":{"line":18,"column":4},"end":{"line":19,"column":39}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":39}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":54}},"11":{"start":{"line":23,"column":4},"end":{"line":24,"column":18}},"12":{"start":{"line":24,"column":8},"end":{"line":24,"column":18}},"13":{"start":{"line":25,"column":4},"end":{"line":26,"column":19}},"14":{"start":{"line":27,"column":4},"end":{"line":37,"column":5}},"15":{"start":{"line":29,"column":8},"end":{"line":29,"column":41}},"16":{"start":{"line":31,"column":8},"end":{"line":31,"column":48}},"17":{"start":{"line":33,"column":8},"end":{"line":33,"column":39}},"18":{"start":{"line":34,"column":8},"end":{"line":36,"column":23}},"19":{"start":{"line":35,"column":12},"end":{"line":36,"column":23}},"20":{"start":{"line":38,"column":4},"end":{"line":38,"column":69}},"21":{"start":{"line":50,"column":0},"end":{"line":72,"column":2}},"22":{"start":{"line":52,"column":4},"end":{"line":52,"column":68}},"23":{"start":{"line":54,"column":4},"end":{"line":55,"column":31}},"24":{"start":{"line":55,"column":8},"end":{"line":55,"column":31}},"25":{"start":{"line":56,"column":4},"end":{"line":59,"column":45}},"26":{"start":{"line":60,"column":4},"end":{"line":68,"column":5}},"27":{"start":{"line":61,"column":8},"end":{"line":61,"column":37}},"28":{"start":{"line":62,"column":8},"end":{"line":63,"column":61}},"29":{"start":{"line":63,"column":12},"end":{"line":63,"column":61}},"30":{"start":{"line":65,"column":8},"end":{"line":65,"column":40}},"31":{"start":{"line":67,"column":8},"end":{"line":67,"column":32}},"32":{"start":{"line":69,"column":4},"end":{"line":69,"column":17}},"33":{"start":{"line":71,"column":4},"end":{"line":71,"column":14}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"3":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"4":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":8},"end":{"line":18,"column":17}},{"start":{"line":18,"column":21},"end":{"line":18,"column":42}},{"start":{"line":18,"column":46},"end":{"line":18,"column":57}}]},"5":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"6":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":8}},{"start":{"line":34,"column":8},"end":{"line":34,"column":8}}]},"7":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"8":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":62,"column":8}},{"start":{"line":62,"column":8},"end":{"line":62,"column":8}}]}},"code":["//? if (BINARY) {","// encodings/binary","","/**"," * Encodes this ByteBuffer to a binary encoded string, that is using only characters 0x00-0xFF as bytes."," * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}."," * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}."," * @returns {string} Binary encoded string"," * @throws {RangeError} If `offset > limit`"," * @expose"," */","ByteBufferPrototype.toBinary = function(begin, end) {","    if (typeof begin === 'undefined')","        begin = this.offset;","    if (typeof end === 'undefined')","        end = this.limit;","    begin |= 0; end |= 0;","    if (begin < 0 || end > this.capacity() || begin > end)","        throw RangeError(\"begin, end\");","    //? if (NODE)","    return this.buffer.toString(\"binary\", begin, end);","    //? else {","    if (begin === end)","        return \"\";","    var chars = [],","        parts = [];","    while (begin < end) {","        //? if (NODE)","        chars.push(this.buffer[begin++]);","        //? else if (DATAVIEW)","        chars.push(this.view.getUint8(begin++));","        //? else","        chars.push(this.view[begin++]);","        if (chars.length >= 1024)","            parts.push(String.fromCharCode.apply(String, chars)),","            chars = [];","    }","    return parts.join('') + String.fromCharCode.apply(String, chars);","    //? }","};","","/**"," * Decodes a binary encoded string, that is using only characters 0x00-0xFF as bytes, to a ByteBuffer."," * @param {string} str String to decode"," * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to"," *  {@link ByteBuffer.DEFAULT_ENDIAN}."," * @returns {!ByteBuffer} ByteBuffer"," * @expose"," */","ByteBuffer.fromBinary = function(str, littleEndian) {","    //? if (NODE) {","    return ByteBuffer.wrap(new Buffer(str, \"binary\"), littleEndian);","    //? } else {","    if (typeof str !== 'string')","        throw TypeError(\"str\");","    var i = 0,","        k = str.length,","        charCode,","        bb = new ByteBuffer(k, littleEndian);","    while (i<k) {","        charCode = str.charCodeAt(i);","        if (charCode > 0xff)","            throw RangeError(\"illegal char code: \"+charCode);","        //? if (DATAVIEW)","        bb.view.setUint8(i++, charCode);","        //? else","        bb.view[i++] = charCode;","    }","    bb.limit = k;","    //? }","    return bb;","};","","//? }"],"l":{"12":2,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"21":0,"23":0,"24":0,"25":0,"27":0,"29":0,"31":0,"33":0,"34":0,"35":0,"38":0,"50":0,"52":0,"54":0,"55":0,"56":0,"60":0,"61":0,"62":0,"63":0,"65":0,"67":0,"69":0,"71":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/encodings/debug.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/encodings/debug.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0,0,0,0,0,0,0],"23":[0,0],"24":[0,0],"25":[0,0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":30},"end":{"line":21,"column":48}}},"2":{"name":"(anonymous_2)","line":80,"loc":{"start":{"line":80,"column":23},"end":{"line":80,"column":61}}}},"statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":67,"column":2}},"2":{"start":{"line":22,"column":4},"end":{"line":30,"column":17}},"3":{"start":{"line":31,"column":4},"end":{"line":60,"column":5}},"4":{"start":{"line":32,"column":8},"end":{"line":43,"column":9}},"5":{"start":{"line":34,"column":12},"end":{"line":34,"column":31}},"6":{"start":{"line":36,"column":12},"end":{"line":36,"column":38}},"7":{"start":{"line":38,"column":12},"end":{"line":38,"column":29}},"8":{"start":{"line":39,"column":12},"end":{"line":40,"column":53}},"9":{"start":{"line":39,"column":26},"end":{"line":39,"column":66}},"10":{"start":{"line":40,"column":17},"end":{"line":40,"column":53}},"11":{"start":{"line":41,"column":12},"end":{"line":42,"column":72}},"12":{"start":{"line":42,"column":16},"end":{"line":42,"column":72}},"13":{"start":{"line":44,"column":8},"end":{"line":44,"column":12}},"14":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"15":{"start":{"line":46,"column":12},"end":{"line":50,"column":13}},"16":{"start":{"line":47,"column":16},"end":{"line":47,"column":55}},"17":{"start":{"line":47,"column":44},"end":{"line":47,"column":55}},"18":{"start":{"line":48,"column":16},"end":{"line":48,"column":36}},"19":{"start":{"line":49,"column":16},"end":{"line":49,"column":31}},"20":{"start":{"line":52,"column":8},"end":{"line":59,"column":96}},"21":{"start":{"line":53,"column":12},"end":{"line":53,"column":55}},"22":{"start":{"line":54,"column":13},"end":{"line":59,"column":96}},"23":{"start":{"line":55,"column":12},"end":{"line":55,"column":55}},"24":{"start":{"line":56,"column":13},"end":{"line":59,"column":96}},"25":{"start":{"line":57,"column":12},"end":{"line":57,"column":55}},"26":{"start":{"line":59,"column":12},"end":{"line":59,"column":96}},"27":{"start":{"line":61,"column":4},"end":{"line":65,"column":5}},"28":{"start":{"line":62,"column":8},"end":{"line":63,"column":23}},"29":{"start":{"line":63,"column":12},"end":{"line":63,"column":23}},"30":{"start":{"line":64,"column":8},"end":{"line":64,"column":32}},"31":{"start":{"line":66,"column":4},"end":{"line":66,"column":31}},"32":{"start":{"line":80,"column":0},"end":{"line":209,"column":2}},"33":{"start":{"line":88,"column":4},"end":{"line":89,"column":65}},"34":{"start":{"line":90,"column":4},"end":{"line":93,"column":21}},"35":{"start":{"line":94,"column":4},"end":{"line":198,"column":5}},"36":{"start":{"line":95,"column":8},"end":{"line":195,"column":9}},"37":{"start":{"line":97,"column":16},"end":{"line":103,"column":17}},"38":{"start":{"line":98,"column":20},"end":{"line":101,"column":21}},"39":{"start":{"line":99,"column":24},"end":{"line":99,"column":36}},"40":{"start":{"line":100,"column":24},"end":{"line":100,"column":30}},"41":{"start":{"line":102,"column":20},"end":{"line":102,"column":40}},"42":{"start":{"line":104,"column":16},"end":{"line":104,"column":59}},"43":{"start":{"line":105,"column":16},"end":{"line":105,"column":27}},"44":{"start":{"line":106,"column":16},"end":{"line":106,"column":22}},"45":{"start":{"line":108,"column":16},"end":{"line":114,"column":17}},"46":{"start":{"line":109,"column":20},"end":{"line":112,"column":21}},"47":{"start":{"line":110,"column":24},"end":{"line":110,"column":36}},"48":{"start":{"line":111,"column":24},"end":{"line":111,"column":30}},"49":{"start":{"line":113,"column":20},"end":{"line":113,"column":35}},"50":{"start":{"line":115,"column":16},"end":{"line":115,"column":41}},"51":{"start":{"line":116,"column":16},"end":{"line":116,"column":27}},"52":{"start":{"line":117,"column":16},"end":{"line":117,"column":22}},"53":{"start":{"line":119,"column":16},"end":{"line":125,"column":17}},"54":{"start":{"line":120,"column":20},"end":{"line":123,"column":21}},"55":{"start":{"line":121,"column":24},"end":{"line":121,"column":36}},"56":{"start":{"line":122,"column":24},"end":{"line":122,"column":30}},"57":{"start":{"line":124,"column":20},"end":{"line":124,"column":35}},"58":{"start":{"line":126,"column":16},"end":{"line":126,"column":48}},"59":{"start":{"line":127,"column":16},"end":{"line":127,"column":27}},"60":{"start":{"line":128,"column":16},"end":{"line":128,"column":22}},"61":{"start":{"line":130,"column":16},"end":{"line":136,"column":17}},"62":{"start":{"line":131,"column":20},"end":{"line":134,"column":21}},"63":{"start":{"line":132,"column":24},"end":{"line":132,"column":36}},"64":{"start":{"line":133,"column":24},"end":{"line":133,"column":30}},"65":{"start":{"line":135,"column":20},"end":{"line":135,"column":30}},"66":{"start":{"line":137,"column":16},"end":{"line":137,"column":30}},"67":{"start":{"line":138,"column":16},"end":{"line":138,"column":27}},"68":{"start":{"line":139,"column":16},"end":{"line":139,"column":22}},"69":{"start":{"line":141,"column":16},"end":{"line":147,"column":17}},"70":{"start":{"line":142,"column":20},"end":{"line":145,"column":21}},"71":{"start":{"line":143,"column":24},"end":{"line":143,"column":36}},"72":{"start":{"line":144,"column":24},"end":{"line":144,"column":30}},"73":{"start":{"line":146,"column":20},"end":{"line":146,"column":35}},"74":{"start":{"line":148,"column":16},"end":{"line":148,"column":47}},"75":{"start":{"line":149,"column":16},"end":{"line":149,"column":27}},"76":{"start":{"line":150,"column":16},"end":{"line":150,"column":22}},"77":{"start":{"line":152,"column":16},"end":{"line":158,"column":17}},"78":{"start":{"line":153,"column":20},"end":{"line":156,"column":21}},"79":{"start":{"line":154,"column":24},"end":{"line":154,"column":36}},"80":{"start":{"line":155,"column":24},"end":{"line":155,"column":30}},"81":{"start":{"line":157,"column":20},"end":{"line":157,"column":30}},"82":{"start":{"line":159,"column":16},"end":{"line":159,"column":29}},"83":{"start":{"line":160,"column":16},"end":{"line":160,"column":27}},"84":{"start":{"line":161,"column":16},"end":{"line":161,"column":22}},"85":{"start":{"line":163,"column":16},"end":{"line":169,"column":17}},"86":{"start":{"line":164,"column":20},"end":{"line":167,"column":21}},"87":{"start":{"line":165,"column":24},"end":{"line":165,"column":36}},"88":{"start":{"line":166,"column":24},"end":{"line":166,"column":30}},"89":{"start":{"line":168,"column":20},"end":{"line":168,"column":30}},"90":{"start":{"line":170,"column":16},"end":{"line":170,"column":36}},"91":{"start":{"line":171,"column":16},"end":{"line":171,"column":27}},"92":{"start":{"line":172,"column":16},"end":{"line":172,"column":22}},"93":{"start":{"line":174,"column":16},"end":{"line":174,"column":27}},"94":{"start":{"line":175,"column":16},"end":{"line":175,"column":22}},"95":{"start":{"line":177,"column":16},"end":{"line":182,"column":17}},"96":{"start":{"line":178,"column":20},"end":{"line":181,"column":21}},"97":{"start":{"line":179,"column":24},"end":{"line":179,"column":36}},"98":{"start":{"line":180,"column":24},"end":{"line":180,"column":30}},"99":{"start":{"line":183,"column":16},"end":{"line":183,"column":53}},"100":{"start":{"line":184,"column":16},"end":{"line":187,"column":17}},"101":{"start":{"line":185,"column":20},"end":{"line":186,"column":83}},"102":{"start":{"line":186,"column":24},"end":{"line":186,"column":83}},"103":{"start":{"line":189,"column":16},"end":{"line":189,"column":35}},"104":{"start":{"line":191,"column":16},"end":{"line":191,"column":41}},"105":{"start":{"line":193,"column":16},"end":{"line":193,"column":33}},"106":{"start":{"line":194,"column":16},"end":{"line":194,"column":26}},"107":{"start":{"line":196,"column":8},"end":{"line":197,"column":65}},"108":{"start":{"line":197,"column":12},"end":{"line":197,"column":65}},"109":{"start":{"line":199,"column":4},"end":{"line":207,"column":5}},"110":{"start":{"line":200,"column":8},"end":{"line":201,"column":68}},"111":{"start":{"line":201,"column":12},"end":{"line":201,"column":68}},"112":{"start":{"line":203,"column":8},"end":{"line":206,"column":95}},"113":{"start":{"line":205,"column":8},"end":{"line":206,"column":95}},"114":{"start":{"line":206,"column":12},"end":{"line":206,"column":95}},"115":{"start":{"line":208,"column":4},"end":{"line":208,"column":14}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":8}},{"start":{"line":32,"column":8},"end":{"line":32,"column":8}}]},"2":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":12}},{"start":{"line":39,"column":12},"end":{"line":39,"column":12}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":12}},{"start":{"line":41,"column":12},"end":{"line":41,"column":12}}]},"4":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":43},"end":{"line":42,"column":65}},{"start":{"line":42,"column":68},"end":{"line":42,"column":71}}]},"5":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":23},"end":{"line":42,"column":29}},{"start":{"line":42,"column":33},"end":{"line":42,"column":40}}]},"6":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"7":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":12}},{"start":{"line":46,"column":12},"end":{"line":46,"column":12}}]},"8":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":16},"end":{"line":46,"column":21}},{"start":{"line":46,"column":25},"end":{"line":46,"column":37}},{"start":{"line":46,"column":41},"end":{"line":46,"column":48}}]},"9":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"10":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":29}},{"start":{"line":52,"column":33},"end":{"line":52,"column":49}}]},"11":{"line":53,"type":"cond-expr","locations":[{"start":{"line":53,"column":45},"end":{"line":53,"column":48}},{"start":{"line":53,"column":51},"end":{"line":53,"column":54}}]},"12":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":13},"end":{"line":54,"column":13}},{"start":{"line":54,"column":13},"end":{"line":54,"column":13}}]},"13":{"line":55,"type":"cond-expr","locations":[{"start":{"line":55,"column":45},"end":{"line":55,"column":48}},{"start":{"line":55,"column":51},"end":{"line":55,"column":54}}]},"14":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":13},"end":{"line":56,"column":13}},{"start":{"line":56,"column":13},"end":{"line":56,"column":13}}]},"15":{"line":57,"type":"cond-expr","locations":[{"start":{"line":57,"column":45},"end":{"line":57,"column":48}},{"start":{"line":57,"column":51},"end":{"line":57,"column":54}}]},"16":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":45},"end":{"line":59,"column":48}},{"start":{"line":59,"column":52},"end":{"line":59,"column":94}}]},"17":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":86},"end":{"line":59,"column":89}},{"start":{"line":59,"column":92},"end":{"line":59,"column":94}}]},"18":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":52},"end":{"line":59,"column":59}},{"start":{"line":59,"column":64},"end":{"line":59,"column":71}},{"start":{"line":59,"column":75},"end":{"line":59,"column":82}}]},"19":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"20":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":15}},{"start":{"line":61,"column":19},"end":{"line":61,"column":30}}]},"21":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":21},"end":{"line":66,"column":24}},{"start":{"line":66,"column":27},"end":{"line":66,"column":30}}]},"22":{"line":95,"type":"switch","locations":[{"start":{"line":96,"column":12},"end":{"line":106,"column":22}},{"start":{"line":107,"column":12},"end":{"line":117,"column":22}},{"start":{"line":118,"column":12},"end":{"line":128,"column":22}},{"start":{"line":129,"column":12},"end":{"line":139,"column":22}},{"start":{"line":140,"column":12},"end":{"line":150,"column":22}},{"start":{"line":151,"column":12},"end":{"line":161,"column":22}},{"start":{"line":162,"column":12},"end":{"line":172,"column":22}},{"start":{"line":173,"column":12},"end":{"line":175,"column":22}},{"start":{"line":176,"column":12},"end":{"line":194,"column":26}}]},"23":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":16},"end":{"line":97,"column":16}},{"start":{"line":97,"column":16},"end":{"line":97,"column":16}}]},"24":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":20},"end":{"line":98,"column":20}},{"start":{"line":98,"column":20},"end":{"line":98,"column":20}}]},"25":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":24},"end":{"line":98,"column":26}},{"start":{"line":98,"column":30},"end":{"line":98,"column":32}},{"start":{"line":98,"column":36},"end":{"line":98,"column":38}}]},"26":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":16}},{"start":{"line":108,"column":16},"end":{"line":108,"column":16}}]},"27":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":20},"end":{"line":109,"column":20}},{"start":{"line":109,"column":20},"end":{"line":109,"column":20}}]},"28":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":24},"end":{"line":109,"column":26}},{"start":{"line":109,"column":30},"end":{"line":109,"column":32}}]},"29":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":16},"end":{"line":119,"column":16}},{"start":{"line":119,"column":16},"end":{"line":119,"column":16}}]},"30":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":20},"end":{"line":120,"column":20}},{"start":{"line":120,"column":20},"end":{"line":120,"column":20}}]},"31":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":24},"end":{"line":120,"column":26}},{"start":{"line":120,"column":30},"end":{"line":120,"column":32}}]},"32":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":16},"end":{"line":130,"column":16}},{"start":{"line":130,"column":16},"end":{"line":130,"column":16}}]},"33":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":20},"end":{"line":131,"column":20}},{"start":{"line":131,"column":20},"end":{"line":131,"column":20}}]},"34":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":16},"end":{"line":141,"column":16}},{"start":{"line":141,"column":16},"end":{"line":141,"column":16}}]},"35":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":20},"end":{"line":142,"column":20}},{"start":{"line":142,"column":20},"end":{"line":142,"column":20}}]},"36":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":24},"end":{"line":142,"column":26}},{"start":{"line":142,"column":30},"end":{"line":142,"column":32}}]},"37":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":16},"end":{"line":152,"column":16}},{"start":{"line":152,"column":16},"end":{"line":152,"column":16}}]},"38":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":20},"end":{"line":153,"column":20}},{"start":{"line":153,"column":20},"end":{"line":153,"column":20}}]},"39":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":16},"end":{"line":163,"column":16}},{"start":{"line":163,"column":16},"end":{"line":163,"column":16}}]},"40":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":20},"end":{"line":164,"column":20}},{"start":{"line":164,"column":20},"end":{"line":164,"column":20}}]},"41":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":16},"end":{"line":177,"column":16}},{"start":{"line":177,"column":16},"end":{"line":177,"column":16}}]},"42":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":20},"end":{"line":178,"column":20}},{"start":{"line":178,"column":20},"end":{"line":178,"column":20}}]},"43":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":16},"end":{"line":184,"column":16}},{"start":{"line":184,"column":16},"end":{"line":184,"column":16}}]},"44":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":20},"end":{"line":185,"column":20}},{"start":{"line":185,"column":20},"end":{"line":185,"column":20}}]},"45":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":24},"end":{"line":185,"column":32}},{"start":{"line":185,"column":36},"end":{"line":185,"column":41}},{"start":{"line":185,"column":45},"end":{"line":185,"column":52}}]},"46":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":8},"end":{"line":196,"column":8}},{"start":{"line":196,"column":8},"end":{"line":196,"column":8}}]},"47":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"48":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":8},"end":{"line":200,"column":8}},{"start":{"line":200,"column":8},"end":{"line":200,"column":8}}]},"49":{"line":200,"type":"binary-expr","locations":[{"start":{"line":200,"column":12},"end":{"line":200,"column":15}},{"start":{"line":200,"column":19},"end":{"line":200,"column":22}}]},"50":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":8}},{"start":{"line":203,"column":8},"end":{"line":203,"column":8}}]},"51":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":8},"end":{"line":205,"column":8}},{"start":{"line":205,"column":8},"end":{"line":205,"column":8}}]}},"code":["//? if (DEBUG) {","// encodings/debug","","/**"," * Encodes this ByteBuffer to a hex encoded string with marked offsets. Offset symbols are:"," * * `<` : offset,"," * * `'` : markedOffset,"," * * `>` : limit,"," * * `|` : offset and limit,"," * * `[` : offset and markedOffset,"," * * `]` : markedOffset and limit,"," * * `!` : offset, markedOffset and limit"," * @param {boolean=} columns If `true` returns two columns hex + ascii, defaults to `false`"," * @returns {string|!Array.<string>} Debug string or array of lines if `asArray = true`"," * @expose"," * @example `>00'01 02<03` contains four bytes with `limit=0, markedOffset=1, offset=3`"," * @example `00[01 02 03>` contains four bytes with `offset=markedOffset=1, limit=4`"," * @example `00|01 02 03` contains four bytes with `offset=limit=1, markedOffset=-1`"," * @example `|` contains zero bytes with `offset=limit=0, markedOffset=-1`"," */","ByteBufferPrototype.toDebug = function(columns) {","    var i = -1,","        //? if (NODE)","        k = this.buffer.length,","        //? else","        k = this.buffer.byteLength,","        b,","        hex = \"\",","        asc = \"\",","        out = \"\";","    while (i<k) {","        if (i !== -1) {","            //? if (NODE)","            b = this.buffer[i];","            //? else if (DATAVIEW)","            b = this.view.getUint8(i);","            //? else","            b = this.view[i];","            if (b < 0x10) hex += \"0\"+b.toString(16).toUpperCase();","            else hex += b.toString(16).toUpperCase();","            if (columns)","                asc += b > 32 && b < 127 ? String.fromCharCode(b) : '.';","        }","        ++i;","        if (columns) {","            if (i > 0 && i % 16 === 0 && i !== k) {","                while (hex.length < 3*16+3) hex += \" \";","                out += hex+asc+\"\\n\";","                hex = asc = \"\";","            }","        }","        if (i === this.offset && i === this.limit)","            hex += i === this.markedOffset ? \"!\" : \"|\";","        else if (i === this.offset)","            hex += i === this.markedOffset ? \"[\" : \"<\";","        else if (i === this.limit)","            hex += i === this.markedOffset ? \"]\" : \">\";","        else","            hex += i === this.markedOffset ? \"'\" : (columns || (i !== 0 && i !== k) ? \" \" : \"\");","    }","    if (columns && hex !== \" \") {","        while (hex.length < 3*16+3)","            hex += \" \";","        out += hex + asc + \"\\n\";","    }","    return columns ? out : hex;","};","","/**"," * Decodes a hex encoded string with marked offsets to a ByteBuffer."," * @param {string} str Debug string to decode (not be generated with `columns = true`)"," * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to"," *  {@link ByteBuffer.DEFAULT_ENDIAN}."," * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to"," *  {@link ByteBuffer.DEFAULT_NOASSERT}."," * @returns {!ByteBuffer} ByteBuffer"," * @expose"," * @see ByteBuffer#toDebug"," */","ByteBuffer.fromDebug = function(str, littleEndian, noAssert) {","    /*?","    // \"<60 61 62 63>\"; // 13 = 4","    // \"60<61 62]63\"    // 11 = 4","    // \"<61 61 61>\";    // 10 = 3    =>   C = ((L+1)/3) | 0","    // \"61<61>61\";      // 8 = 3","    // \"<61 61>\";       // 7 = 2","    */","    var k = str.length,","        bb = new ByteBuffer(((k+1)/3)|0, littleEndian, noAssert);","    var i = 0, j = 0, ch, b,","        rs = false, // Require symbol next","        ho = false, hm = false, hl = false, // Already has offset (ho), markedOffset (hm), limit (hl)?","        fail = false;","    while (i<k) {","        switch (ch = str.charAt(i++)) {","            case '!':","                if (!noAssert) {","                    if (ho || hm || hl) {","                        fail = true;","                        break;","                    }","                    ho = hm = hl = true;","                }","                bb.offset = bb.markedOffset = bb.limit = j;","                rs = false;","                break;","            case '|':","                if (!noAssert) {","                    if (ho || hl) {","                        fail = true;","                        break;","                    }","                    ho = hl = true;","                }","                bb.offset = bb.limit = j;","                rs = false;","                break;","            case '[':","                if (!noAssert) {","                    if (ho || hm) {","                        fail = true;","                        break;","                    }","                    ho = hm = true;","                }","                bb.offset = bb.markedOffset = j;","                rs = false;","                break;","            case '<':","                if (!noAssert) {","                    if (ho) {","                        fail = true;","                        break;","                    }","                    ho = true;","                }","                bb.offset = j;","                rs = false;","                break;","            case ']':","                if (!noAssert) {","                    if (hl || hm) {","                        fail = true;","                        break;","                    }","                    hl = hm = true;","                }","                bb.limit = bb.markedOffset = j;","                rs = false;","                break;","            case '>':","                if (!noAssert) {","                    if (hl) {","                        fail = true;","                        break;","                    }","                    hl = true;","                }","                bb.limit = j;","                rs = false;","                break;","            case \"'\":","                if (!noAssert) {","                    if (hm) {","                        fail = true;","                        break;","                    }","                    hm = true;","                }","                bb.markedOffset = j;","                rs = false;","                break;","            case ' ':","                rs = false;","                break;","            default:","                if (!noAssert) {","                    if (rs) {","                        fail = true;","                        break;","                    }","                }","                b = parseInt(ch+str.charAt(i++), 16);","                if (!noAssert) {","                    if (isNaN(b) || b < 0 || b > 255)","                        throw TypeError(\"Illegal str: Not a debug encoded string\");","                }","                //? if (NODE)","                bb.buffer[j++] = b;","                //? else if (DATAVIEW)","                bb.view.setUint8(j++, b);","                //? else","                bb.view[j++] = b;","                rs = true;","        }","        if (fail)","            throw TypeError(\"Illegal str: Invalid symbol at \"+i);","    }","    if (!noAssert) {","        if (!ho || !hl)","            throw TypeError(\"Illegal str: Missing offset or limit\");","        //? if (NODE)","        if (j<bb.buffer.length)","        //? else","        if (j<bb.buffer.byteLength)","            throw TypeError(\"Illegal str: Not a debug encoded string (is it hex?) \"+j+\" < \"+k);","    }","    return bb;","};","","//? }"],"l":{"21":2,"22":0,"31":0,"32":0,"34":0,"36":0,"38":0,"39":0,"40":0,"41":0,"42":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"61":0,"62":0,"63":0,"64":0,"66":0,"80":0,"88":0,"90":0,"94":0,"95":0,"97":0,"98":0,"99":0,"100":0,"102":0,"104":0,"105":0,"106":0,"108":0,"109":0,"110":0,"111":0,"113":0,"115":0,"116":0,"117":0,"119":0,"120":0,"121":0,"122":0,"124":0,"126":0,"127":0,"128":0,"130":0,"131":0,"132":0,"133":0,"135":0,"137":0,"138":0,"139":0,"141":0,"142":0,"143":0,"144":0,"146":0,"148":0,"149":0,"150":0,"152":0,"153":0,"154":0,"155":0,"157":0,"159":0,"160":0,"161":0,"163":0,"164":0,"165":0,"166":0,"168":0,"170":0,"171":0,"172":0,"174":0,"175":0,"177":0,"178":0,"179":0,"180":0,"183":0,"184":0,"185":0,"186":0,"189":0,"191":0,"193":0,"194":0,"196":0,"197":0,"199":0,"200":0,"201":0,"203":0,"205":0,"206":0,"208":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/encodings/hex.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/encodings/hex.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":28},"end":{"line":11,"column":49}}},"2":{"name":"(anonymous_2)","line":45,"loc":{"start":{"line":45,"column":21},"end":{"line":45,"column":59}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":33,"column":2}},"2":{"start":{"line":12,"column":4},"end":{"line":12,"column":63}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":56}},"4":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":51}},"6":{"start":{"line":20,"column":4},"end":{"line":21,"column":10}},"7":{"start":{"line":22,"column":4},"end":{"line":30,"column":5}},"8":{"start":{"line":24,"column":8},"end":{"line":24,"column":40}},"9":{"start":{"line":26,"column":8},"end":{"line":26,"column":31}},"10":{"start":{"line":27,"column":8},"end":{"line":29,"column":38}},"11":{"start":{"line":28,"column":12},"end":{"line":28,"column":42}},"12":{"start":{"line":29,"column":13},"end":{"line":29,"column":38}},"13":{"start":{"line":31,"column":4},"end":{"line":31,"column":24}},"14":{"start":{"line":45,"column":0},"end":{"line":73,"column":2}},"15":{"start":{"line":46,"column":4},"end":{"line":51,"column":5}},"16":{"start":{"line":47,"column":8},"end":{"line":48,"column":57}},"17":{"start":{"line":48,"column":12},"end":{"line":48,"column":57}},"18":{"start":{"line":49,"column":8},"end":{"line":50,"column":71}},"19":{"start":{"line":50,"column":12},"end":{"line":50,"column":71}},"20":{"start":{"line":53,"column":4},"end":{"line":53,"column":51}},"21":{"start":{"line":54,"column":4},"end":{"line":54,"column":39}},"22":{"start":{"line":55,"column":4},"end":{"line":55,"column":32}},"23":{"start":{"line":57,"column":4},"end":{"line":59,"column":10}},"24":{"start":{"line":60,"column":4},"end":{"line":69,"column":5}},"25":{"start":{"line":61,"column":8},"end":{"line":61,"column":48}},"26":{"start":{"line":62,"column":8},"end":{"line":64,"column":76}},"27":{"start":{"line":63,"column":12},"end":{"line":64,"column":76}},"28":{"start":{"line":64,"column":16},"end":{"line":64,"column":76}},"29":{"start":{"line":66,"column":8},"end":{"line":66,"column":33}},"30":{"start":{"line":68,"column":8},"end":{"line":68,"column":25}},"31":{"start":{"line":70,"column":4},"end":{"line":70,"column":17}},"32":{"start":{"line":72,"column":4},"end":{"line":72,"column":14}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":43},"end":{"line":12,"column":54}},{"start":{"line":12,"column":57},"end":{"line":12,"column":62}}]},"2":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":39},"end":{"line":13,"column":49}},{"start":{"line":13,"column":52},"end":{"line":13,"column":55}}]},"3":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"4":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"6":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":8}},{"start":{"line":47,"column":8},"end":{"line":47,"column":8}}]},"7":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]},"8":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":62,"column":8}},{"start":{"line":62,"column":8},"end":{"line":62,"column":8}}]},"9":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":12},"end":{"line":63,"column":12}},{"start":{"line":63,"column":12},"end":{"line":63,"column":12}}]},"10":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":16},"end":{"line":63,"column":28}},{"start":{"line":63,"column":32},"end":{"line":63,"column":37}},{"start":{"line":63,"column":41},"end":{"line":63,"column":48}}]}},"code":["//? if (HEX) {","// encodings/hex","","/**"," * Encodes this ByteBuffer's contents to a hex encoded string."," * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}."," * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}."," * @returns {string} Hex encoded string"," * @expose"," */","ByteBufferPrototype.toHex = function(begin, end) {","    begin = typeof begin === 'undefined' ? this.offset : begin;","    end = typeof end === 'undefined' ? this.limit : end;","    if (!this.noAssert) {","        //? ASSERT_RANGE();","    }","    //? if (NODE)","    return this.buffer.toString(\"hex\", begin, end);","    //? else {","    var out = new Array(end - begin),","        b;","    while (begin < end) {","        //? if (DATAVIEW)","        b = this.view.getUint8(begin++);","        //? else","        b = this.view[begin++];","        if (b < 0x10)","            out.push(\"0\", b.toString(16));","        else out.push(b.toString(16));","    }","    return out.join('');","    //? }","};","","/**"," * Decodes a hex encoded string to a ByteBuffer."," * @param {string} str String to decode"," * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to"," *  {@link ByteBuffer.DEFAULT_ENDIAN}."," * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to"," *  {@link ByteBuffer.DEFAULT_NOASSERT}."," * @returns {!ByteBuffer} ByteBuffer"," * @expose"," */","ByteBuffer.fromHex = function(str, littleEndian, noAssert) {","    if (!noAssert) {","        if (typeof str !== 'string')","            throw TypeError(\"Illegal str: Not a string\");","        if (str.length % 2 !== 0)","            throw TypeError(\"Illegal str: Length not a multiple of 2\");","    }","    //? if (NODE) {","    var bb = new ByteBuffer(0, littleEndian, true);","    bb.buffer = new Buffer(str, \"hex\");","    bb.limit = bb.buffer.length;","    //? } else {","    var k = str.length,","        bb = new ByteBuffer((k / 2) | 0, littleEndian),","        b;","    for (var i=0, j=0; i<k; i+=2) {","        b = parseInt(str.substring(i, i+2), 16);","        if (!noAssert)","            if (!isFinite(b) || b < 0 || b > 255)","                throw TypeError(\"Illegal str: Contains non-hex characters\");","        //? if (DATAVIEW)","        bb.view.setUint8(j++, b);","        //? else","        bb.view[j++] = b;","    }","    bb.limit = j;","    //? }","    return bb;","};","","//? }"],"l":{"11":2,"12":0,"13":0,"14":0,"18":0,"20":0,"22":0,"24":0,"26":0,"27":0,"28":0,"29":0,"31":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"53":0,"54":0,"55":0,"57":0,"60":0,"61":0,"62":0,"63":0,"64":0,"66":0,"68":0,"70":0,"72":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/encodings/utf8.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/encodings/utf8.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":29},"end":{"line":15,"column":50}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":31},"end":{"line":25,"column":42}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":22},"end":{"line":49,"column":60}}},"4":{"name":"(anonymous_4)","line":60,"loc":{"start":{"line":60,"column":46},"end":{"line":60,"column":58}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":37,"column":2}},"2":{"start":{"line":16,"column":4},"end":{"line":16,"column":58}},"3":{"start":{"line":16,"column":38},"end":{"line":16,"column":58}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":53}},"5":{"start":{"line":17,"column":36},"end":{"line":17,"column":53}},"6":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":52}},"8":{"start":{"line":24,"column":4},"end":{"line":24,"column":11}},"9":{"start":{"line":24,"column":12},"end":{"line":34,"column":5}},"10":{"start":{"line":25,"column":8},"end":{"line":30,"column":48}},"11":{"start":{"line":27,"column":12},"end":{"line":27,"column":68}},"12":{"start":{"line":29,"column":12},"end":{"line":29,"column":59}},"13":{"start":{"line":32,"column":8},"end":{"line":33,"column":81}},"14":{"start":{"line":33,"column":12},"end":{"line":33,"column":81}},"15":{"start":{"line":35,"column":4},"end":{"line":35,"column":16}},"16":{"start":{"line":49,"column":0},"end":{"line":69,"column":2}},"17":{"start":{"line":50,"column":4},"end":{"line":52,"column":57}},"18":{"start":{"line":51,"column":8},"end":{"line":52,"column":57}},"19":{"start":{"line":52,"column":12},"end":{"line":52,"column":57}},"20":{"start":{"line":54,"column":4},"end":{"line":54,"column":55}},"21":{"start":{"line":55,"column":4},"end":{"line":55,"column":40}},"22":{"start":{"line":56,"column":4},"end":{"line":56,"column":32}},"23":{"start":{"line":58,"column":4},"end":{"line":59,"column":14}},"24":{"start":{"line":60,"column":4},"end":{"line":65,"column":7}},"25":{"start":{"line":62,"column":8},"end":{"line":62,"column":33}},"26":{"start":{"line":64,"column":8},"end":{"line":64,"column":25}},"27":{"start":{"line":66,"column":4},"end":{"line":66,"column":17}},"28":{"start":{"line":68,"column":4},"end":{"line":68,"column":14}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"3":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"4":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":33},"end":{"line":27,"column":60}},{"start":{"line":27,"column":63},"end":{"line":27,"column":67}}]},"5":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":33},"end":{"line":29,"column":51}},{"start":{"line":29,"column":54},"end":{"line":29,"column":58}}]},"6":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":8}},{"start":{"line":32,"column":8},"end":{"line":32,"column":8}}]},"7":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"8":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":8}},{"start":{"line":51,"column":8},"end":{"line":51,"column":8}}]}},"code":["//? if (UTF8) {","// utfx-embeddable","","//? include(\"../../node_modules/utfx/dist/utfx-embeddable.js\");","","// encodings/utf8","","/**"," * Encodes this ByteBuffer's contents between {@link ByteBuffer#offset} and {@link ByteBuffer#limit} to an UTF8 encoded"," *  string."," * @returns {string} Hex encoded string"," * @throws {RangeError} If `offset > limit`"," * @expose"," */","ByteBufferPrototype.toUTF8 = function(begin, end) {","    if (typeof begin === 'undefined') begin = this.offset;","    if (typeof end === 'undefined') end = this.limit;","    if (!this.noAssert) {","        //? ASSERT_RANGE();","    }","    //? if (NODE)","    return this.buffer.toString(\"utf8\", begin, end);","    //? else {","    var sd; try {","        utfx.decodeUTF8toUTF16(function() {","            //? if (DATAVIEW)","            return begin < end ? this.view.getUint8(begin++) : null;","            //? else","            return begin < end ? this.view[begin++] : null;","        }.bind(this), sd = stringDestination());","    } catch (e) {","        if (begin !== end)","            throw RangeError(\"Illegal range: Truncated data, \"+begin+\" != \"+end);","    }","    return sd();","    //? }","};","","/**"," * Decodes an UTF8 encoded string to a ByteBuffer."," * @param {string} str String to decode"," * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to"," *  {@link ByteBuffer.DEFAULT_ENDIAN}."," * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to"," *  {@link ByteBuffer.DEFAULT_NOASSERT}."," * @returns {!ByteBuffer} ByteBuffer"," * @expose"," */","ByteBuffer.fromUTF8 = function(str, littleEndian, noAssert) {","    if (!noAssert)","        if (typeof str !== 'string')","            throw TypeError(\"Illegal str: Not a string\");","    //? if (NODE) {","    var bb = new ByteBuffer(0, littleEndian, noAssert);","    bb.buffer = new Buffer(str, \"utf8\");","    bb.limit = bb.buffer.length;","    //? } else {","    var bb = new ByteBuffer(utfx.calculateUTF16asUTF8(stringSource(str), true)[1], littleEndian, noAssert),","        i = 0;","    utfx.encodeUTF16toUTF8(stringSource(str), function(b) {","        //? if (DATAVIEW)","        bb.view.setUint8(i++, b);","        //? else","        bb.view[i++] = b;","    });","    bb.limit = i;","    //? }","    return bb;","};","","//? }"],"l":{"15":2,"16":0,"17":0,"18":0,"22":0,"24":0,"25":0,"27":0,"29":0,"32":0,"33":0,"35":0,"49":0,"50":0,"51":0,"52":0,"54":0,"55":0,"56":0,"58":0,"60":0,"62":0,"64":0,"66":0,"68":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/append.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/append.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":29},"end":{"line":19,"column":64}}},"2":{"name":"(anonymous_2)","line":54,"loc":{"start":{"line":54,"column":31},"end":{"line":54,"column":56}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":42,"column":2}},"2":{"start":{"line":20,"column":4},"end":{"line":23,"column":5}},"3":{"start":{"line":21,"column":8},"end":{"line":21,"column":26}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":29}},"5":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"6":{"start":{"line":28,"column":4},"end":{"line":29,"column":51}},"7":{"start":{"line":29,"column":8},"end":{"line":29,"column":51}},"8":{"start":{"line":30,"column":4},"end":{"line":30,"column":46}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":33}},"10":{"start":{"line":31,"column":21},"end":{"line":31,"column":33}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":73}},"12":{"start":{"line":36,"column":4},"end":{"line":36,"column":113}},"13":{"start":{"line":38,"column":4},"end":{"line":38,"column":77}},"14":{"start":{"line":39,"column":4},"end":{"line":39,"column":28}},"15":{"start":{"line":41,"column":4},"end":{"line":41,"column":16}},"16":{"start":{"line":54,"column":0},"end":{"line":57,"column":2}},"17":{"start":{"line":55,"column":4},"end":{"line":55,"column":32}},"18":{"start":{"line":56,"column":4},"end":{"line":56,"column":16}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":36}},{"start":{"line":20,"column":40},"end":{"line":20,"column":68}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"4":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"5":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]}},"code":["/**"," * Appends some data to this ByteBuffer. This will overwrite any contents behind the specified offset up to the appended"," *  data's length.","//? if (NODE) {"," * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string} source Data to append. If `source` is a ByteBuffer, its"," * offsets will be modified according to the performed read operation.","//? } else {"," * @param {!ByteBuffer|!ArrayBuffer|!Uint8Array|string} source Data to append. If `source` is a ByteBuffer, its offsets"," *  will be modified according to the performed read operation.","//? }"," * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")"," * @param {number=} offset Offset to append at. Will use and increase {@link ByteBuffer#offset} by the number of bytes"," *  written if omitted."," * @returns {!ByteBuffer} this"," * @expose"," * @example A relative `<01 02>03.append(<04 05>)` will result in `<01 02 04 05>, 04 05|`"," * @example An absolute `<01 02>03.append(04 05>, 1)` will result in `<01 04>05, 04 05|`"," */","ByteBufferPrototype.append = function(source, encoding, offset) {","    if (typeof encoding === 'number' || typeof encoding !== 'string') {","        offset = encoding;","        encoding = undefined;","    }","    //? RELATIVE();","    if (!this.noAssert) {","        //? ASSERT_OFFSET();","    }","    if (!(source instanceof ByteBuffer))","        source = ByteBuffer.wrap(source, encoding);","    var length = source.limit - source.offset;","    if (length <= 0) return this; // Nothing to append","    //? ENSURE_CAPACITY('length');","    //? if (NODE)","    source.buffer.copy(this.buffer, offset, source.offset, source.limit);","    //? else if (DATAVIEW)","    new Uint8Array(this.buffer, offset).set(new Uint8Array(source.buffer).subarray(source.offset, source.limit));","    //? else","    this.view.set(source.view.subarray(source.offset, source.limit), offset);","    source.offset += length;","    //? RELATIVE('length');","    return this;","};","","/**"," * Appends this ByteBuffer's contents to another ByteBuffer. This will overwrite any contents at and after the","    specified offset up to the length of this ByteBuffer's data."," * @param {!ByteBuffer} target Target ByteBuffer"," * @param {number=} offset Offset to append to. Will use and increase {@link ByteBuffer#offset} by the number of bytes"," *  read if omitted."," * @returns {!ByteBuffer} this"," * @expose"," * @see ByteBuffer#append"," */","ByteBufferPrototype.appendTo = function(target, offset) {","    target.append(this, offset);","    return this;","};","",""],"l":{"19":2,"20":0,"21":0,"22":0,"25":0,"28":0,"29":0,"30":0,"31":0,"34":0,"36":0,"38":0,"39":0,"41":0,"54":0,"55":0,"56":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/assert.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/assert.js","s":{"1":2,"2":0,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":29},"end":{"line":8,"column":46}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":11,"column":2}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":28}},"3":{"start":{"line":10,"column":4},"end":{"line":10,"column":16}}},"branchMap":{},"code":["/**"," * Enables or disables assertions of argument types and offsets. Assertions are enabled by default but you can opt to"," *  disable them if your code already makes sure that everything is valid."," * @param {boolean} assert `true` to enable assertions, otherwise `false`"," * @returns {!ByteBuffer} this"," * @expose"," */","ByteBufferPrototype.assert = function(assert) {","    this.noAssert = !assert;","    return this;","};","",""],"l":{"8":2,"9":0,"10":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/capacity.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/capacity.js","s":{"1":2,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":31},"end":{"line":6,"column":42}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":8,"column":2}},"2":{"start":{"line":7,"column":4},"end":{"line":7,"column":28}}},"branchMap":{},"code":["/**"," * Gets the capacity of this ByteBuffer's backing buffer."," * @returns {number} Capacity of the backing buffer"," * @expose"," */","ByteBufferPrototype.capacity = function() {","    return /*?= CAPACITY */;","};",""],"l":{"6":2,"7":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/clone.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/clone.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":28},"end":{"line":8,"column":43}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":33,"column":2}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":65}},"3":{"start":{"line":10,"column":4},"end":{"line":28,"column":5}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":33}},"6":{"start":{"line":14,"column":8},"end":{"line":14,"column":27}},"7":{"start":{"line":16,"column":8},"end":{"line":16,"column":60}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":51}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":42}},"10":{"start":{"line":21,"column":8},"end":{"line":21,"column":44}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":32}},"12":{"start":{"line":27,"column":8},"end":{"line":27,"column":28}},"13":{"start":{"line":29,"column":4},"end":{"line":29,"column":28}},"14":{"start":{"line":30,"column":4},"end":{"line":30,"column":40}},"15":{"start":{"line":31,"column":4},"end":{"line":31,"column":26}},"16":{"start":{"line":32,"column":4},"end":{"line":32,"column":14}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]}},"code":["/**"," * Creates a cloned instance of this ByteBuffer, preset with this ByteBuffer's values for {@link ByteBuffer#offset},"," *  {@link ByteBuffer#markedOffset} and {@link ByteBuffer#limit}."," * @param {boolean=} copy Whether to copy the backing buffer or to return another view on the same, defaults to `false`"," * @returns {!ByteBuffer} Cloned instance"," * @expose"," */","ByteBufferPrototype.clone = function(copy) {","    var bb = new ByteBuffer(0, this.littleEndian, this.noAssert);","    if (copy) {","        //? if (NODE) {","        var buffer = new Buffer(this.buffer.length);","        this.buffer.copy(buffer);","        bb.buffer = buffer;","        //? } else {","        bb.buffer = new ArrayBuffer(this.buffer.byteLength);","        //? if (DATAVIEW) {","        new Uint8Array(bb.buffer).set(this.buffer);","        bb.view = new DataView(bb.buffer);","        //? } else {","        bb.view = new Uint8Array(bb.buffer);","        //? }","        //? }","    } else {","        bb.buffer = this.buffer;","        //? if (!NODE)","        bb.view = this.view;","    }","    bb.offset = this.offset;","    bb.markedOffset = this.markedOffset;","    bb.limit = this.limit;","    return bb;","};","",""],"l":{"8":2,"9":0,"10":0,"12":0,"13":0,"14":0,"16":0,"18":0,"19":0,"21":0,"25":0,"27":0,"29":0,"30":0,"31":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/fill.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/fill.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":27},"end":{"line":12,"column":55}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":34,"column":2}},"2":{"start":{"line":14,"column":4},"end":{"line":15,"column":36}},"3":{"start":{"line":15,"column":8},"end":{"line":15,"column":36}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":58}},"5":{"start":{"line":16,"column":38},"end":{"line":16,"column":58}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":53}},"7":{"start":{"line":17,"column":36},"end":{"line":17,"column":53}},"8":{"start":{"line":18,"column":4},"end":{"line":21,"column":5}},"9":{"start":{"line":22,"column":4},"end":{"line":23,"column":20}},"10":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"11":{"start":{"line":25,"column":4},"end":{"line":25,"column":40}},"12":{"start":{"line":26,"column":4},"end":{"line":26,"column":16}},"13":{"start":{"line":28,"column":4},"end":{"line":28,"column":59}},"14":{"start":{"line":28,"column":24},"end":{"line":28,"column":59}},"15":{"start":{"line":30,"column":4},"end":{"line":30,"column":51}},"16":{"start":{"line":30,"column":24},"end":{"line":30,"column":51}},"17":{"start":{"line":32,"column":4},"end":{"line":32,"column":38}},"18":{"start":{"line":32,"column":18},"end":{"line":32,"column":38}},"19":{"start":{"line":33,"column":4},"end":{"line":33,"column":16}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":8},"end":{"line":14,"column":33}},{"start":{"line":14,"column":37},"end":{"line":14,"column":53}}]},"3":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"4":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"5":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"6":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"7":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]}},"code":["/**"," * Overwrites this ByteBuffer's contents with the specified value. Contents are the bytes between"," *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}."," * @param {number|string} value Byte value to fill with. If given as a string, the first character is used."," * @param {number=} begin Begin offset. Will use and increase {@link ByteBuffer#offset} by the number of bytes"," *  written if omitted. defaults to {@link ByteBuffer#offset}."," * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}."," * @returns {!ByteBuffer} this"," * @expose"," * @example `someByteBuffer.clear().fill(0)` fills the entire backing buffer with zeroes"," */","ByteBufferPrototype.fill = function(value, begin, end) {","    //? RELATIVE(undefined, 'begin');","    if (typeof value === 'string' && value.length > 0)","        value = value.charCodeAt(0);","    if (typeof begin === 'undefined') begin = this.offset;","    if (typeof end === 'undefined') end = this.limit;","    if (!this.noAssert) {","        //? ASSERT_INTEGER('value');","        //? ASSERT_RANGE();","    }","    if (begin >= end)","        return this; // Nothing to fill","    //? if (NODE) {","    this.buffer.fill(value, begin, end);","    begin = end;","    //? } else if (DATAVIEW) {","    while (begin < end) this.view.setUint8(begin++, value);","    //? } else {","    while (begin < end) this.view[begin++] = value;","    //? }","    if (relative) this.offset = begin;","    return this;","};","",""],"l":{"12":2,"14":0,"15":0,"16":0,"17":0,"18":0,"22":0,"23":0,"25":0,"26":0,"28":0,"30":0,"32":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/flip.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/flip.js","s":{"1":2,"2":0,"3":0,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":27},"end":{"line":7,"column":38}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":11,"column":2}},"2":{"start":{"line":8,"column":4},"end":{"line":8,"column":29}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":20}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":16}}},"branchMap":{},"code":["/**"," * Makes this ByteBuffer ready for a new sequence of write or relative read operations. Sets `limit = offset` and"," *  `offset = 0`. Make sure always to flip a ByteBuffer when all relative read or write operations are complete."," * @returns {!ByteBuffer} this"," * @expose"," */","ByteBufferPrototype.flip = function() {","    this.limit = this.offset;","    this.offset = 0;","    return this;","};",""],"l":{"7":2,"8":0,"9":0,"10":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/mark.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/mark.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":27},"end":{"line":10,"column":44}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":17,"column":2}},"2":{"start":{"line":11,"column":4},"end":{"line":11,"column":66}},"3":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":31}},"5":{"start":{"line":16,"column":4},"end":{"line":16,"column":16}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":45},"end":{"line":11,"column":56}},{"start":{"line":11,"column":59},"end":{"line":11,"column":65}}]},"2":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]}},"code":["/**"," * Marks an offset on this ByteBuffer to be used later."," * @param {number=} offset Offset to mark. Defaults to {@link ByteBuffer#offset}."," * @returns {!ByteBuffer} this"," * @throws {TypeError} If `offset` is not a valid number"," * @throws {RangeError} If `offset` is out of bounds"," * @see ByteBuffer#reset"," * @expose"," */","ByteBufferPrototype.mark = function(offset) {","    offset = typeof offset === 'undefined' ? this.offset : offset;","    if (!this.noAssert) {","        //? ASSERT_OFFSET();","    }","    this.markedOffset = offset;","    return this;","};",""],"l":{"10":2,"11":0,"12":0,"15":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/order.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/order.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":28},"end":{"line":7,"column":51}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":25},"end":{"line":22,"column":48}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":25},"end":{"line":33,"column":45}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":14,"column":2}},"2":{"start":{"line":8,"column":4},"end":{"line":11,"column":5}},"3":{"start":{"line":9,"column":8},"end":{"line":10,"column":67}},"4":{"start":{"line":10,"column":12},"end":{"line":10,"column":67}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":39}},"6":{"start":{"line":13,"column":4},"end":{"line":13,"column":16}},"7":{"start":{"line":22,"column":0},"end":{"line":25,"column":2}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":84}},"9":{"start":{"line":24,"column":4},"end":{"line":24,"column":16}},"10":{"start":{"line":33,"column":0},"end":{"line":36,"column":2}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":78}},"12":{"start":{"line":35,"column":4},"end":{"line":35,"column":16}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]},"2":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":9,"column":8}},{"start":{"line":9,"column":8},"end":{"line":9,"column":8}}]},"3":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":62},"end":{"line":23,"column":76}},{"start":{"line":23,"column":79},"end":{"line":23,"column":83}}]},"4":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":59},"end":{"line":34,"column":69}},{"start":{"line":34,"column":72},"end":{"line":34,"column":77}}]}},"code":["/**"," * Sets the byte order."," * @param {boolean} littleEndian `true` for little endian byte order, `false` for big endian"," * @returns {!ByteBuffer} this"," * @expose"," */","ByteBufferPrototype.order = function(littleEndian) {","    if (!this.noAssert) {","        if (typeof littleEndian !== 'boolean')","            throw TypeError(\"Illegal littleEndian: Not a boolean\");","    }","    this.littleEndian = !!littleEndian;","    return this;","};","","/**"," * Switches (to) little endian byte order."," * @param {boolean=} littleEndian Defaults to `true`, otherwise uses big endian"," * @returns {!ByteBuffer} this"," * @expose"," */","ByteBufferPrototype.LE = function(littleEndian) {","    this.littleEndian = typeof littleEndian !== 'undefined' ? !!littleEndian : true;","    return this;","};","","/**"," * Switches (to) big endian byte order."," * @param {boolean=} bigEndian Defaults to `true`, otherwise uses little endian"," * @returns {!ByteBuffer} this"," * @expose"," */","ByteBufferPrototype.BE = function(bigEndian) {","    this.littleEndian = typeof bigEndian !== 'undefined' ? !bigEndian : false;","    return this;","};",""],"l":{"7":2,"8":0,"9":0,"10":0,"12":0,"13":0,"22":0,"23":0,"24":0,"33":0,"34":0,"35":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/prepend.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/prepend.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":30},"end":{"line":20,"column":65}}},"2":{"name":"(anonymous_2)","line":84,"loc":{"start":{"line":84,"column":32},"end":{"line":84,"column":57}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":71,"column":2}},"2":{"start":{"line":21,"column":4},"end":{"line":24,"column":5}},"3":{"start":{"line":22,"column":8},"end":{"line":22,"column":26}},"4":{"start":{"line":23,"column":8},"end":{"line":23,"column":29}},"5":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"6":{"start":{"line":29,"column":4},"end":{"line":30,"column":51}},"7":{"start":{"line":30,"column":8},"end":{"line":30,"column":51}},"8":{"start":{"line":31,"column":4},"end":{"line":31,"column":43}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":30}},"10":{"start":{"line":32,"column":18},"end":{"line":32,"column":30}},"11":{"start":{"line":33,"column":4},"end":{"line":33,"column":28}},"12":{"start":{"line":34,"column":4},"end":{"line":58,"column":5}},"13":{"start":{"line":36,"column":8},"end":{"line":36,"column":59}},"14":{"start":{"line":37,"column":8},"end":{"line":37,"column":66}},"15":{"start":{"line":38,"column":8},"end":{"line":38,"column":29}},"16":{"start":{"line":40,"column":8},"end":{"line":40,"column":68}},"17":{"start":{"line":41,"column":8},"end":{"line":41,"column":47}},"18":{"start":{"line":42,"column":8},"end":{"line":42,"column":97}},"19":{"start":{"line":43,"column":8},"end":{"line":43,"column":29}},"20":{"start":{"line":44,"column":8},"end":{"line":44,"column":41}},"21":{"start":{"line":46,"column":8},"end":{"line":46,"column":68}},"22":{"start":{"line":47,"column":8},"end":{"line":47,"column":42}},"23":{"start":{"line":48,"column":8},"end":{"line":48,"column":74}},"24":{"start":{"line":49,"column":8},"end":{"line":49,"column":29}},"25":{"start":{"line":50,"column":8},"end":{"line":50,"column":25}},"26":{"start":{"line":52,"column":8},"end":{"line":52,"column":28}},"27":{"start":{"line":53,"column":8},"end":{"line":53,"column":62}},"28":{"start":{"line":53,"column":36},"end":{"line":53,"column":62}},"29":{"start":{"line":54,"column":8},"end":{"line":54,"column":27}},"30":{"start":{"line":55,"column":8},"end":{"line":55,"column":23}},"31":{"start":{"line":57,"column":8},"end":{"line":57,"column":52}},"32":{"start":{"line":61,"column":4},"end":{"line":61,"column":79}},"33":{"start":{"line":63,"column":4},"end":{"line":63,"column":101}},"34":{"start":{"line":65,"column":4},"end":{"line":65,"column":83}},"35":{"start":{"line":67,"column":4},"end":{"line":67,"column":33}},"36":{"start":{"line":68,"column":4},"end":{"line":69,"column":27}},"37":{"start":{"line":69,"column":8},"end":{"line":69,"column":27}},"38":{"start":{"line":70,"column":4},"end":{"line":70,"column":16}},"39":{"start":{"line":84,"column":0},"end":{"line":87,"column":2}},"40":{"start":{"line":85,"column":4},"end":{"line":85,"column":33}},"41":{"start":{"line":86,"column":4},"end":{"line":86,"column":16}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":36}},{"start":{"line":21,"column":40},"end":{"line":21,"column":68}}]},"3":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"5":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"6":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"7":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":8}},{"start":{"line":53,"column":8},"end":{"line":53,"column":8}}]},"8":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]}},"code":["/**"," * Prepends some data to this ByteBuffer. This will overwrite any contents before the specified offset up to the"," *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer"," *  will be resized and its contents moved accordingly."," //? if (NODE) {"," * @param {!ByteBuffer|string||!Buffer} source Data to prepend. If `source` is a ByteBuffer, its offset will be modified"," *  according to the performed read operation."," //? } else {"," * @param {!ByteBuffer|string|!ArrayBuffer} source Data to prepend. If `source` is a ByteBuffer, its offset will be"," *  modified according to the performed read operation."," //? }"," * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")"," * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes"," *  prepended if omitted."," * @returns {!ByteBuffer} this"," * @expose"," * @example A relative `00<01 02 03>.prepend(<04 05>)` results in `<04 05 01 02 03>, 04 05|`"," * @example An absolute `00<01 02 03>.prepend(<04 05>, 2)` results in `04<05 02 03>, 04 05|`"," */","ByteBufferPrototype.prepend = function(source, encoding, offset) {","    if (typeof encoding === 'number' || typeof encoding !== 'string') {","        offset = encoding;","        encoding = undefined;","    }","    //? RELATIVE();","    if (!this.noAssert) {","        //? ASSERT_OFFSET();","    }","    if (!(source instanceof ByteBuffer))","        source = ByteBuffer.wrap(source, encoding);","    var len = source.limit - source.offset;","    if (len <= 0) return this; // Nothing to prepend","    var diff = len - offset;","    if (diff > 0) { // Not enough space before offset, so resize + move","        //? if (NODE) {","        var buffer = new Buffer(this.buffer.length + diff);","        this.buffer.copy(buffer, len, offset, this.buffer.length);","        this.buffer = buffer;","        //? } else if (DATAVIEW) {","        var buffer = new ArrayBuffer(this.buffer.byteLength + diff);","        var arrayView = new Uint8Array(buffer);","        arrayView.set(new Uint8Array(this.buffer).subarray(offset, this.buffer.byteLength), len);","        this.buffer = buffer;","        this.view = new DataView(buffer);","        //? } else {","        var buffer = new ArrayBuffer(this.buffer.byteLength + diff);","        var view = new Uint8Array(buffer);","        view.set(this.view.subarray(offset, this.buffer.byteLength), len);","        this.buffer = buffer;","        this.view = view;","        //? }","        this.offset += diff;","        if (this.markedOffset >= 0) this.markedOffset += diff;","        this.limit += diff;","        offset += diff;","    }/*? if (!NODE) { */ else {","        var arrayView = new Uint8Array(this.buffer);","    }","    //? }","    //? if (NODE)","    source.buffer.copy(this.buffer, offset - len, source.offset, source.limit);","    //? else if (DATAVIEW)","    arrayView.set(new Uint8Array(source.buffer).subarray(source.offset, source.limit), offset - len);","    //? else","    this.view.set(source.view.subarray(source.offset, source.limit), offset - len);","","    source.offset = source.limit;","    if (relative)","        this.offset -= len;","    return this;","};","","/**"," * Prepends this ByteBuffer to another ByteBuffer. This will overwrite any contents before the specified offset up to the"," *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer"," *  will be resized and its contents moved accordingly."," * @param {!ByteBuffer} target Target ByteBuffer"," * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes"," *  prepended if omitted."," * @returns {!ByteBuffer} this"," * @expose"," * @see ByteBuffer#prepend"," */","ByteBufferPrototype.prependTo = function(target, offset) {","    target.prepend(this, offset);","    return this;","};",""],"l":{"20":2,"21":0,"22":0,"23":0,"26":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"40":0,"41":0,"42":0,"43":0,"44":0,"46":0,"47":0,"48":0,"49":0,"50":0,"52":0,"53":0,"54":0,"55":0,"57":0,"61":0,"63":0,"65":0,"67":0,"68":0,"69":0,"70":0,"84":0,"85":0,"86":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/printDebug.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/printDebug.js","s":{"1":2,"2":0,"3":0,"4":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":33},"end":{"line":7,"column":47}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":14,"column":2}},"2":{"start":{"line":8,"column":4},"end":{"line":8,"column":67}},"3":{"start":{"line":8,"column":35},"end":{"line":8,"column":67}},"4":{"start":{"line":9,"column":4},"end":{"line":13,"column":6}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]}},"code":["//? if (DEBUG) {","/**"," * Prints debug information about this ByteBuffer's contents."," * @param {function(string)=} out Output function to call, defaults to console.log"," * @expose"," */","ByteBufferPrototype.printDebug = function(out) {","    if (typeof out !== 'function') out = console.log.bind(console);","    out(","        this.toString()+\"\\n\"+","        \"-------------------------------------------------------------------\\n\"+","        this.toDebug(/* columns */ true)","    );","};","","//? }",""],"l":{"7":2,"8":0,"9":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/remaining.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/remaining.js","s":{"1":2,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":43}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":9,"column":2}},"2":{"start":{"line":8,"column":4},"end":{"line":8,"column":36}}},"branchMap":{},"code":["/**"," * Gets the number of remaining readable bytes. Contents are the bytes between {@link ByteBuffer#offset} and"," *  {@link ByteBuffer#limit}, so this returns `limit - offset`."," * @returns {number} Remaining readable bytes. May be negative if `offset > limit`."," * @expose"," */","ByteBufferPrototype.remaining = function() {","    return this.limit - this.offset;","};",""],"l":{"7":2,"8":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/reset.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/reset.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":28},"end":{"line":9,"column":39}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":17,"column":2}},"2":{"start":{"line":10,"column":4},"end":{"line":15,"column":5}},"3":{"start":{"line":11,"column":8},"end":{"line":11,"column":40}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":31}},"5":{"start":{"line":14,"column":8},"end":{"line":14,"column":24}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":16}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]}},"code":["/**"," * Resets this ByteBuffer's {@link ByteBuffer#offset}. If an offset has been marked through {@link ByteBuffer#mark}"," *  before, `offset` will be set to {@link ByteBuffer#markedOffset}, which will then be discarded. If no offset has been"," *  marked, sets `offset = 0`."," * @returns {!ByteBuffer} this"," * @see ByteBuffer#mark"," * @expose"," */","ByteBufferPrototype.reset = function() {","    if (this.markedOffset >= 0) {","        this.offset = this.markedOffset;","        this.markedOffset = -1;","    } else {","        this.offset = 0;","    }","    return this;","};",""],"l":{"9":2,"10":0,"11":0,"12":0,"14":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/resize.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/resize.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":29},"end":{"line":10,"column":48}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":39,"column":2}},"2":{"start":{"line":11,"column":4},"end":{"line":15,"column":5}},"3":{"start":{"line":13,"column":8},"end":{"line":14,"column":65}},"4":{"start":{"line":14,"column":12},"end":{"line":14,"column":65}},"5":{"start":{"line":17,"column":4},"end":{"line":21,"column":5}},"6":{"start":{"line":18,"column":8},"end":{"line":18,"column":42}},"7":{"start":{"line":19,"column":8},"end":{"line":19,"column":33}},"8":{"start":{"line":20,"column":8},"end":{"line":20,"column":29}},"9":{"start":{"line":23,"column":4},"end":{"line":36,"column":5}},"10":{"start":{"line":25,"column":8},"end":{"line":25,"column":47}},"11":{"start":{"line":26,"column":8},"end":{"line":26,"column":64}},"12":{"start":{"line":27,"column":8},"end":{"line":27,"column":29}},"13":{"start":{"line":28,"column":8},"end":{"line":28,"column":41}},"14":{"start":{"line":30,"column":8},"end":{"line":30,"column":47}},"15":{"start":{"line":31,"column":8},"end":{"line":31,"column":42}},"16":{"start":{"line":32,"column":8},"end":{"line":32,"column":28}},"17":{"start":{"line":33,"column":8},"end":{"line":33,"column":29}},"18":{"start":{"line":34,"column":8},"end":{"line":34,"column":25}},"19":{"start":{"line":38,"column":4},"end":{"line":38,"column":16}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":11,"column":4}},{"start":{"line":11,"column":4},"end":{"line":11,"column":4}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":8}},{"start":{"line":13,"column":8},"end":{"line":13,"column":8}}]},"3":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"4":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]}},"code":["/**"," * Resizes this ByteBuffer to be backed by a buffer of at least the given capacity. Will do nothing if already that"," *  large or larger."," * @param {number} capacity Capacity required"," * @returns {!ByteBuffer} this"," * @throws {TypeError} If `capacity` is not a number"," * @throws {RangeError} If `capacity < 0`"," * @expose"," */","ByteBufferPrototype.resize = function(capacity) {","    if (!this.noAssert) {","        //? ASSERT_INTEGER('capacity');","        if (capacity < 0)","            throw RangeError(\"Illegal capacity: 0 <= \"+capacity);","    }","    //? if (NODE) {","    if (this.buffer.length < capacity) {","        var buffer = new Buffer(capacity);","        this.buffer.copy(buffer);","        this.buffer = buffer;","    }","    //? } else {","    if (this.buffer.byteLength < capacity) {","        //? if (DATAVIEW) {","        var buffer = new ArrayBuffer(capacity);","        new Uint8Array(buffer).set(new Uint8Array(this.buffer));","        this.buffer = buffer;","        this.view = new DataView(buffer);","        //? } else {","        var buffer = new ArrayBuffer(capacity);","        var view = new Uint8Array(buffer);","        view.set(this.view);","        this.buffer = buffer;","        this.view = view;","        //? }","    }","    //? }","    return this;","};",""],"l":{"10":2,"11":0,"13":0,"14":0,"17":0,"18":0,"19":0,"20":0,"23":0,"25":0,"26":0,"27":0,"28":0,"30":0,"31":0,"32":0,"33":0,"34":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/reverse.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/reverse.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":30},"end":{"line":8,"column":51}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":25,"column":2}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":58}},"3":{"start":{"line":9,"column":38},"end":{"line":9,"column":58}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":53}},"5":{"start":{"line":10,"column":36},"end":{"line":10,"column":53}},"6":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"7":{"start":{"line":14,"column":4},"end":{"line":15,"column":20}},"8":{"start":{"line":15,"column":8},"end":{"line":15,"column":20}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":64}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":83}},"11":{"start":{"line":20,"column":4},"end":{"line":20,"column":42}},"12":{"start":{"line":22,"column":4},"end":{"line":22,"column":65}},"13":{"start":{"line":24,"column":4},"end":{"line":24,"column":16}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":9,"column":4}},{"start":{"line":9,"column":4},"end":{"line":9,"column":4}}]},"2":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]},"3":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":11,"column":4}},{"start":{"line":11,"column":4},"end":{"line":11,"column":4}}]},"4":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]}},"code":["/**"," * Reverses this ByteBuffer's contents."," * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}"," * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}"," * @returns {!ByteBuffer} this"," * @expose"," */","ByteBufferPrototype.reverse = function(begin, end) {","    if (typeof begin === 'undefined') begin = this.offset;","    if (typeof end === 'undefined') end = this.limit;","    if (!this.noAssert) {","        //? ASSERT_RANGE();","    }","    if (begin === end)","        return this; // Nothing to reverse","    //? if (NODE)","    Array.prototype.reverse.call(this.buffer.slice(begin, end));","    //? else if (DATAVIEW) {","    Array.prototype.reverse.call(new Uint8Array(this.buffer).subarray(begin, end));","    this.view = new DataView(this.buffer); // FIXME: Why exactly is this necessary?","    //? } else {","    Array.prototype.reverse.call(this.view.subarray(begin, end));","    //? }","    return this;","};",""],"l":{"8":2,"9":0,"10":0,"11":0,"14":0,"15":0,"17":0,"19":0,"20":0,"22":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/slice.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/slice.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":28},"end":{"line":8,"column":49}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":18,"column":2}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":58}},"3":{"start":{"line":9,"column":38},"end":{"line":9,"column":58}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":53}},"5":{"start":{"line":10,"column":36},"end":{"line":10,"column":53}},"6":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":26}},"8":{"start":{"line":15,"column":4},"end":{"line":15,"column":22}},"9":{"start":{"line":16,"column":4},"end":{"line":16,"column":19}},"10":{"start":{"line":17,"column":4},"end":{"line":17,"column":14}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":9,"column":4}},{"start":{"line":9,"column":4},"end":{"line":9,"column":4}}]},"2":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]},"3":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":11,"column":4}},{"start":{"line":11,"column":4},"end":{"line":11,"column":4}}]}},"code":["/**"," * Slices this ByteBuffer by creating a cloned instance with `offset = begin` and `limit = end`."," * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}."," * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}."," * @returns {!ByteBuffer} Clone of this ByteBuffer with slicing applied, backed by the same {@link ByteBuffer#buffer}"," * @expose"," */","ByteBufferPrototype.slice = function(begin, end) {","    if (typeof begin === 'undefined') begin = this.offset;","    if (typeof end === 'undefined') end = this.limit;","    if (!this.noAssert) {","        //? ASSERT_RANGE();","    }","    var bb = this.clone();","    bb.offset = begin;","    bb.limit = end;","    return bb;","};",""],"l":{"8":2,"9":0,"10":0,"11":0,"14":0,"15":0,"16":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/toBuffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-bytebuffer/node_modules/bytebuffer/src/methods/toBuffer.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":31},"end":{"line":13,"column":51}}},"2":{"name":"(anonymous_2)","line":49,"loc":{"start":{"line":49,"column":36},"end":{"line":49,"column":47}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":41,"column":2}},"2":{"start":{"line":14,"column":4},"end":{"line":15,"column":27}},"3":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"4":{"start":{"line":20,"column":4},"end":{"line":29,"column":5}},"5":{"start":{"line":21,"column":8},"end":{"line":21,"column":48}},"6":{"start":{"line":22,"column":8},"end":{"line":22,"column":51}},"7":{"start":{"line":23,"column":8},"end":{"line":23,"column":22}},"8":{"start":{"line":25,"column":8},"end":{"line":28,"column":52}},"9":{"start":{"line":26,"column":12},"end":{"line":26,"column":31}},"10":{"start":{"line":28,"column":12},"end":{"line":28,"column":52}},"11":{"start":{"line":33,"column":4},"end":{"line":34,"column":27}},"12":{"start":{"line":34,"column":8},"end":{"line":34,"column":27}},"13":{"start":{"line":35,"column":4},"end":{"line":36,"column":28}},"14":{"start":{"line":36,"column":8},"end":{"line":36,"column":28}},"15":{"start":{"line":37,"column":4},"end":{"line":37,"column":49}},"16":{"start":{"line":38,"column":4},"end":{"line":38,"column":87}},"17":{"start":{"line":39,"column":4},"end":{"line":39,"column":18}},"18":{"start":{"line":49,"column":0},"end":{"line":64,"column":2}},"19":{"start":{"line":50,"column":4},"end":{"line":51,"column":27}},"20":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"21":{"start":{"line":55,"column":4},"end":{"line":55,"column":45}},"22":{"start":{"line":56,"column":4},"end":{"line":62,"column":5}},"23":{"start":{"line":57,"column":8},"end":{"line":57,"column":50}},"24":{"start":{"line":59,"column":8},"end":{"line":59,"column":37}},"25":{"start":{"line":60,"column":8},"end":{"line":61,"column":43}},"26":{"start":{"line":61,"column":12},"end":{"line":61,"column":43}},"27":{"start":{"line":63,"column":4},"end":{"line":63,"column":14}},"28":{"start":{"line":75,"column":0},"end":{"line":75,"column":65}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":25,"column":8}},{"start":{"line":25,"column":8},"end":{"line":25,"column":8}}]},"4":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":24}},{"start":{"line":25,"column":28},"end":{"line":25,"column":56}}]},"5":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"6":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":8},"end":{"line":33,"column":18}},{"start":{"line":33,"column":22},"end":{"line":33,"column":34}},{"start":{"line":33,"column":38},"end":{"line":33,"column":70}}]},"7":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"8":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"9":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]}},"code":["/**"," * Returns a copy of the backing buffer that contains this ByteBuffer's contents. Contents are the bytes between"," *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}."," * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory if"," *  possible. Defaults to `false`","//? if (NODE) {"," * @returns {!Buffer} Contents as a Buffer","//? } else {"," * @returns {!ArrayBuffer} Contents as an ArrayBuffer","//? }"," * @expose"," */","ByteBufferPrototype.toBuffer = function(forceCopy) {","    var offset = this.offset,","        limit = this.limit;","    if (!this.noAssert) {","        //? ASSERT_RANGE('offset', 'limit');","    }","    //? if (NODE) {","    if (forceCopy) {","        var buffer = new Buffer(limit - offset);","        this.buffer.copy(buffer, 0, offset, limit);","        return buffer;","    } else {","        if (offset === 0 && limit === this.buffer.length)","            return this.buffer;","        else","            return this.buffer.slice(offset, limit);","    }","    //? } else {","    // NOTE: It's not possible to have another ArrayBuffer reference the same memory as the backing buffer. This is","    // possible with Uint8Array#subarray only, but we have to return an ArrayBuffer by contract. So:","    if (!forceCopy && offset === 0 && limit === this.buffer.byteLength)","        return this.buffer;","    if (offset === limit)","        return EMPTY_BUFFER;","    var buffer = new ArrayBuffer(limit - offset);","    new Uint8Array(buffer).set(new Uint8Array(this.buffer).subarray(offset, limit), 0);","    return buffer;","    //? }","};","","//? if (NODE) {","/**"," * Returns a copy of the backing buffer compacted to contain this ByteBuffer's contents. Contents are the bytes between"," *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}."," * @returns {!ArrayBuffer} Contents as an ArrayBuffer"," */","ByteBufferPrototype.toArrayBuffer = function() {","    var offset = this.offset,","        limit = this.limit;","    if (!this.noAssert) {","        //? ASSERT_RANGE('offset', 'limit');","    }","    var ab = new ArrayBuffer(limit - offset);","    if (memcpy) { // Fast","        memcpy(ab, 0, this.buffer, offset, limit);","    } else { // Slow","        var dst = new Uint8Array(ab);","        for (var i=offset; i<limit; ++i)","            dst[i-offset] = this.buffer[i];","    }","    return ab;","};","//? } else {","/**"," * Returns a raw buffer compacted to contain this ByteBuffer's contents. Contents are the bytes between"," *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. This is an alias of {@link ByteBuffer#toBuffer}."," * @function"," * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory."," *  Defaults to `false`"," * @returns {!ArrayBuffer} Contents as an ArrayBuffer"," * @expose"," */","ByteBufferPrototype.toArrayBuffer = ByteBufferPrototype.toBuffer;","//? }","",""],"l":{"13":2,"14":0,"16":0,"20":0,"21":0,"22":0,"23":0,"25":0,"26":0,"28":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"49":0,"50":0,"52":0,"55":0,"56":0,"57":0,"59":0,"60":0,"61":0,"63":0,"75":0}}}